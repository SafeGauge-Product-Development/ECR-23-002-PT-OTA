

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Nov 14 15:31:10 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18LF46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	_reservedFlashDataMemory_const,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	_constReserveMemory_const,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    11                           	psect	_codeRevisionNumber_const,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66                           	dabs	1,0x1,64,_reservedFileRegisters
    67  0000                     
    68                           ; Generated 09/02/2023 GMT
    69                           ; 
    70                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18LF46K40 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataCOMRAM
   104  006394                     __pidataCOMRAM:
   105                           	callstack 0
   106                           
   107                           ;initializer for _blueState
   108  006394  01                 	db	1
   109                           
   110                           	psect	idataBANK0
   111  0062E6                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for _calibrationColours
   115  0062E6  07                 	db	7
   116  0062E7  01                 	db	1
   117  0062E8  04                 	db	4
   118  0062E9  03                 	db	3
   119  0062EA  02                 	db	2
   120  0062EB  05                 	db	5
   121  0062EC  06                 	db	6
   122  0062ED  00                 	db	0
   123                           
   124                           ;initializer for XBLE_state_manage@historyMsb
   125  0062EE  FF                 	db	255
   126  0062EF  FF                 	db	255
   127  0062F0  FF                 	db	255
   128  0062F1  FF                 	db	255
   129  0062F2  FF                 	db	255
   130  0062F3  FF                 	db	255
   131  0062F4  FF                 	db	255
   132  0062F5  FF                 	db	255
   133                           
   134                           ;initializer for XBLE_state_manage@historyLsb
   135  0062F6  FF                 	db	255
   136  0062F7  FF                 	db	255
   137  0062F8  FF                 	db	255
   138  0062F9  FF                 	db	255
   139  0062FA  FF                 	db	255
   140  0062FB  FF                 	db	255
   141  0062FC  FF                 	db	255
   142  0062FD  FF                 	db	255
   143                           
   144                           ;initializer for _bleJustReset
   145  0062FE  01                 	db	1
   146                           
   147                           	psect	idataBANK1
   148  006348                     __pidataBANK1:
   149                           	callstack 0
   150                           
   151                           ;initializer for _dataSet
   152  006348  00                 	db	0
   153  006349  01                 	db	1
   154  00634A  02                 	db	2
   155  00634B  03                 	db	3
   156  00634C  04                 	db	4
   157  00634D  05                 	db	5
   158  00634E  06                 	db	6
   159  00634F  07                 	db	7
   160  006350  08                 	db	8
   161  006351  09                 	db	9
   162  006352  0A                 	db	10
   163  006353  0B                 	db	11
   164  006354  0C                 	db	12
   165  006355  0D                 	db	13
   166  006356  0E                 	db	14
   167  006357  0F                 	db	15
   168  006358  10                 	db	16
   169  006359  11                 	db	17
   170  00635A  12                 	db	18
   171  00635B  13                 	db	19
   172  0000                     _reservedFlashDataMemory_absconstaddr	set	16448
   173  0000                     _constReserveMemory_absconstaddr	set	16384
   174                           
   175                           	psect	mediumconst
   176  004FFE                     __pmediumconst:
   177                           	callstack 0
   178  004FFE  00                 	db	0
   179  004FFF                     _calibrationSecurityCheck:
   180                           	callstack 0
   181  004FFF  00                 	db	0
   182  005000  AA                 	db	170
   183  005001  55                 	db	85
   184  005002  AA                 	db	170
   185  005003  55                 	db	85
   186  005004  AA                 	db	170
   187  005005  55                 	db	85
   188  005006  AA                 	db	170
   189  005007  55                 	db	85
   190  005008  62                 	db	98
   191  005009  63                 	db	99
   192  00500A  64                 	db	100
   193  00500B  65                 	db	101
   194  00500C  66                 	db	102
   195  00500D  67                 	db	103
   196  00500E  66                 	db	102
   197  00500F  64                 	db	100
   198  005010  63                 	db	99
   199  005011  62                 	db	98
   200  005012  FF                 	db	255
   201  005013                     __end_of_calibrationSecurityCheck:
   202                           	callstack 0
   203  0000                     _codeRevisionNumber_absconstaddr	set	65534
   204  0000                     _reservedFlashDataMemory_absconstaddr	set	16448
   205  005013  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           	psect	_reservedFlashDataMemory_const
   208  004040                     __p_reservedFlashDataMemory_const:
   209                           	callstack 0
   210  004040                     _reservedFlashDataMemory:
   211                           	callstack 0
   212  004040  0000               	dw	0
   213  004042  0000               	dw	0
   214  004044  0000               	dw	0
   215  004046  0000               	dw	0
   216  004048  0000               	dw	0
   217  00404A  0000               	dw	0
   218  00404C  0000               	dw	0
   219  00404E  0000               	dw	0
   220  004050  0000               	dw	0
   221  004052  0000               	dw	0
   222  004054  0000               	dw	0
   223  004056  0000               	dw	0
   224  004058  0000               	dw	0
   225  00405A  0000               	dw	0
   226  00405C  0000               	dw	0
   227  00405E  0000               	dw	0
   228  004060  0000               	dw	0
   229  004062  0000               	dw	0
   230  004064  0000               	dw	0
   231  004066  0000               	dw	0
   232  004068  0000               	dw	0
   233  00406A  0000               	dw	0
   234  00406C  0000               	dw	0
   235  00406E  0000               	dw	0
   236  004070  0000               	dw	0
   237  004072  0000               	dw	0
   238  004074  0000               	dw	0
   239  004076  0000               	dw	0
   240  004078  0000               	dw	0
   241  00407A  0000               	dw	0
   242  00407C  0000               	dw	0
   243  00407E  0000               	dw	0
   244  004080  0000               	dw	0
   245  004082  0000               	dw	0
   246  004084  0000               	dw	0
   247  004086  0000               	dw	0
   248  004088  0000               	dw	0
   249  00408A  0000               	dw	0
   250  00408C  0000               	dw	0
   251  00408E  0000               	dw	0
   252  004090  0000               	dw	0
   253  004092  0000               	dw	0
   254  004094  0000               	dw	0
   255  004096  0000               	dw	0
   256  004098  0000               	dw	0
   257  00409A  0000               	dw	0
   258  00409C  0000               	dw	0
   259  00409E  0000               	dw	0
   260  0040A0  0000               	dw	0
   261  0040A2  0000               	dw	0
   262  0040A4  0000               	dw	0
   263  0040A6  0000               	dw	0
   264  0040A8  0000               	dw	0
   265  0040AA  0000               	dw	0
   266  0040AC  0000               	dw	0
   267  0040AE  0000               	dw	0
   268  0040B0  0000               	dw	0
   269  0040B2  0000               	dw	0
   270  0040B4  0000               	dw	0
   271  0040B6  0000               	dw	0
   272  0040B8  0000               	dw	0
   273  0040BA  0000               	dw	0
   274  0040BC  0000               	dw	0
   275  0040BE  0000               	dw	0
   276  0040C0  0000               	dw	0
   277  0040C2  0000               	dw	0
   278  0040C4  0000               	dw	0
   279  0040C6  0000               	dw	0
   280  0040C8  0000               	dw	0
   281  0040CA  0000               	dw	0
   282  0040CC  0000               	dw	0
   283  0040CE  0000               	dw	0
   284  0040D0  0000               	dw	0
   285  0040D2  0000               	dw	0
   286  0040D4  0000               	dw	0
   287  0040D6  0000               	dw	0
   288  0040D8  0000               	dw	0
   289  0040DA  0000               	dw	0
   290  0040DC  0000               	dw	0
   291  0040DE  0000               	dw	0
   292  0040E0  0000               	dw	0
   293  0040E2  0000               	dw	0
   294  0040E4  0000               	dw	0
   295  0040E6  0000               	dw	0
   296  0040E8  0000               	dw	0
   297  0040EA  0000               	dw	0
   298  0040EC  0000               	dw	0
   299  0040EE  0000               	dw	0
   300  0040F0  0000               	dw	0
   301  0040F2  0000               	dw	0
   302  0040F4  0000               	dw	0
   303  0040F6  0000               	dw	0
   304  0040F8  0000               	dw	0
   305  0040FA  0000               	dw	0
   306  0040FC  0000               	dw	0
   307  0040FE  0000               	dw	0
   308  004100  0000               	dw	0
   309  004102  0000               	dw	0
   310  004104  0000               	dw	0
   311  004106  0000               	dw	0
   312  004108  0000               	dw	0
   313  00410A  0000               	dw	0
   314  00410C  0000               	dw	0
   315  00410E  0000               	dw	0
   316  004110  0000               	dw	0
   317  004112  0000               	dw	0
   318  004114  0000               	dw	0
   319  004116  0000               	dw	0
   320  004118  0000               	dw	0
   321  00411A  0000               	dw	0
   322  00411C  0000               	dw	0
   323  00411E  0000               	dw	0
   324  004120  0000               	dw	0
   325  004122  0000               	dw	0
   326  004124  0000               	dw	0
   327  004126  0000               	dw	0
   328  004128  0000               	dw	0
   329  00412A  0000               	dw	0
   330  00412C  0000               	dw	0
   331  00412E  0000               	dw	0
   332  004130  0000               	dw	0
   333  004132  0000               	dw	0
   334  004134  0000               	dw	0
   335  004136  0000               	dw	0
   336  004138  0000               	dw	0
   337  00413A  0000               	dw	0
   338  00413C  0000               	dw	0
   339  00413E  0000               	dw	0
   340  004140  0000               	dw	0
   341  004142  0000               	dw	0
   342  004144  0000               	dw	0
   343  004146  0000               	dw	0
   344  004148  0000               	dw	0
   345  00414A  0000               	dw	0
   346  00414C  0000               	dw	0
   347  00414E  0000               	dw	0
   348  004150  0000               	dw	0
   349  004152  0000               	dw	0
   350  004154  0000               	dw	0
   351  004156  0000               	dw	0
   352  004158  0000               	dw	0
   353  00415A  0000               	dw	0
   354  00415C  0000               	dw	0
   355  00415E  0000               	dw	0
   356  004160  0000               	dw	0
   357  004162  0000               	dw	0
   358  004164  0000               	dw	0
   359  004166  0000               	dw	0
   360  004168  0000               	dw	0
   361  00416A  0000               	dw	0
   362  00416C  0000               	dw	0
   363  00416E  0000               	dw	0
   364  004170  0000               	dw	0
   365  004172  0000               	dw	0
   366  004174  0000               	dw	0
   367  004176  0000               	dw	0
   368  004178  0000               	dw	0
   369  00417A  0000               	dw	0
   370  00417C  0000               	dw	0
   371  00417E  0000               	dw	0
   372  004180  0000               	dw	0
   373  004182  0000               	dw	0
   374  004184  0000               	dw	0
   375  004186  0000               	dw	0
   376  004188  0000               	dw	0
   377  00418A  0000               	dw	0
   378  00418C  0000               	dw	0
   379  00418E  0000               	dw	0
   380  004190  0000               	dw	0
   381  004192  0000               	dw	0
   382  004194  0000               	dw	0
   383  004196  0000               	dw	0
   384  004198  0000               	dw	0
   385  00419A  0000               	dw	0
   386  00419C  0000               	dw	0
   387  00419E  0000               	dw	0
   388  0041A0  0000               	dw	0
   389  0041A2  0000               	dw	0
   390  0041A4  0000               	dw	0
   391  0041A6  0000               	dw	0
   392  0041A8  0000               	dw	0
   393  0041AA  0000               	dw	0
   394  0041AC  0000               	dw	0
   395  0041AE  0000               	dw	0
   396  0041B0  0000               	dw	0
   397  0041B2  0000               	dw	0
   398  0041B4  0000               	dw	0
   399  0041B6  0000               	dw	0
   400  0041B8  0000               	dw	0
   401  0041BA  0000               	dw	0
   402  0041BC  0000               	dw	0
   403  0041BE  0000               	dw	0
   404  0041C0  0000               	dw	0
   405  0041C2  0000               	dw	0
   406  0041C4  0000               	dw	0
   407  0041C6  0000               	dw	0
   408  0041C8  0000               	dw	0
   409  0041CA  0000               	dw	0
   410  0041CC  0000               	dw	0
   411  0041CE  0000               	dw	0
   412  0041D0  0000               	dw	0
   413  0041D2  0000               	dw	0
   414  0041D4  0000               	dw	0
   415  0041D6  0000               	dw	0
   416  0041D8  0000               	dw	0
   417  0041DA  0000               	dw	0
   418  0041DC  0000               	dw	0
   419  0041DE  0000               	dw	0
   420  0041E0  0000               	dw	0
   421  0041E2  0000               	dw	0
   422  0041E4  0000               	dw	0
   423  0041E6  0000               	dw	0
   424  0041E8  0000               	dw	0
   425  0041EA  0000               	dw	0
   426  0041EC  0000               	dw	0
   427  0041EE  0000               	dw	0
   428  0041F0  0000               	dw	0
   429  0041F2  0000               	dw	0
   430  0041F4  0000               	dw	0
   431  0041F6  0000               	dw	0
   432  0041F8  0000               	dw	0
   433  0041FA  0000               	dw	0
   434  0041FC  0000               	dw	0
   435  0041FE  0000               	dw	0
   436  004200  0000               	dw	0
   437  004202  0000               	dw	0
   438  004204  0000               	dw	0
   439  004206  0000               	dw	0
   440  004208  0000               	dw	0
   441  00420A  0000               	dw	0
   442  00420C  0000               	dw	0
   443  00420E  0000               	dw	0
   444  004210  0000               	dw	0
   445  004212  0000               	dw	0
   446  004214  0000               	dw	0
   447  004216  0000               	dw	0
   448  004218  0000               	dw	0
   449  00421A  0000               	dw	0
   450  00421C  0000               	dw	0
   451  00421E  0000               	dw	0
   452  004220  0000               	dw	0
   453  004222  0000               	dw	0
   454  004224  0000               	dw	0
   455  004226  0000               	dw	0
   456  004228  0000               	dw	0
   457  00422A  0000               	dw	0
   458  00422C  0000               	dw	0
   459  00422E  0000               	dw	0
   460  004230  0000               	dw	0
   461  004232  0000               	dw	0
   462  004234  0000               	dw	0
   463  004236  0000               	dw	0
   464  004238  0000               	dw	0
   465  00423A  0000               	dw	0
   466  00423C  0000               	dw	0
   467  00423E  0000               	dw	0
   468  004240  0000               	dw	0
   469  004242  0000               	dw	0
   470  004244  0000               	dw	0
   471  004246  0000               	dw	0
   472  004248  0000               	dw	0
   473  00424A  0000               	dw	0
   474  00424C  0000               	dw	0
   475  00424E  0000               	dw	0
   476  004250  0000               	dw	0
   477  004252  0000               	dw	0
   478  004254  0000               	dw	0
   479  004256  0000               	dw	0
   480  004258  0000               	dw	0
   481  00425A  0000               	dw	0
   482  00425C  0000               	dw	0
   483  00425E  0000               	dw	0
   484  004260  0000               	dw	0
   485  004262  0000               	dw	0
   486  004264  0000               	dw	0
   487  004266  0000               	dw	0
   488  004268  0000               	dw	0
   489  00426A  0000               	dw	0
   490  00426C  0000               	dw	0
   491  00426E  0000               	dw	0
   492  004270  0000               	dw	0
   493  004272  0000               	dw	0
   494  004274  0000               	dw	0
   495  004276  0000               	dw	0
   496  004278  0000               	dw	0
   497  00427A  0000               	dw	0
   498  00427C  0000               	dw	0
   499  00427E  0000               	dw	0
   500  004280  0000               	dw	0
   501  004282  0000               	dw	0
   502  004284  0000               	dw	0
   503  004286  0000               	dw	0
   504  004288  0000               	dw	0
   505  00428A  0000               	dw	0
   506  00428C  0000               	dw	0
   507  00428E  0000               	dw	0
   508  004290  0000               	dw	0
   509  004292  0000               	dw	0
   510  004294  0000               	dw	0
   511  004296  0000               	dw	0
   512  004298  0000               	dw	0
   513  00429A  0000               	dw	0
   514  00429C  0000               	dw	0
   515  00429E  0000               	dw	0
   516  0042A0  0000               	dw	0
   517  0042A2  0000               	dw	0
   518  0042A4  0000               	dw	0
   519  0042A6  0000               	dw	0
   520  0042A8  0000               	dw	0
   521  0042AA  0000               	dw	0
   522  0042AC  0000               	dw	0
   523  0042AE  0000               	dw	0
   524  0042B0  0000               	dw	0
   525  0042B2  0000               	dw	0
   526  0042B4  0000               	dw	0
   527  0042B6  0000               	dw	0
   528  0042B8  0000               	dw	0
   529  0042BA  0000               	dw	0
   530  0042BC  0000               	dw	0
   531  0042BE  0000               	dw	0
   532  0042C0  0000               	dw	0
   533  0042C2  0000               	dw	0
   534  0042C4  0000               	dw	0
   535  0042C6  0000               	dw	0
   536  0042C8  0000               	dw	0
   537  0042CA  0000               	dw	0
   538  0042CC  0000               	dw	0
   539  0042CE  0000               	dw	0
   540  0042D0  0000               	dw	0
   541  0042D2  0000               	dw	0
   542  0042D4  0000               	dw	0
   543  0042D6  0000               	dw	0
   544  0042D8  0000               	dw	0
   545  0042DA  0000               	dw	0
   546  0042DC  0000               	dw	0
   547  0042DE  0000               	dw	0
   548  0042E0  0000               	dw	0
   549  0042E2  0000               	dw	0
   550  0042E4  0000               	dw	0
   551  0042E6  0000               	dw	0
   552  0042E8  0000               	dw	0
   553  0042EA  0000               	dw	0
   554  0042EC  0000               	dw	0
   555  0042EE  0000               	dw	0
   556  0042F0  0000               	dw	0
   557  0042F2  0000               	dw	0
   558  0042F4  0000               	dw	0
   559  0042F6  0000               	dw	0
   560  0042F8  0000               	dw	0
   561  0042FA  0000               	dw	0
   562  0042FC  0000               	dw	0
   563  0042FE  0000               	dw	0
   564  004300  0000               	dw	0
   565  004302  0000               	dw	0
   566  004304  0000               	dw	0
   567  004306  0000               	dw	0
   568  004308  0000               	dw	0
   569  00430A  0000               	dw	0
   570  00430C  0000               	dw	0
   571  00430E  0000               	dw	0
   572  004310  0000               	dw	0
   573  004312  0000               	dw	0
   574  004314  0000               	dw	0
   575  004316  0000               	dw	0
   576  004318  0000               	dw	0
   577  00431A  0000               	dw	0
   578  00431C  0000               	dw	0
   579  00431E  0000               	dw	0
   580  004320  0000               	dw	0
   581  004322  0000               	dw	0
   582  004324  0000               	dw	0
   583  004326  0000               	dw	0
   584  004328  0000               	dw	0
   585  00432A  0000               	dw	0
   586  00432C  0000               	dw	0
   587  00432E  0000               	dw	0
   588  004330  0000               	dw	0
   589  004332  0000               	dw	0
   590  004334  0000               	dw	0
   591  004336  0000               	dw	0
   592  004338  0000               	dw	0
   593  00433A  0000               	dw	0
   594  00433C  0000               	dw	0
   595  00433E  0000               	dw	0
   596  004340  0000               	dw	0
   597  004342  0000               	dw	0
   598  004344  0000               	dw	0
   599  004346  0000               	dw	0
   600  004348  0000               	dw	0
   601  00434A  0000               	dw	0
   602  00434C  0000               	dw	0
   603  00434E  0000               	dw	0
   604  004350  0000               	dw	0
   605  004352  0000               	dw	0
   606  004354  0000               	dw	0
   607  004356  0000               	dw	0
   608  004358  0000               	dw	0
   609  00435A  0000               	dw	0
   610  00435C  0000               	dw	0
   611  00435E  0000               	dw	0
   612  004360  0000               	dw	0
   613  004362  0000               	dw	0
   614  004364  0000               	dw	0
   615  004366  0000               	dw	0
   616  004368  0000               	dw	0
   617  00436A  0000               	dw	0
   618  00436C  0000               	dw	0
   619  00436E  0000               	dw	0
   620  004370  0000               	dw	0
   621  004372  0000               	dw	0
   622  004374  0000               	dw	0
   623  004376  0000               	dw	0
   624  004378  0000               	dw	0
   625  00437A  0000               	dw	0
   626  00437C  0000               	dw	0
   627  00437E  0000               	dw	0
   628  004380  0000               	dw	0
   629  004382  0000               	dw	0
   630  004384  0000               	dw	0
   631  004386  0000               	dw	0
   632  004388  0000               	dw	0
   633  00438A  0000               	dw	0
   634  00438C  0000               	dw	0
   635  00438E  0000               	dw	0
   636  004390  0000               	dw	0
   637  004392  0000               	dw	0
   638  004394  0000               	dw	0
   639  004396  0000               	dw	0
   640  004398  0000               	dw	0
   641  00439A  0000               	dw	0
   642  00439C  0000               	dw	0
   643  00439E  0000               	dw	0
   644  0043A0  0000               	dw	0
   645  0043A2  0000               	dw	0
   646  0043A4  0000               	dw	0
   647  0043A6  0000               	dw	0
   648  0043A8  0000               	dw	0
   649  0043AA  0000               	dw	0
   650  0043AC  0000               	dw	0
   651  0043AE  0000               	dw	0
   652  0043B0  0000               	dw	0
   653  0043B2  0000               	dw	0
   654  0043B4  0000               	dw	0
   655  0043B6  0000               	dw	0
   656  0043B8  0000               	dw	0
   657  0043BA  0000               	dw	0
   658  0043BC  0000               	dw	0
   659  0043BE  0000               	dw	0
   660  0043C0  0000               	dw	0
   661  0043C2  0000               	dw	0
   662  0043C4  0000               	dw	0
   663  0043C6  0000               	dw	0
   664  0043C8  0000               	dw	0
   665  0043CA  0000               	dw	0
   666  0043CC  0000               	dw	0
   667  0043CE  0000               	dw	0
   668  0043D0  0000               	dw	0
   669  0043D2  0000               	dw	0
   670  0043D4  0000               	dw	0
   671  0043D6  0000               	dw	0
   672  0043D8  0000               	dw	0
   673  0043DA  0000               	dw	0
   674  0043DC  0000               	dw	0
   675  0043DE  0000               	dw	0
   676  0043E0  0000               	dw	0
   677  0043E2  0000               	dw	0
   678  0043E4  0000               	dw	0
   679  0043E6  0000               	dw	0
   680  0043E8  0000               	dw	0
   681  0043EA  0000               	dw	0
   682  0043EC  0000               	dw	0
   683  0043EE  0000               	dw	0
   684  0043F0  0000               	dw	0
   685  0043F2  0000               	dw	0
   686  0043F4  0000               	dw	0
   687  0043F6  0000               	dw	0
   688  0043F8  0000               	dw	0
   689  0043FA  0000               	dw	0
   690  0043FC  0000               	dw	0
   691  0043FE  0000               	dw	0
   692  004400  0000               	dw	0
   693  004402  0000               	dw	0
   694  004404  0000               	dw	0
   695  004406  0000               	dw	0
   696  004408  0000               	dw	0
   697  00440A  0000               	dw	0
   698  00440C  0000               	dw	0
   699  00440E  0000               	dw	0
   700  004410  0000               	dw	0
   701  004412  0000               	dw	0
   702  004414  0000               	dw	0
   703  004416  0000               	dw	0
   704  004418  0000               	dw	0
   705  00441A  0000               	dw	0
   706  00441C  0000               	dw	0
   707  00441E  0000               	dw	0
   708  004420  0000               	dw	0
   709  004422  0000               	dw	0
   710  004424  0000               	dw	0
   711  004426  0000               	dw	0
   712  004428  0000               	dw	0
   713  00442A  0000               	dw	0
   714  00442C  0000               	dw	0
   715  00442E  0000               	dw	0
   716  004430  0000               	dw	0
   717  004432  0000               	dw	0
   718  004434  0000               	dw	0
   719  004436  0000               	dw	0
   720  004438  0000               	dw	0
   721  00443A  0000               	dw	0
   722  00443C  0000               	dw	0
   723  00443E  0000               	dw	0
   724  004440  0000               	dw	0
   725  004442  0000               	dw	0
   726  004444  0000               	dw	0
   727  004446  0000               	dw	0
   728  004448  0000               	dw	0
   729  00444A  0000               	dw	0
   730  00444C  0000               	dw	0
   731  00444E  0000               	dw	0
   732  004450  0000               	dw	0
   733  004452  0000               	dw	0
   734  004454  0000               	dw	0
   735  004456  0000               	dw	0
   736  004458  0000               	dw	0
   737  00445A  0000               	dw	0
   738  00445C  0000               	dw	0
   739  00445E  0000               	dw	0
   740  004460  0000               	dw	0
   741  004462  0000               	dw	0
   742  004464  0000               	dw	0
   743  004466  0000               	dw	0
   744  004468  0000               	dw	0
   745  00446A  0000               	dw	0
   746  00446C  0000               	dw	0
   747  00446E  0000               	dw	0
   748  004470  0000               	dw	0
   749  004472  0000               	dw	0
   750  004474  0000               	dw	0
   751  004476  0000               	dw	0
   752  004478  0000               	dw	0
   753  00447A  0000               	dw	0
   754  00447C  0000               	dw	0
   755  00447E  0000               	dw	0
   756  004480  0000               	dw	0
   757  004482  0000               	dw	0
   758  004484  0000               	dw	0
   759  004486  0000               	dw	0
   760  004488  0000               	dw	0
   761  00448A  0000               	dw	0
   762  00448C  0000               	dw	0
   763  00448E  0000               	dw	0
   764  004490  0000               	dw	0
   765  004492  0000               	dw	0
   766  004494  0000               	dw	0
   767  004496  0000               	dw	0
   768  004498  0000               	dw	0
   769  00449A  0000               	dw	0
   770  00449C  0000               	dw	0
   771  00449E  0000               	dw	0
   772  0044A0  0000               	dw	0
   773  0044A2  0000               	dw	0
   774  0044A4  0000               	dw	0
   775  0044A6  0000               	dw	0
   776  0044A8  0000               	dw	0
   777  0044AA  0000               	dw	0
   778  0044AC  0000               	dw	0
   779  0044AE  0000               	dw	0
   780  0044B0  0000               	dw	0
   781  0044B2  0000               	dw	0
   782  0044B4  0000               	dw	0
   783  0044B6  0000               	dw	0
   784  0044B8  0000               	dw	0
   785  0044BA  0000               	dw	0
   786  0044BC  0000               	dw	0
   787  0044BE  0000               	dw	0
   788  0044C0  0000               	dw	0
   789  0044C2  0000               	dw	0
   790  0044C4  0000               	dw	0
   791  0044C6  0000               	dw	0
   792  0044C8  0000               	dw	0
   793  0044CA  0000               	dw	0
   794  0044CC  0000               	dw	0
   795  0044CE  0000               	dw	0
   796  0044D0  0000               	dw	0
   797  0044D2  0000               	dw	0
   798  0044D4  0000               	dw	0
   799  0044D6  0000               	dw	0
   800  0044D8  0000               	dw	0
   801  0044DA  0000               	dw	0
   802  0044DC  0000               	dw	0
   803  0044DE  0000               	dw	0
   804  0044E0  0000               	dw	0
   805  0044E2  0000               	dw	0
   806  0044E4  0000               	dw	0
   807  0044E6  0000               	dw	0
   808  0044E8  0000               	dw	0
   809  0044EA  0000               	dw	0
   810  0044EC  0000               	dw	0
   811  0044EE  0000               	dw	0
   812  0044F0  0000               	dw	0
   813  0044F2  0000               	dw	0
   814  0044F4  0000               	dw	0
   815  0044F6  0000               	dw	0
   816  0044F8  0000               	dw	0
   817  0044FA  0000               	dw	0
   818  0044FC  0000               	dw	0
   819  0044FE  0000               	dw	0
   820  004500  0000               	dw	0
   821  004502  0000               	dw	0
   822  004504  0000               	dw	0
   823  004506  0000               	dw	0
   824  004508  0000               	dw	0
   825  00450A  0000               	dw	0
   826  00450C  0000               	dw	0
   827  00450E  0000               	dw	0
   828  004510  0000               	dw	0
   829  004512  0000               	dw	0
   830  004514  0000               	dw	0
   831  004516  0000               	dw	0
   832  004518  0000               	dw	0
   833  00451A  0000               	dw	0
   834  00451C  0000               	dw	0
   835  00451E  0000               	dw	0
   836  004520  0000               	dw	0
   837  004522  0000               	dw	0
   838  004524  0000               	dw	0
   839  004526  0000               	dw	0
   840  004528  0000               	dw	0
   841  00452A  0000               	dw	0
   842  00452C  0000               	dw	0
   843  00452E  0000               	dw	0
   844  004530  0000               	dw	0
   845  004532  0000               	dw	0
   846  004534  0000               	dw	0
   847  004536  0000               	dw	0
   848  004538  0000               	dw	0
   849  00453A  0000               	dw	0
   850  00453C  0000               	dw	0
   851  00453E  0000               	dw	0
   852  004540  0000               	dw	0
   853  004542  0000               	dw	0
   854  004544  0000               	dw	0
   855  004546  0000               	dw	0
   856  004548  0000               	dw	0
   857  00454A  0000               	dw	0
   858  00454C  0000               	dw	0
   859  00454E  0000               	dw	0
   860  004550  0000               	dw	0
   861  004552  0000               	dw	0
   862  004554  0000               	dw	0
   863  004556  0000               	dw	0
   864  004558  0000               	dw	0
   865  00455A  0000               	dw	0
   866  00455C  0000               	dw	0
   867  00455E  0000               	dw	0
   868  004560  0000               	dw	0
   869  004562  0000               	dw	0
   870  004564  0000               	dw	0
   871  004566  0000               	dw	0
   872  004568  0000               	dw	0
   873  00456A  0000               	dw	0
   874  00456C  0000               	dw	0
   875  00456E  0000               	dw	0
   876  004570  0000               	dw	0
   877  004572  0000               	dw	0
   878  004574  0000               	dw	0
   879  004576  0000               	dw	0
   880  004578  0000               	dw	0
   881  00457A  0000               	dw	0
   882  00457C  0000               	dw	0
   883  00457E  0000               	dw	0
   884  004580  0000               	dw	0
   885  004582  0000               	dw	0
   886  004584  0000               	dw	0
   887  004586  0000               	dw	0
   888  004588  0000               	dw	0
   889  00458A  0000               	dw	0
   890  00458C  0000               	dw	0
   891  00458E  0000               	dw	0
   892  004590  0000               	dw	0
   893  004592  0000               	dw	0
   894  004594  0000               	dw	0
   895  004596  0000               	dw	0
   896  004598  0000               	dw	0
   897  00459A  0000               	dw	0
   898  00459C  0000               	dw	0
   899  00459E  0000               	dw	0
   900  0045A0  0000               	dw	0
   901  0045A2  0000               	dw	0
   902  0045A4  0000               	dw	0
   903  0045A6  0000               	dw	0
   904  0045A8  0000               	dw	0
   905  0045AA  0000               	dw	0
   906  0045AC  0000               	dw	0
   907  0045AE  0000               	dw	0
   908  0045B0  0000               	dw	0
   909  0045B2  0000               	dw	0
   910  0045B4  0000               	dw	0
   911  0045B6  0000               	dw	0
   912  0045B8  0000               	dw	0
   913  0045BA  0000               	dw	0
   914  0045BC  0000               	dw	0
   915  0045BE  0000               	dw	0
   916  0045C0  0000               	dw	0
   917  0045C2  0000               	dw	0
   918  0045C4  0000               	dw	0
   919  0045C6  0000               	dw	0
   920  0045C8  0000               	dw	0
   921  0045CA  0000               	dw	0
   922  0045CC  0000               	dw	0
   923  0045CE  0000               	dw	0
   924  0045D0  0000               	dw	0
   925  0045D2  0000               	dw	0
   926  0045D4  0000               	dw	0
   927  0045D6  0000               	dw	0
   928  0045D8  0000               	dw	0
   929  0045DA  0000               	dw	0
   930  0045DC  0000               	dw	0
   931  0045DE  0000               	dw	0
   932  0045E0  0000               	dw	0
   933  0045E2  0000               	dw	0
   934  0045E4  0000               	dw	0
   935  0045E6  0000               	dw	0
   936  0045E8  0000               	dw	0
   937  0045EA  0000               	dw	0
   938  0045EC  0000               	dw	0
   939  0045EE  0000               	dw	0
   940  0045F0  0000               	dw	0
   941  0045F2  0000               	dw	0
   942  0045F4  0000               	dw	0
   943  0045F6  0000               	dw	0
   944  0045F8  0000               	dw	0
   945  0045FA  0000               	dw	0
   946  0045FC  0000               	dw	0
   947  0045FE  0000               	dw	0
   948  004600  0000               	dw	0
   949  004602  0000               	dw	0
   950  004604  0000               	dw	0
   951  004606  0000               	dw	0
   952  004608  0000               	dw	0
   953  00460A  0000               	dw	0
   954  00460C  0000               	dw	0
   955  00460E  0000               	dw	0
   956  004610  0000               	dw	0
   957  004612  0000               	dw	0
   958  004614  0000               	dw	0
   959  004616  0000               	dw	0
   960  004618  0000               	dw	0
   961  00461A  0000               	dw	0
   962  00461C  0000               	dw	0
   963  00461E  0000               	dw	0
   964  004620  0000               	dw	0
   965  004622  0000               	dw	0
   966  004624  0000               	dw	0
   967  004626  0000               	dw	0
   968  004628  0000               	dw	0
   969  00462A  0000               	dw	0
   970  00462C  0000               	dw	0
   971  00462E  0000               	dw	0
   972  004630  0000               	dw	0
   973  004632  0000               	dw	0
   974  004634  0000               	dw	0
   975  004636  0000               	dw	0
   976  004638  0000               	dw	0
   977  00463A  0000               	dw	0
   978  00463C  0000               	dw	0
   979  00463E  0000               	dw	0
   980  004640  0000               	dw	0
   981  004642  0000               	dw	0
   982  004644  0000               	dw	0
   983  004646  0000               	dw	0
   984  004648  0000               	dw	0
   985  00464A  0000               	dw	0
   986  00464C  0000               	dw	0
   987  00464E  0000               	dw	0
   988  004650  0000               	dw	0
   989  004652  0000               	dw	0
   990  004654  0000               	dw	0
   991  004656  0000               	dw	0
   992  004658  0000               	dw	0
   993  00465A  0000               	dw	0
   994  00465C  0000               	dw	0
   995  00465E  0000               	dw	0
   996  004660  0000               	dw	0
   997  004662  0000               	dw	0
   998  004664  0000               	dw	0
   999  004666  0000               	dw	0
  1000  004668  0000               	dw	0
  1001  00466A  0000               	dw	0
  1002  00466C  0000               	dw	0
  1003  00466E  0000               	dw	0
  1004  004670  0000               	dw	0
  1005  004672  0000               	dw	0
  1006  004674  0000               	dw	0
  1007  004676  0000               	dw	0
  1008  004678  0000               	dw	0
  1009  00467A  0000               	dw	0
  1010  00467C  0000               	dw	0
  1011  00467E  0000               	dw	0
  1012  004680  0000               	dw	0
  1013  004682  0000               	dw	0
  1014  004684  0000               	dw	0
  1015  004686  0000               	dw	0
  1016  004688  0000               	dw	0
  1017  00468A  0000               	dw	0
  1018  00468C  0000               	dw	0
  1019  00468E  0000               	dw	0
  1020  004690  0000               	dw	0
  1021  004692  0000               	dw	0
  1022  004694  0000               	dw	0
  1023  004696  0000               	dw	0
  1024  004698  0000               	dw	0
  1025  00469A  0000               	dw	0
  1026  00469C  0000               	dw	0
  1027  00469E  0000               	dw	0
  1028  0046A0  0000               	dw	0
  1029  0046A2  0000               	dw	0
  1030  0046A4  0000               	dw	0
  1031  0046A6  0000               	dw	0
  1032  0046A8  0000               	dw	0
  1033  0046AA  0000               	dw	0
  1034  0046AC  0000               	dw	0
  1035  0046AE  0000               	dw	0
  1036  0046B0  0000               	dw	0
  1037  0046B2  0000               	dw	0
  1038  0046B4  0000               	dw	0
  1039  0046B6  0000               	dw	0
  1040  0046B8  0000               	dw	0
  1041  0046BA  0000               	dw	0
  1042  0046BC  0000               	dw	0
  1043  0046BE  0000               	dw	0
  1044  0046C0  0000               	dw	0
  1045  0046C2  0000               	dw	0
  1046  0046C4  0000               	dw	0
  1047  0046C6  0000               	dw	0
  1048  0046C8  0000               	dw	0
  1049  0046CA  0000               	dw	0
  1050  0046CC  0000               	dw	0
  1051  0046CE  0000               	dw	0
  1052  0046D0  0000               	dw	0
  1053  0046D2  0000               	dw	0
  1054  0046D4  0000               	dw	0
  1055  0046D6  0000               	dw	0
  1056  0046D8  0000               	dw	0
  1057  0046DA  0000               	dw	0
  1058  0046DC  0000               	dw	0
  1059  0046DE  0000               	dw	0
  1060  0046E0  0000               	dw	0
  1061  0046E2  0000               	dw	0
  1062  0046E4  0000               	dw	0
  1063  0046E6  0000               	dw	0
  1064  0046E8  0000               	dw	0
  1065  0046EA  0000               	dw	0
  1066  0046EC  0000               	dw	0
  1067  0046EE  0000               	dw	0
  1068  0046F0  0000               	dw	0
  1069  0046F2  0000               	dw	0
  1070  0046F4  0000               	dw	0
  1071  0046F6  0000               	dw	0
  1072  0046F8  0000               	dw	0
  1073  0046FA  0000               	dw	0
  1074  0046FC  0000               	dw	0
  1075  0046FE  0000               	dw	0
  1076  004700  0000               	dw	0
  1077  004702  0000               	dw	0
  1078  004704  0000               	dw	0
  1079  004706  0000               	dw	0
  1080  004708  0000               	dw	0
  1081  00470A  0000               	dw	0
  1082  00470C  0000               	dw	0
  1083  00470E  0000               	dw	0
  1084  004710  0000               	dw	0
  1085  004712  0000               	dw	0
  1086  004714  0000               	dw	0
  1087  004716  0000               	dw	0
  1088  004718  0000               	dw	0
  1089  00471A  0000               	dw	0
  1090  00471C  0000               	dw	0
  1091  00471E  0000               	dw	0
  1092  004720  0000               	dw	0
  1093  004722  0000               	dw	0
  1094  004724  0000               	dw	0
  1095  004726  0000               	dw	0
  1096  004728  0000               	dw	0
  1097  00472A  0000               	dw	0
  1098  00472C  0000               	dw	0
  1099  00472E  0000               	dw	0
  1100  004730  0000               	dw	0
  1101  004732  0000               	dw	0
  1102  004734  0000               	dw	0
  1103  004736  0000               	dw	0
  1104  004738  0000               	dw	0
  1105  00473A  0000               	dw	0
  1106  00473C  0000               	dw	0
  1107  00473E  0000               	dw	0
  1108  004740  0000               	dw	0
  1109  004742  0000               	dw	0
  1110  004744  0000               	dw	0
  1111  004746  0000               	dw	0
  1112  004748  0000               	dw	0
  1113  00474A  0000               	dw	0
  1114  00474C  0000               	dw	0
  1115  00474E  0000               	dw	0
  1116  004750  0000               	dw	0
  1117  004752  0000               	dw	0
  1118  004754  0000               	dw	0
  1119  004756  0000               	dw	0
  1120  004758  0000               	dw	0
  1121  00475A  0000               	dw	0
  1122  00475C  0000               	dw	0
  1123  00475E  0000               	dw	0
  1124  004760  0000               	dw	0
  1125  004762  0000               	dw	0
  1126  004764  0000               	dw	0
  1127  004766  0000               	dw	0
  1128  004768  0000               	dw	0
  1129  00476A  0000               	dw	0
  1130  00476C  0000               	dw	0
  1131  00476E  0000               	dw	0
  1132  004770  0000               	dw	0
  1133  004772  0000               	dw	0
  1134  004774  0000               	dw	0
  1135  004776  0000               	dw	0
  1136  004778  0000               	dw	0
  1137  00477A  0000               	dw	0
  1138  00477C  0000               	dw	0
  1139  00477E  0000               	dw	0
  1140  004780  0000               	dw	0
  1141  004782  0000               	dw	0
  1142  004784  0000               	dw	0
  1143  004786  0000               	dw	0
  1144  004788  0000               	dw	0
  1145  00478A  0000               	dw	0
  1146  00478C  0000               	dw	0
  1147  00478E  0000               	dw	0
  1148  004790  0000               	dw	0
  1149  004792  0000               	dw	0
  1150  004794  0000               	dw	0
  1151  004796  0000               	dw	0
  1152  004798  0000               	dw	0
  1153  00479A  0000               	dw	0
  1154  00479C  0000               	dw	0
  1155  00479E  0000               	dw	0
  1156  0047A0  0000               	dw	0
  1157  0047A2  0000               	dw	0
  1158  0047A4  0000               	dw	0
  1159  0047A6  0000               	dw	0
  1160  0047A8  0000               	dw	0
  1161  0047AA  0000               	dw	0
  1162  0047AC  0000               	dw	0
  1163  0047AE  0000               	dw	0
  1164  0047B0  0000               	dw	0
  1165  0047B2  0000               	dw	0
  1166  0047B4  0000               	dw	0
  1167  0047B6  0000               	dw	0
  1168  0047B8  0000               	dw	0
  1169  0047BA  0000               	dw	0
  1170  0047BC  0000               	dw	0
  1171  0047BE  0000               	dw	0
  1172  0047C0  0000               	dw	0
  1173  0047C2  0000               	dw	0
  1174  0047C4  0000               	dw	0
  1175  0047C6  0000               	dw	0
  1176  0047C8  0000               	dw	0
  1177  0047CA  0000               	dw	0
  1178  0047CC  0000               	dw	0
  1179  0047CE  0000               	dw	0
  1180  0047D0  0000               	dw	0
  1181  0047D2  0000               	dw	0
  1182  0047D4  0000               	dw	0
  1183  0047D6  0000               	dw	0
  1184  0047D8  0000               	dw	0
  1185  0047DA  0000               	dw	0
  1186  0047DC  0000               	dw	0
  1187  0047DE  0000               	dw	0
  1188  0047E0  0000               	dw	0
  1189  0047E2  0000               	dw	0
  1190  0047E4  0000               	dw	0
  1191  0047E6  0000               	dw	0
  1192  0047E8  0000               	dw	0
  1193  0047EA  0000               	dw	0
  1194  0047EC  0000               	dw	0
  1195  0047EE  0000               	dw	0
  1196  0047F0  0000               	dw	0
  1197  0047F2  0000               	dw	0
  1198  0047F4  0000               	dw	0
  1199  0047F6  0000               	dw	0
  1200  0047F8  0000               	dw	0
  1201  0047FA  0000               	dw	0
  1202  0047FC  0000               	dw	0
  1203  0047FE  0000               	dw	0
  1204  004800  0000               	dw	0
  1205  004802  0000               	dw	0
  1206  004804  0000               	dw	0
  1207  004806  0000               	dw	0
  1208  004808  0000               	dw	0
  1209  00480A  0000               	dw	0
  1210  00480C  0000               	dw	0
  1211  00480E  0000               	dw	0
  1212  004810  0000               	dw	0
  1213  004812  0000               	dw	0
  1214  004814  0000               	dw	0
  1215  004816  0000               	dw	0
  1216  004818  0000               	dw	0
  1217  00481A  0000               	dw	0
  1218  00481C  0000               	dw	0
  1219  00481E  0000               	dw	0
  1220  004820  0000               	dw	0
  1221  004822  0000               	dw	0
  1222  004824  0000               	dw	0
  1223  004826  0000               	dw	0
  1224  004828  0000               	dw	0
  1225  00482A  0000               	dw	0
  1226  00482C  0000               	dw	0
  1227  00482E  0000               	dw	0
  1228  004830  0000               	dw	0
  1229  004832  0000               	dw	0
  1230  004834  0000               	dw	0
  1231  004836  0000               	dw	0
  1232  004838  0000               	dw	0
  1233  00483A  0000               	dw	0
  1234  00483C  0000               	dw	0
  1235  00483E  0000               	dw	0
  1236  004840  0000               	dw	0
  1237  004842  0000               	dw	0
  1238  004844  0000               	dw	0
  1239  004846  0000               	dw	0
  1240  004848  0000               	dw	0
  1241  00484A  0000               	dw	0
  1242  00484C  0000               	dw	0
  1243  00484E  0000               	dw	0
  1244  004850  0000               	dw	0
  1245  004852  0000               	dw	0
  1246  004854  0000               	dw	0
  1247  004856  0000               	dw	0
  1248  004858  0000               	dw	0
  1249  00485A  0000               	dw	0
  1250  00485C  0000               	dw	0
  1251  00485E  0000               	dw	0
  1252  004860  0000               	dw	0
  1253  004862  0000               	dw	0
  1254  004864  0000               	dw	0
  1255  004866  0000               	dw	0
  1256  004868  0000               	dw	0
  1257  00486A  0000               	dw	0
  1258  00486C  0000               	dw	0
  1259  00486E  0000               	dw	0
  1260  004870  0000               	dw	0
  1261  004872  0000               	dw	0
  1262  004874  0000               	dw	0
  1263  004876  0000               	dw	0
  1264  004878  0000               	dw	0
  1265  00487A  0000               	dw	0
  1266  00487C  0000               	dw	0
  1267  00487E  0000               	dw	0
  1268  004880  0000               	dw	0
  1269  004882  0000               	dw	0
  1270  004884  0000               	dw	0
  1271  004886  0000               	dw	0
  1272  004888  0000               	dw	0
  1273  00488A  0000               	dw	0
  1274  00488C  0000               	dw	0
  1275  00488E  0000               	dw	0
  1276  004890  0000               	dw	0
  1277  004892  0000               	dw	0
  1278  004894  0000               	dw	0
  1279  004896  0000               	dw	0
  1280  004898  0000               	dw	0
  1281  00489A  0000               	dw	0
  1282  00489C  0000               	dw	0
  1283  00489E  0000               	dw	0
  1284  0048A0  0000               	dw	0
  1285  0048A2  0000               	dw	0
  1286  0048A4  0000               	dw	0
  1287  0048A6  0000               	dw	0
  1288  0048A8  0000               	dw	0
  1289  0048AA  0000               	dw	0
  1290  0048AC  0000               	dw	0
  1291  0048AE  0000               	dw	0
  1292  0048B0  0000               	dw	0
  1293  0048B2  0000               	dw	0
  1294  0048B4  0000               	dw	0
  1295  0048B6  0000               	dw	0
  1296  0048B8  0000               	dw	0
  1297  0048BA  0000               	dw	0
  1298  0048BC  0000               	dw	0
  1299  0048BE  0000               	dw	0
  1300  0048C0  0000               	dw	0
  1301  0048C2  0000               	dw	0
  1302  0048C4  0000               	dw	0
  1303  0048C6  0000               	dw	0
  1304  0048C8  0000               	dw	0
  1305  0048CA  0000               	dw	0
  1306  0048CC  0000               	dw	0
  1307  0048CE  0000               	dw	0
  1308  0048D0  0000               	dw	0
  1309  0048D2  0000               	dw	0
  1310  0048D4  0000               	dw	0
  1311  0048D6  0000               	dw	0
  1312  0048D8  0000               	dw	0
  1313  0048DA  0000               	dw	0
  1314  0048DC  0000               	dw	0
  1315  0048DE  0000               	dw	0
  1316  0048E0  0000               	dw	0
  1317  0048E2  0000               	dw	0
  1318  0048E4  0000               	dw	0
  1319  0048E6  0000               	dw	0
  1320  0048E8  0000               	dw	0
  1321  0048EA  0000               	dw	0
  1322  0048EC  0000               	dw	0
  1323  0048EE  0000               	dw	0
  1324  0048F0  0000               	dw	0
  1325  0048F2  0000               	dw	0
  1326  0048F4  0000               	dw	0
  1327  0048F6  0000               	dw	0
  1328  0048F8  0000               	dw	0
  1329  0048FA  0000               	dw	0
  1330  0048FC  0000               	dw	0
  1331  0048FE  0000               	dw	0
  1332  004900  0000               	dw	0
  1333  004902  0000               	dw	0
  1334  004904  0000               	dw	0
  1335  004906  0000               	dw	0
  1336  004908  0000               	dw	0
  1337  00490A  0000               	dw	0
  1338  00490C  0000               	dw	0
  1339  00490E  0000               	dw	0
  1340  004910  0000               	dw	0
  1341  004912  0000               	dw	0
  1342  004914  0000               	dw	0
  1343  004916  0000               	dw	0
  1344  004918  0000               	dw	0
  1345  00491A  0000               	dw	0
  1346  00491C  0000               	dw	0
  1347  00491E  0000               	dw	0
  1348  004920  0000               	dw	0
  1349  004922  0000               	dw	0
  1350  004924  0000               	dw	0
  1351  004926  0000               	dw	0
  1352  004928  0000               	dw	0
  1353  00492A  0000               	dw	0
  1354  00492C  0000               	dw	0
  1355  00492E  0000               	dw	0
  1356  004930  0000               	dw	0
  1357  004932  0000               	dw	0
  1358  004934  0000               	dw	0
  1359  004936  0000               	dw	0
  1360  004938  0000               	dw	0
  1361  00493A  0000               	dw	0
  1362  00493C  0000               	dw	0
  1363  00493E  0000               	dw	0
  1364  004940  0000               	dw	0
  1365  004942  0000               	dw	0
  1366  004944  0000               	dw	0
  1367  004946  0000               	dw	0
  1368  004948  0000               	dw	0
  1369  00494A  0000               	dw	0
  1370  00494C  0000               	dw	0
  1371  00494E  0000               	dw	0
  1372  004950  0000               	dw	0
  1373  004952  0000               	dw	0
  1374  004954  0000               	dw	0
  1375  004956  0000               	dw	0
  1376  004958  0000               	dw	0
  1377  00495A  0000               	dw	0
  1378  00495C  0000               	dw	0
  1379  00495E  0000               	dw	0
  1380  004960  0000               	dw	0
  1381  004962  0000               	dw	0
  1382  004964  0000               	dw	0
  1383  004966  0000               	dw	0
  1384  004968  0000               	dw	0
  1385  00496A  0000               	dw	0
  1386  00496C  0000               	dw	0
  1387  00496E  0000               	dw	0
  1388  004970  0000               	dw	0
  1389  004972  0000               	dw	0
  1390  004974  0000               	dw	0
  1391  004976  0000               	dw	0
  1392  004978  0000               	dw	0
  1393  00497A  0000               	dw	0
  1394  00497C  0000               	dw	0
  1395  00497E  0000               	dw	0
  1396  004980  0000               	dw	0
  1397  004982  0000               	dw	0
  1398  004984  0000               	dw	0
  1399  004986  0000               	dw	0
  1400  004988  0000               	dw	0
  1401  00498A  0000               	dw	0
  1402  00498C  0000               	dw	0
  1403  00498E  0000               	dw	0
  1404  004990  0000               	dw	0
  1405  004992  0000               	dw	0
  1406  004994  0000               	dw	0
  1407  004996  0000               	dw	0
  1408  004998  0000               	dw	0
  1409  00499A  0000               	dw	0
  1410  00499C  0000               	dw	0
  1411  00499E  0000               	dw	0
  1412  0049A0  0000               	dw	0
  1413  0049A2  0000               	dw	0
  1414  0049A4  0000               	dw	0
  1415  0049A6  0000               	dw	0
  1416  0049A8  0000               	dw	0
  1417  0049AA  0000               	dw	0
  1418  0049AC  0000               	dw	0
  1419  0049AE  0000               	dw	0
  1420  0049B0  0000               	dw	0
  1421  0049B2  0000               	dw	0
  1422  0049B4  0000               	dw	0
  1423  0049B6  0000               	dw	0
  1424  0049B8  0000               	dw	0
  1425  0049BA  0000               	dw	0
  1426  0049BC  0000               	dw	0
  1427  0049BE  0000               	dw	0
  1428  0049C0  0000               	dw	0
  1429  0049C2  0000               	dw	0
  1430  0049C4  0000               	dw	0
  1431  0049C6  0000               	dw	0
  1432  0049C8  0000               	dw	0
  1433  0049CA  0000               	dw	0
  1434  0049CC  0000               	dw	0
  1435  0049CE  0000               	dw	0
  1436  0049D0  0000               	dw	0
  1437  0049D2  0000               	dw	0
  1438  0049D4  0000               	dw	0
  1439  0049D6  0000               	dw	0
  1440  0049D8  0000               	dw	0
  1441  0049DA  0000               	dw	0
  1442  0049DC  0000               	dw	0
  1443  0049DE  0000               	dw	0
  1444  0049E0  0000               	dw	0
  1445  0049E2  0000               	dw	0
  1446  0049E4  0000               	dw	0
  1447  0049E6  0000               	dw	0
  1448  0049E8  0000               	dw	0
  1449  0049EA  0000               	dw	0
  1450  0049EC  0000               	dw	0
  1451  0049EE  0000               	dw	0
  1452  0049F0  0000               	dw	0
  1453  0049F2  0000               	dw	0
  1454  0049F4  0000               	dw	0
  1455  0049F6  0000               	dw	0
  1456  0049F8  0000               	dw	0
  1457  0049FA  0000               	dw	0
  1458  0049FC  0000               	dw	0
  1459  0049FE  0000               	dw	0
  1460  004A00  0000               	dw	0
  1461  004A02  0000               	dw	0
  1462  004A04  0000               	dw	0
  1463  004A06  0000               	dw	0
  1464  004A08  0000               	dw	0
  1465  004A0A  0000               	dw	0
  1466  004A0C  0000               	dw	0
  1467  004A0E  0000               	dw	0
  1468  004A10  0000               	dw	0
  1469  004A12  0000               	dw	0
  1470  004A14  0000               	dw	0
  1471  004A16  0000               	dw	0
  1472  004A18  0000               	dw	0
  1473  004A1A  0000               	dw	0
  1474  004A1C  0000               	dw	0
  1475  004A1E  0000               	dw	0
  1476  004A20  0000               	dw	0
  1477  004A22  0000               	dw	0
  1478  004A24  0000               	dw	0
  1479  004A26  0000               	dw	0
  1480  004A28  0000               	dw	0
  1481  004A2A  0000               	dw	0
  1482  004A2C  0000               	dw	0
  1483  004A2E  0000               	dw	0
  1484  004A30  0000               	dw	0
  1485  004A32  0000               	dw	0
  1486  004A34  0000               	dw	0
  1487  004A36  0000               	dw	0
  1488  004A38  0000               	dw	0
  1489  004A3A  0000               	dw	0
  1490  004A3C  0000               	dw	0
  1491  004A3E  0000               	dw	0
  1492  004A40  0000               	dw	0
  1493  004A42  0000               	dw	0
  1494  004A44  0000               	dw	0
  1495  004A46  0000               	dw	0
  1496  004A48  0000               	dw	0
  1497  004A4A  0000               	dw	0
  1498  004A4C  0000               	dw	0
  1499  004A4E  0000               	dw	0
  1500  004A50  0000               	dw	0
  1501  004A52  0000               	dw	0
  1502  004A54  0000               	dw	0
  1503  004A56  0000               	dw	0
  1504  004A58  0000               	dw	0
  1505  004A5A  0000               	dw	0
  1506  004A5C  0000               	dw	0
  1507  004A5E  0000               	dw	0
  1508  004A60  0000               	dw	0
  1509  004A62  0000               	dw	0
  1510  004A64  0000               	dw	0
  1511  004A66  0000               	dw	0
  1512  004A68  0000               	dw	0
  1513  004A6A  0000               	dw	0
  1514  004A6C  0000               	dw	0
  1515  004A6E  0000               	dw	0
  1516  004A70  0000               	dw	0
  1517  004A72  0000               	dw	0
  1518  004A74  0000               	dw	0
  1519  004A76  0000               	dw	0
  1520  004A78  0000               	dw	0
  1521  004A7A  0000               	dw	0
  1522  004A7C  0000               	dw	0
  1523  004A7E  0000               	dw	0
  1524  004A80  0000               	dw	0
  1525  004A82  0000               	dw	0
  1526  004A84  0000               	dw	0
  1527  004A86  0000               	dw	0
  1528  004A88  0000               	dw	0
  1529  004A8A  0000               	dw	0
  1530  004A8C  0000               	dw	0
  1531  004A8E  0000               	dw	0
  1532  004A90  0000               	dw	0
  1533  004A92  0000               	dw	0
  1534  004A94  0000               	dw	0
  1535  004A96  0000               	dw	0
  1536  004A98  0000               	dw	0
  1537  004A9A  0000               	dw	0
  1538  004A9C  0000               	dw	0
  1539  004A9E  0000               	dw	0
  1540  004AA0  0000               	dw	0
  1541  004AA2  0000               	dw	0
  1542  004AA4  0000               	dw	0
  1543  004AA6  0000               	dw	0
  1544  004AA8  0000               	dw	0
  1545  004AAA  0000               	dw	0
  1546  004AAC  0000               	dw	0
  1547  004AAE  0000               	dw	0
  1548  004AB0  0000               	dw	0
  1549  004AB2  0000               	dw	0
  1550  004AB4  0000               	dw	0
  1551  004AB6  0000               	dw	0
  1552  004AB8  0000               	dw	0
  1553  004ABA  0000               	dw	0
  1554  004ABC  0000               	dw	0
  1555  004ABE  0000               	dw	0
  1556  004AC0  0000               	dw	0
  1557  004AC2  0000               	dw	0
  1558  004AC4  0000               	dw	0
  1559  004AC6  0000               	dw	0
  1560  004AC8  0000               	dw	0
  1561  004ACA  0000               	dw	0
  1562  004ACC  0000               	dw	0
  1563  004ACE  0000               	dw	0
  1564  004AD0  0000               	dw	0
  1565  004AD2  0000               	dw	0
  1566  004AD4  0000               	dw	0
  1567  004AD6  0000               	dw	0
  1568  004AD8  0000               	dw	0
  1569  004ADA  0000               	dw	0
  1570  004ADC  0000               	dw	0
  1571  004ADE  0000               	dw	0
  1572  004AE0  0000               	dw	0
  1573  004AE2  0000               	dw	0
  1574  004AE4  0000               	dw	0
  1575  004AE6  0000               	dw	0
  1576  004AE8  0000               	dw	0
  1577  004AEA  0000               	dw	0
  1578  004AEC  0000               	dw	0
  1579  004AEE  0000               	dw	0
  1580  004AF0  0000               	dw	0
  1581  004AF2  0000               	dw	0
  1582  004AF4  0000               	dw	0
  1583  004AF6  0000               	dw	0
  1584  004AF8  0000               	dw	0
  1585  004AFA  0000               	dw	0
  1586  004AFC  0000               	dw	0
  1587  004AFE  0000               	dw	0
  1588  004B00  0000               	dw	0
  1589  004B02  0000               	dw	0
  1590  004B04  0000               	dw	0
  1591  004B06  0000               	dw	0
  1592  004B08  0000               	dw	0
  1593  004B0A  0000               	dw	0
  1594  004B0C  0000               	dw	0
  1595  004B0E  0000               	dw	0
  1596  004B10  0000               	dw	0
  1597  004B12  0000               	dw	0
  1598  004B14  0000               	dw	0
  1599  004B16  0000               	dw	0
  1600  004B18  0000               	dw	0
  1601  004B1A  0000               	dw	0
  1602  004B1C  0000               	dw	0
  1603  004B1E  0000               	dw	0
  1604  004B20  0000               	dw	0
  1605  004B22  0000               	dw	0
  1606  004B24  0000               	dw	0
  1607  004B26  0000               	dw	0
  1608  004B28  0000               	dw	0
  1609  004B2A  0000               	dw	0
  1610  004B2C  0000               	dw	0
  1611  004B2E  0000               	dw	0
  1612  004B30  0000               	dw	0
  1613  004B32  0000               	dw	0
  1614  004B34  0000               	dw	0
  1615  004B36  0000               	dw	0
  1616  004B38  0000               	dw	0
  1617  004B3A  0000               	dw	0
  1618  004B3C  0000               	dw	0
  1619  004B3E  0000               	dw	0
  1620  004B40  0000               	dw	0
  1621  004B42  0000               	dw	0
  1622  004B44  0000               	dw	0
  1623  004B46  0000               	dw	0
  1624  004B48  0000               	dw	0
  1625  004B4A  0000               	dw	0
  1626  004B4C  0000               	dw	0
  1627  004B4E  0000               	dw	0
  1628  004B50  0000               	dw	0
  1629  004B52  0000               	dw	0
  1630  004B54  0000               	dw	0
  1631  004B56  0000               	dw	0
  1632  004B58  0000               	dw	0
  1633  004B5A  0000               	dw	0
  1634  004B5C  0000               	dw	0
  1635  004B5E  0000               	dw	0
  1636  004B60  0000               	dw	0
  1637  004B62  0000               	dw	0
  1638  004B64  0000               	dw	0
  1639  004B66  0000               	dw	0
  1640  004B68  0000               	dw	0
  1641  004B6A  0000               	dw	0
  1642  004B6C  0000               	dw	0
  1643  004B6E  0000               	dw	0
  1644  004B70  0000               	dw	0
  1645  004B72  0000               	dw	0
  1646  004B74  0000               	dw	0
  1647  004B76  0000               	dw	0
  1648  004B78  0000               	dw	0
  1649  004B7A  0000               	dw	0
  1650  004B7C  0000               	dw	0
  1651  004B7E  0000               	dw	0
  1652  004B80  0000               	dw	0
  1653  004B82  0000               	dw	0
  1654  004B84  0000               	dw	0
  1655  004B86  0000               	dw	0
  1656  004B88  0000               	dw	0
  1657  004B8A  0000               	dw	0
  1658  004B8C  0000               	dw	0
  1659  004B8E  0000               	dw	0
  1660  004B90  0000               	dw	0
  1661  004B92  0000               	dw	0
  1662  004B94  0000               	dw	0
  1663  004B96  0000               	dw	0
  1664  004B98  0000               	dw	0
  1665  004B9A  0000               	dw	0
  1666  004B9C  0000               	dw	0
  1667  004B9E  0000               	dw	0
  1668  004BA0  0000               	dw	0
  1669  004BA2  0000               	dw	0
  1670  004BA4  0000               	dw	0
  1671  004BA6  0000               	dw	0
  1672  004BA8  0000               	dw	0
  1673  004BAA  0000               	dw	0
  1674  004BAC  0000               	dw	0
  1675  004BAE  0000               	dw	0
  1676  004BB0  0000               	dw	0
  1677  004BB2  0000               	dw	0
  1678  004BB4  0000               	dw	0
  1679  004BB6  0000               	dw	0
  1680  004BB8  0000               	dw	0
  1681  004BBA  0000               	dw	0
  1682  004BBC  0000               	dw	0
  1683  004BBE  0000               	dw	0
  1684  004BC0  0000               	dw	0
  1685  004BC2  0000               	dw	0
  1686  004BC4  0000               	dw	0
  1687  004BC6  0000               	dw	0
  1688  004BC8  0000               	dw	0
  1689  004BCA  0000               	dw	0
  1690  004BCC  0000               	dw	0
  1691  004BCE  0000               	dw	0
  1692  004BD0  0000               	dw	0
  1693  004BD2  0000               	dw	0
  1694  004BD4  0000               	dw	0
  1695  004BD6  0000               	dw	0
  1696  004BD8  0000               	dw	0
  1697  004BDA  0000               	dw	0
  1698  004BDC  0000               	dw	0
  1699  004BDE  0000               	dw	0
  1700  004BE0  0000               	dw	0
  1701  004BE2  0000               	dw	0
  1702  004BE4  0000               	dw	0
  1703  004BE6  0000               	dw	0
  1704  004BE8  0000               	dw	0
  1705  004BEA  0000               	dw	0
  1706  004BEC  0000               	dw	0
  1707  004BEE  0000               	dw	0
  1708  004BF0  0000               	dw	0
  1709  004BF2  0000               	dw	0
  1710  004BF4  0000               	dw	0
  1711  004BF6  0000               	dw	0
  1712  004BF8  0000               	dw	0
  1713  004BFA  0000               	dw	0
  1714  004BFC  0000               	dw	0
  1715  004BFE  0000               	dw	0
  1716  004C00  0000               	dw	0
  1717  004C02  0000               	dw	0
  1718  004C04  0000               	dw	0
  1719  004C06  0000               	dw	0
  1720  004C08  0000               	dw	0
  1721  004C0A  0000               	dw	0
  1722  004C0C  0000               	dw	0
  1723  004C0E  0000               	dw	0
  1724  004C10  0000               	dw	0
  1725  004C12  0000               	dw	0
  1726  004C14  0000               	dw	0
  1727  004C16  0000               	dw	0
  1728  004C18  0000               	dw	0
  1729  004C1A  0000               	dw	0
  1730  004C1C  0000               	dw	0
  1731  004C1E  0000               	dw	0
  1732  004C20  0000               	dw	0
  1733  004C22  0000               	dw	0
  1734  004C24  0000               	dw	0
  1735  004C26  0000               	dw	0
  1736  004C28  0000               	dw	0
  1737  004C2A  0000               	dw	0
  1738  004C2C  0000               	dw	0
  1739  004C2E  0000               	dw	0
  1740  004C30  0000               	dw	0
  1741  004C32  0000               	dw	0
  1742  004C34  0000               	dw	0
  1743  004C36  0000               	dw	0
  1744  004C38  0000               	dw	0
  1745  004C3A  0000               	dw	0
  1746  004C3C  0000               	dw	0
  1747  004C3E  0000               	dw	0
  1748  004C40  0000               	dw	0
  1749  004C42  0000               	dw	0
  1750  004C44  0000               	dw	0
  1751  004C46  0000               	dw	0
  1752  004C48  0000               	dw	0
  1753  004C4A  0000               	dw	0
  1754  004C4C  0000               	dw	0
  1755  004C4E  0000               	dw	0
  1756  004C50  0000               	dw	0
  1757  004C52  0000               	dw	0
  1758  004C54  0000               	dw	0
  1759  004C56  0000               	dw	0
  1760  004C58  0000               	dw	0
  1761  004C5A  0000               	dw	0
  1762  004C5C  0000               	dw	0
  1763  004C5E  0000               	dw	0
  1764  004C60  0000               	dw	0
  1765  004C62  0000               	dw	0
  1766  004C64  0000               	dw	0
  1767  004C66  0000               	dw	0
  1768  004C68  0000               	dw	0
  1769  004C6A  0000               	dw	0
  1770  004C6C  0000               	dw	0
  1771  004C6E  0000               	dw	0
  1772  004C70  0000               	dw	0
  1773  004C72  0000               	dw	0
  1774  004C74  0000               	dw	0
  1775  004C76  0000               	dw	0
  1776  004C78  0000               	dw	0
  1777  004C7A  0000               	dw	0
  1778  004C7C  0000               	dw	0
  1779  004C7E  0000               	dw	0
  1780  004C80  0000               	dw	0
  1781  004C82  0000               	dw	0
  1782  004C84  0000               	dw	0
  1783  004C86  0000               	dw	0
  1784  004C88  0000               	dw	0
  1785  004C8A  0000               	dw	0
  1786  004C8C  0000               	dw	0
  1787  004C8E  0000               	dw	0
  1788  004C90  0000               	dw	0
  1789  004C92  0000               	dw	0
  1790  004C94  0000               	dw	0
  1791  004C96  0000               	dw	0
  1792  004C98  0000               	dw	0
  1793  004C9A  0000               	dw	0
  1794  004C9C  0000               	dw	0
  1795  004C9E  0000               	dw	0
  1796  004CA0  0000               	dw	0
  1797  004CA2  0000               	dw	0
  1798  004CA4  0000               	dw	0
  1799  004CA6  0000               	dw	0
  1800  004CA8  0000               	dw	0
  1801  004CAA  0000               	dw	0
  1802  004CAC  0000               	dw	0
  1803  004CAE  0000               	dw	0
  1804  004CB0  0000               	dw	0
  1805  004CB2  0000               	dw	0
  1806  004CB4  0000               	dw	0
  1807  004CB6  0000               	dw	0
  1808  004CB8  0000               	dw	0
  1809  004CBA  0000               	dw	0
  1810  004CBC  0000               	dw	0
  1811  004CBE  0000               	dw	0
  1812  004CC0  0000               	dw	0
  1813  004CC2  0000               	dw	0
  1814  004CC4  0000               	dw	0
  1815  004CC6  0000               	dw	0
  1816  004CC8  0000               	dw	0
  1817  004CCA  0000               	dw	0
  1818  004CCC  0000               	dw	0
  1819  004CCE  0000               	dw	0
  1820  004CD0  0000               	dw	0
  1821  004CD2  0000               	dw	0
  1822  004CD4  0000               	dw	0
  1823  004CD6  0000               	dw	0
  1824  004CD8  0000               	dw	0
  1825  004CDA  0000               	dw	0
  1826  004CDC  0000               	dw	0
  1827  004CDE  0000               	dw	0
  1828  004CE0  0000               	dw	0
  1829  004CE2  0000               	dw	0
  1830  004CE4  0000               	dw	0
  1831  004CE6  0000               	dw	0
  1832  004CE8  0000               	dw	0
  1833  004CEA  0000               	dw	0
  1834  004CEC  0000               	dw	0
  1835  004CEE  0000               	dw	0
  1836  004CF0  0000               	dw	0
  1837  004CF2  0000               	dw	0
  1838  004CF4  0000               	dw	0
  1839  004CF6  0000               	dw	0
  1840  004CF8  0000               	dw	0
  1841  004CFA  0000               	dw	0
  1842  004CFC  0000               	dw	0
  1843  004CFE  0000               	dw	0
  1844  004D00  0000               	dw	0
  1845  004D02  0000               	dw	0
  1846  004D04  0000               	dw	0
  1847  004D06  0000               	dw	0
  1848  004D08  0000               	dw	0
  1849  004D0A  0000               	dw	0
  1850  004D0C  0000               	dw	0
  1851  004D0E  0000               	dw	0
  1852  004D10  0000               	dw	0
  1853  004D12  0000               	dw	0
  1854  004D14  0000               	dw	0
  1855  004D16  0000               	dw	0
  1856  004D18  0000               	dw	0
  1857  004D1A  0000               	dw	0
  1858  004D1C  0000               	dw	0
  1859  004D1E  0000               	dw	0
  1860  004D20  0000               	dw	0
  1861  004D22  0000               	dw	0
  1862  004D24  0000               	dw	0
  1863  004D26  0000               	dw	0
  1864  004D28  0000               	dw	0
  1865  004D2A  0000               	dw	0
  1866  004D2C  0000               	dw	0
  1867  004D2E  0000               	dw	0
  1868  004D30  0000               	dw	0
  1869  004D32  0000               	dw	0
  1870  004D34  0000               	dw	0
  1871  004D36  0000               	dw	0
  1872  004D38  0000               	dw	0
  1873  004D3A  0000               	dw	0
  1874  004D3C  0000               	dw	0
  1875  004D3E  0000               	dw	0
  1876  004D40  0000               	dw	0
  1877  004D42  0000               	dw	0
  1878  004D44  0000               	dw	0
  1879  004D46  0000               	dw	0
  1880  004D48  0000               	dw	0
  1881  004D4A  0000               	dw	0
  1882  004D4C  0000               	dw	0
  1883  004D4E  0000               	dw	0
  1884  004D50  0000               	dw	0
  1885  004D52  0000               	dw	0
  1886  004D54  0000               	dw	0
  1887  004D56  0000               	dw	0
  1888  004D58  0000               	dw	0
  1889  004D5A  0000               	dw	0
  1890  004D5C  0000               	dw	0
  1891  004D5E  0000               	dw	0
  1892  004D60  0000               	dw	0
  1893  004D62  0000               	dw	0
  1894  004D64  0000               	dw	0
  1895  004D66  0000               	dw	0
  1896  004D68  0000               	dw	0
  1897  004D6A  0000               	dw	0
  1898  004D6C  0000               	dw	0
  1899  004D6E  0000               	dw	0
  1900  004D70  0000               	dw	0
  1901  004D72  0000               	dw	0
  1902  004D74  0000               	dw	0
  1903  004D76  0000               	dw	0
  1904  004D78  0000               	dw	0
  1905  004D7A  0000               	dw	0
  1906  004D7C  0000               	dw	0
  1907  004D7E  0000               	dw	0
  1908  004D80  0000               	dw	0
  1909  004D82  0000               	dw	0
  1910  004D84  0000               	dw	0
  1911  004D86  0000               	dw	0
  1912  004D88  0000               	dw	0
  1913  004D8A  0000               	dw	0
  1914  004D8C  0000               	dw	0
  1915  004D8E  0000               	dw	0
  1916  004D90  0000               	dw	0
  1917  004D92  0000               	dw	0
  1918  004D94  0000               	dw	0
  1919  004D96  0000               	dw	0
  1920  004D98  0000               	dw	0
  1921  004D9A  0000               	dw	0
  1922  004D9C  0000               	dw	0
  1923  004D9E  0000               	dw	0
  1924  004DA0  0000               	dw	0
  1925  004DA2  0000               	dw	0
  1926  004DA4  0000               	dw	0
  1927  004DA6  0000               	dw	0
  1928  004DA8  0000               	dw	0
  1929  004DAA  0000               	dw	0
  1930  004DAC  0000               	dw	0
  1931  004DAE  0000               	dw	0
  1932  004DB0  0000               	dw	0
  1933  004DB2  0000               	dw	0
  1934  004DB4  0000               	dw	0
  1935  004DB6  0000               	dw	0
  1936  004DB8  0000               	dw	0
  1937  004DBA  0000               	dw	0
  1938  004DBC  0000               	dw	0
  1939  004DBE  0000               	dw	0
  1940  004DC0  0000               	dw	0
  1941  004DC2  0000               	dw	0
  1942  004DC4  0000               	dw	0
  1943  004DC6  0000               	dw	0
  1944  004DC8  0000               	dw	0
  1945  004DCA  0000               	dw	0
  1946  004DCC  0000               	dw	0
  1947  004DCE  0000               	dw	0
  1948  004DD0  0000               	dw	0
  1949  004DD2  0000               	dw	0
  1950  004DD4  0000               	dw	0
  1951  004DD6  0000               	dw	0
  1952  004DD8  0000               	dw	0
  1953  004DDA  0000               	dw	0
  1954  004DDC  0000               	dw	0
  1955  004DDE  0000               	dw	0
  1956  004DE0  0000               	dw	0
  1957  004DE2  0000               	dw	0
  1958  004DE4  0000               	dw	0
  1959  004DE6  0000               	dw	0
  1960  004DE8  0000               	dw	0
  1961  004DEA  0000               	dw	0
  1962  004DEC  0000               	dw	0
  1963  004DEE  0000               	dw	0
  1964  004DF0  0000               	dw	0
  1965  004DF2  0000               	dw	0
  1966  004DF4  0000               	dw	0
  1967  004DF6  0000               	dw	0
  1968  004DF8  0000               	dw	0
  1969  004DFA  0000               	dw	0
  1970  004DFC  0000               	dw	0
  1971  004DFE  0000               	dw	0
  1972  004E00  0000               	dw	0
  1973  004E02  0000               	dw	0
  1974  004E04  0000               	dw	0
  1975  004E06  0000               	dw	0
  1976  004E08  0000               	dw	0
  1977  004E0A  0000               	dw	0
  1978  004E0C  0000               	dw	0
  1979  004E0E  0000               	dw	0
  1980  004E10  0000               	dw	0
  1981  004E12  0000               	dw	0
  1982  004E14  0000               	dw	0
  1983  004E16  0000               	dw	0
  1984  004E18  0000               	dw	0
  1985  004E1A  0000               	dw	0
  1986  004E1C  0000               	dw	0
  1987  004E1E  0000               	dw	0
  1988  004E20  0000               	dw	0
  1989  004E22  0000               	dw	0
  1990  004E24  0000               	dw	0
  1991  004E26  0000               	dw	0
  1992  004E28  0000               	dw	0
  1993  004E2A  0000               	dw	0
  1994  004E2C  0000               	dw	0
  1995  004E2E  0000               	dw	0
  1996  004E30  0000               	dw	0
  1997  004E32  0000               	dw	0
  1998  004E34  0000               	dw	0
  1999  004E36  0000               	dw	0
  2000  004E38  0000               	dw	0
  2001  004E3A  0000               	dw	0
  2002  004E3C  0000               	dw	0
  2003  004E3E  0000               	dw	0
  2004  004E40  0000               	dw	0
  2005  004E42  0000               	dw	0
  2006  004E44  0000               	dw	0
  2007  004E46  0000               	dw	0
  2008  004E48  0000               	dw	0
  2009  004E4A  0000               	dw	0
  2010  004E4C  0000               	dw	0
  2011  004E4E  0000               	dw	0
  2012  004E50  0000               	dw	0
  2013  004E52  0000               	dw	0
  2014  004E54  0000               	dw	0
  2015  004E56  0000               	dw	0
  2016  004E58  0000               	dw	0
  2017  004E5A  0000               	dw	0
  2018  004E5C  0000               	dw	0
  2019  004E5E  0000               	dw	0
  2020  004E60  0000               	dw	0
  2021  004E62  0000               	dw	0
  2022  004E64  0000               	dw	0
  2023  004E66  0000               	dw	0
  2024  004E68  0000               	dw	0
  2025  004E6A  0000               	dw	0
  2026  004E6C  0000               	dw	0
  2027  004E6E  0000               	dw	0
  2028  004E70  0000               	dw	0
  2029  004E72  0000               	dw	0
  2030  004E74  0000               	dw	0
  2031  004E76  0000               	dw	0
  2032  004E78  0000               	dw	0
  2033  004E7A  0000               	dw	0
  2034  004E7C  0000               	dw	0
  2035  004E7E  0000               	dw	0
  2036  004E80  0000               	dw	0
  2037  004E82  0000               	dw	0
  2038  004E84  0000               	dw	0
  2039  004E86  0000               	dw	0
  2040  004E88  0000               	dw	0
  2041  004E8A  0000               	dw	0
  2042  004E8C  0000               	dw	0
  2043  004E8E  0000               	dw	0
  2044  004E90  0000               	dw	0
  2045  004E92  0000               	dw	0
  2046  004E94  0000               	dw	0
  2047  004E96  0000               	dw	0
  2048  004E98  0000               	dw	0
  2049  004E9A  0000               	dw	0
  2050  004E9C  0000               	dw	0
  2051  004E9E  0000               	dw	0
  2052  004EA0  0000               	dw	0
  2053  004EA2  0000               	dw	0
  2054  004EA4  0000               	dw	0
  2055  004EA6  0000               	dw	0
  2056  004EA8  0000               	dw	0
  2057  004EAA  0000               	dw	0
  2058  004EAC  0000               	dw	0
  2059  004EAE  0000               	dw	0
  2060  004EB0  0000               	dw	0
  2061  004EB2  0000               	dw	0
  2062  004EB4  0000               	dw	0
  2063  004EB6  0000               	dw	0
  2064  004EB8  0000               	dw	0
  2065  004EBA  0000               	dw	0
  2066  004EBC  0000               	dw	0
  2067  004EBE  0000               	dw	0
  2068  004EC0  0000               	dw	0
  2069  004EC2  0000               	dw	0
  2070  004EC4  0000               	dw	0
  2071  004EC6  0000               	dw	0
  2072  004EC8  0000               	dw	0
  2073  004ECA  0000               	dw	0
  2074  004ECC  0000               	dw	0
  2075  004ECE  0000               	dw	0
  2076  004ED0  0000               	dw	0
  2077  004ED2  0000               	dw	0
  2078  004ED4  0000               	dw	0
  2079  004ED6  0000               	dw	0
  2080  004ED8  0000               	dw	0
  2081  004EDA  0000               	dw	0
  2082  004EDC  0000               	dw	0
  2083  004EDE  0000               	dw	0
  2084  004EE0  0000               	dw	0
  2085  004EE2  0000               	dw	0
  2086  004EE4  0000               	dw	0
  2087  004EE6  0000               	dw	0
  2088  004EE8  0000               	dw	0
  2089  004EEA  0000               	dw	0
  2090  004EEC  0000               	dw	0
  2091  004EEE  0000               	dw	0
  2092  004EF0  0000               	dw	0
  2093  004EF2  0000               	dw	0
  2094  004EF4  0000               	dw	0
  2095  004EF6  0000               	dw	0
  2096  004EF8  0000               	dw	0
  2097  004EFA  0000               	dw	0
  2098  004EFC  0000               	dw	0
  2099  004EFE  0000               	dw	0
  2100  004F00  0000               	dw	0
  2101  004F02  0000               	dw	0
  2102  004F04  0000               	dw	0
  2103  004F06  0000               	dw	0
  2104  004F08  0000               	dw	0
  2105  004F0A  0000               	dw	0
  2106  004F0C  0000               	dw	0
  2107  004F0E  0000               	dw	0
  2108  004F10  0000               	dw	0
  2109  004F12  0000               	dw	0
  2110  004F14  0000               	dw	0
  2111  004F16  0000               	dw	0
  2112  004F18  0000               	dw	0
  2113  004F1A  0000               	dw	0
  2114  004F1C  0000               	dw	0
  2115  004F1E  0000               	dw	0
  2116  004F20  0000               	dw	0
  2117  004F22  0000               	dw	0
  2118  004F24  0000               	dw	0
  2119  004F26  0000               	dw	0
  2120  004F28  0000               	dw	0
  2121  004F2A  0000               	dw	0
  2122  004F2C  0000               	dw	0
  2123  004F2E  0000               	dw	0
  2124  004F30  0000               	dw	0
  2125  004F32  0000               	dw	0
  2126  004F34  0000               	dw	0
  2127  004F36  0000               	dw	0
  2128  004F38  0000               	dw	0
  2129  004F3A  0000               	dw	0
  2130  004F3C  0000               	dw	0
  2131  004F3E  0000               	dw	0
  2132  004F40  0000               	dw	0
  2133  004F42  0000               	dw	0
  2134  004F44  0000               	dw	0
  2135  004F46  0000               	dw	0
  2136  004F48  0000               	dw	0
  2137  004F4A  0000               	dw	0
  2138  004F4C  0000               	dw	0
  2139  004F4E  0000               	dw	0
  2140  004F50  0000               	dw	0
  2141  004F52  0000               	dw	0
  2142  004F54  0000               	dw	0
  2143  004F56  0000               	dw	0
  2144  004F58  0000               	dw	0
  2145  004F5A  0000               	dw	0
  2146  004F5C  0000               	dw	0
  2147  004F5E  0000               	dw	0
  2148  004F60  0000               	dw	0
  2149  004F62  0000               	dw	0
  2150  004F64  0000               	dw	0
  2151  004F66  0000               	dw	0
  2152  004F68  0000               	dw	0
  2153  004F6A  0000               	dw	0
  2154  004F6C  0000               	dw	0
  2155  004F6E  0000               	dw	0
  2156  004F70  0000               	dw	0
  2157  004F72  0000               	dw	0
  2158  004F74  0000               	dw	0
  2159  004F76  0000               	dw	0
  2160  004F78  0000               	dw	0
  2161  004F7A  0000               	dw	0
  2162  004F7C  0000               	dw	0
  2163  004F7E  0000               	dw	0
  2164  004F80  0000               	dw	0
  2165  004F82  0000               	dw	0
  2166  004F84  0000               	dw	0
  2167  004F86  0000               	dw	0
  2168  004F88  0000               	dw	0
  2169  004F8A  0000               	dw	0
  2170  004F8C  0000               	dw	0
  2171  004F8E  0000               	dw	0
  2172  004F90  0000               	dw	0
  2173  004F92  0000               	dw	0
  2174  004F94  0000               	dw	0
  2175  004F96  0000               	dw	0
  2176  004F98  0000               	dw	0
  2177  004F9A  0000               	dw	0
  2178  004F9C  0000               	dw	0
  2179  004F9E  0000               	dw	0
  2180  004FA0  0000               	dw	0
  2181  004FA2  0000               	dw	0
  2182  004FA4  0000               	dw	0
  2183  004FA6  0000               	dw	0
  2184  004FA8  0000               	dw	0
  2185  004FAA  0000               	dw	0
  2186  004FAC  0000               	dw	0
  2187  004FAE  0000               	dw	0
  2188  004FB0  0000               	dw	0
  2189  004FB2  0000               	dw	0
  2190  004FB4  0000               	dw	0
  2191  004FB6  0000               	dw	0
  2192  004FB8  0000               	dw	0
  2193  004FBA  0000               	dw	0
  2194  004FBC  0000               	dw	0
  2195  004FBE  0000               	dw	0
  2196  004FC0  0000               	dw	0
  2197  004FC2  0000               	dw	0
  2198  004FC4  0000               	dw	0
  2199  004FC6  0000               	dw	0
  2200  004FC8  0000               	dw	0
  2201  004FCA  0000               	dw	0
  2202  004FCC  0000               	dw	0
  2203  004FCE  0000               	dw	0
  2204  004FD0  0000               	dw	0
  2205  004FD2  0000               	dw	0
  2206  004FD4  0000               	dw	0
  2207  004FD6  0000               	dw	0
  2208  004FD8  0000               	dw	0
  2209  004FDA  0000               	dw	0
  2210  004FDC  0000               	dw	0
  2211  004FDE  0000               	dw	0
  2212  004FE0  0000               	dw	0
  2213  004FE2  0000               	dw	0
  2214  004FE4  0000               	dw	0
  2215  004FE6  0000               	dw	0
  2216  004FE8  0000               	dw	0
  2217  004FEA  0000               	dw	0
  2218  004FEC  0000               	dw	0
  2219  004FEE  0000               	dw	0
  2220  004FF0  0000               	dw	0
  2221  004FF2  0000               	dw	0
  2222  004FF4  0000               	dw	0
  2223  004FF6  0000               	dw	0
  2224  004FF8  0000               	dw	0
  2225  004FFA  0000               	dw	0
  2226  004FFC  0000               	dw	0
  2227  004FFE                     __end_of_reservedFlashDataMemory:
  2228                           	callstack 0
  2229  0000                     _constReserveMemory_absconstaddr	set	16384
  2230                           
  2231                           	psect	_constReserveMemory_const
  2232  004000                     __p_constReserveMemory_const:
  2233                           	callstack 0
  2234  004000                     _constReserveMemory:
  2235                           	callstack 0
  2236  004000  FFFF               	dw	65535
  2237  004002  FFFF               	dw	65535
  2238  004004  FFFF               	dw	65535
  2239  004006  FFFF               	dw	65535
  2240  004008  FFFF               	dw	65535
  2241  00400A  FFFF               	dw	65535
  2242  00400C  FFFF               	dw	65535
  2243  00400E  FFFF               	dw	65535
  2244  004010  FFFF               	dw	65535
  2245  004012  FFFF               	dw	65535
  2246  004014  FFFF               	dw	65535
  2247  004016  FFFF               	dw	65535
  2248  004018  FFFF               	dw	65535
  2249  00401A  FFFF               	dw	65535
  2250  00401C  FFFF               	dw	65535
  2251  00401E  FFFF               	dw	65535
  2252  004020  FFFF               	dw	65535
  2253  004022  FFFF               	dw	65535
  2254  004024  FFFF               	dw	65535
  2255  004026  FFFF               	dw	65535
  2256  004028  FFFF               	dw	65535
  2257  00402A  FFFF               	dw	65535
  2258  00402C  FFFF               	dw	65535
  2259  00402E  FFFF               	dw	65535
  2260  004030  FFFF               	dw	65535
  2261  004032  FFFF               	dw	65535
  2262  004034  FFFF               	dw	65535
  2263  004036  FFFF               	dw	65535
  2264  004038  FFFF               	dw	65535
  2265  00403A  FFFF               	dw	65535
  2266  00403C  FFFF               	dw	65535
  2267  00403E  FFFF               	dw	65535
  2268  004040                     __end_of_constReserveMemory:
  2269                           	callstack 0
  2270  0000                     _codeRevisionNumber_absconstaddr	set	65534
  2271                           
  2272                           	psect	_codeRevisionNumber_const
  2273  00FFFE                     __p_codeRevisionNumber_const:
  2274                           	callstack 0
  2275  00FFFE                     _codeRevisionNumber:
  2276                           	callstack 0
  2277  00FFFE  0001               	dw	1
  2278  010000                     __end_of_codeRevisionNumber:
  2279                           	callstack 0
  2280  0000                     _PIR3bits	set	3789
  2281  0000                     _RX1PPS	set	3765
  2282  0000                     _RC6PPS	set	3837
  2283  0000                     _OSCCON3bits	set	3802
  2284  0000                     _OSCFRQ	set	3806
  2285  0000                     _OSCCON1bits	set	3800
  2286  0000                     _PIE3bits	set	3781
  2287  0000                     _PIE0bits	set	3778
  2288  0000                     _PIR0bits	set	3786
  2289  0000                     _PIR4bits	set	3790
  2290  0000                     _WPUD	set	3877
  2291  0000                     _DAC1CON1	set	3892
  2292  0000                     _ADACQ	set	3932
  2293  0000                     _ADPCH	set	3935
  2294  0000                     _ADREFbits	set	3928
  2295  0000                     _ADCLK	set	3927
  2296  0000                     _FVRCONbits	set	3889
  2297  0000                     _DAC1CON0bits	set	3891
  2298  0000                     _WPUA	set	3856
  2299  0000                     _ANSELD	set	3878
  2300  0000                     _ANSELC	set	3873
  2301  0000                     _ANSELB	set	3865
  2302  0000                     _ANSELA	set	3857
  2303  0000                     _ADRES	set	3939
  2304  0000                     _RCREG1	set	3993
  2305  0000                     _PORTB	set	3982
  2306  0000                     _TRISDbits	set	3979
  2307  0000                     _TRISBbits	set	3977
  2308  0000                     _TRISCbits	set	3978
  2309  0000                     _RC1REG	set	3993
  2310  0000                     _SPBRG1	set	3995
  2311  0000                     _BAUDCON1bits	set	3999
  2312  0000                     _T0CON1bits	set	4054
  2313  0000                     _ADCON0bits	set	3936
  2314  0000                     _RCSTA1bits	set	3997
  2315  0000                     _T0CON0bits	set	4053
  2316  0000                     _TRISAbits	set	3976
  2317  0000                     _TRISEbits	set	3980
  2318  0000                     _LATEbits	set	3975
  2319  0000                     _PORTD	set	3984
  2320  0000                     _T2CLKCONbits	set	4031
  2321  0000                     _T2CONbits	set	4029
  2322  0000                     _TXREG1	set	3994
  2323  0000                     _TXSTA1bits	set	3998
  2324  0000                     _PORTC	set	3983
  2325  0000                     _LATCbits	set	3973
  2326  0000                     _LATDbits	set	3974
  2327  0000                     _NVMCON2	set	3970
  2328  0000                     _INTCONbits	set	4082
  2329  0000                     _NVMDAT	set	3968
  2330  0000                     _NVMADRH	set	3967
  2331  0000                     _NVMADRL	set	3966
  2332  0000                     _NVMCON1bits	set	3969
  2333  0000                     _LATBbits	set	3972
  2334  0000                     _PORTAbits	set	3981
  2335  0000                     _LATAbits	set	3971
  2336  0000                     _GIE	set	32663
  2337                           
  2338                           ; #config settings
  2339                           
  2340                           	psect	cinit
  2341  005C56                     __pcinit:
  2342                           	callstack 0
  2343  005C56                     start_initialization:
  2344                           	callstack 0
  2345  005C56                     __initialization:
  2346                           	callstack 0
  2347                           
  2348                           ; Initialize objects allocated to BANK1 (20 bytes)
  2349                           ; load TBLPTR registers with __pidataBANK1
  2350  005C56  0E48               	movlw	low __pidataBANK1
  2351  005C58  6EF6               	movwf	tblptrl,c
  2352  005C5A  0E63               	movlw	high __pidataBANK1
  2353  005C5C  6EF7               	movwf	tblptrh,c
  2354  005C5E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2355  005C60  6EF8               	movwf	tblptru,c
  2356  005C62  EE01  F000         	lfsr	0,__pdataBANK1
  2357  005C66  EE10 F014          	lfsr	1,20
  2358  005C6A                     copy_data0:
  2359  005C6A  0009               	tblrd		*+
  2360  005C6C  CFF5 FFEE          	movff	tablat,postinc0
  2361  005C70  50E5               	movf	postdec1,w,c
  2362  005C72  50E1               	movf	fsr1l,w,c
  2363  005C74  E1FA               	bnz	copy_data0
  2364                           
  2365                           ; Initialize objects allocated to BANK0 (25 bytes)
  2366                           ; load TBLPTR registers with __pidataBANK0
  2367  005C76  0EE6               	movlw	low __pidataBANK0
  2368  005C78  6EF6               	movwf	tblptrl,c
  2369  005C7A  0E62               	movlw	high __pidataBANK0
  2370  005C7C  6EF7               	movwf	tblptrh,c
  2371  005C7E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2372  005C80  6EF8               	movwf	tblptru,c
  2373  005C82  EE00  F0CC         	lfsr	0,__pdataBANK0
  2374  005C86  EE10 F019          	lfsr	1,25
  2375  005C8A                     copy_data1:
  2376  005C8A  0009               	tblrd		*+
  2377  005C8C  CFF5 FFEE          	movff	tablat,postinc0
  2378  005C90  50E5               	movf	postdec1,w,c
  2379  005C92  50E1               	movf	fsr1l,w,c
  2380  005C94  E1FA               	bnz	copy_data1
  2381                           
  2382                           ; Initialize objects allocated to COMRAM (1 bytes)
  2383                           ; load TBLPTR registers with __pidataCOMRAM
  2384  005C96  0E94               	movlw	low __pidataCOMRAM
  2385  005C98  6EF6               	movwf	tblptrl,c
  2386  005C9A  0E63               	movlw	high __pidataCOMRAM
  2387  005C9C  6EF7               	movwf	tblptrh,c
  2388  005C9E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2389  005CA0  6EF8               	movwf	tblptru,c
  2390  005CA2  0009               	tblrd		*+	;fetch initializer
  2391  005CA4  CFF5 F05B          	movff	tablat,__pdataCOMRAM
  2392                           
  2393                           ; Clear objects allocated to BANK4 (256 bytes)
  2394  005CA8  EE04  F000         	lfsr	0,__pbssBANK4
  2395  005CAC  EE11 F000          	lfsr	1,256
  2396  005CB0                     clear_0:
  2397  005CB0  6AEE               	clrf	postinc0,c
  2398  005CB2  50E5               	movf	postdec1,w,c
  2399  005CB4  50E1               	movf	fsr1l,w,c
  2400  005CB6  E1FC               	bnz	clear_0
  2401  005CB8  50E2               	movf	fsr1h,w,c
  2402  005CBA  E1FA               	bnz	clear_0
  2403                           
  2404                           ; Clear objects allocated to BANK3 (256 bytes)
  2405  005CBC  EE03  F000         	lfsr	0,__pbssBANK3
  2406  005CC0  EE11 F000          	lfsr	1,256
  2407  005CC4                     clear_1:
  2408  005CC4  6AEE               	clrf	postinc0,c
  2409  005CC6  50E5               	movf	postdec1,w,c
  2410  005CC8  50E1               	movf	fsr1l,w,c
  2411  005CCA  E1FC               	bnz	clear_1
  2412  005CCC  50E2               	movf	fsr1h,w,c
  2413  005CCE  E1FA               	bnz	clear_1
  2414                           
  2415                           ; Clear objects allocated to BANK2 (256 bytes)
  2416  005CD0  EE02  F000         	lfsr	0,__pbssBANK2
  2417  005CD4  EE11 F000          	lfsr	1,256
  2418  005CD8                     clear_2:
  2419  005CD8  6AEE               	clrf	postinc0,c
  2420  005CDA  50E5               	movf	postdec1,w,c
  2421  005CDC  50E1               	movf	fsr1l,w,c
  2422  005CDE  E1FC               	bnz	clear_2
  2423  005CE0  50E2               	movf	fsr1h,w,c
  2424  005CE2  E1FA               	bnz	clear_2
  2425                           
  2426                           ; Clear objects allocated to BANK0 (108 bytes)
  2427  005CE4  EE00  F060         	lfsr	0,__pbssBANK0
  2428  005CE8  0E6C               	movlw	108
  2429  005CEA                     clear_3:
  2430  005CEA  6AEE               	clrf	postinc0,c
  2431  005CEC  06E8               	decf	wreg,f,c
  2432  005CEE  E1FD               	bnz	clear_3
  2433                           
  2434                           ; Clear objects allocated to COMRAM (6 bytes)
  2435  005CF0  6A5A               	clrf	(__pbssCOMRAM+5)& (0+255),c
  2436  005CF2  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
  2437  005CF4  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2438  005CF6  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2439  005CF8  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2440  005CFA  6A55               	clrf	__pbssCOMRAM& (0+255),c
  2441  005CFC                     end_of_initialization:
  2442                           	callstack 0
  2443  005CFC                     __end_of__initialization:
  2444                           	callstack 0
  2445  005CFC  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2446  005CFE  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2447  005D00  0100               	movlb	0
  2448  005D02  EF0A  F028         	goto	_main	;jump to C main() function
  2449                           
  2450                           	psect	bssCOMRAM
  2451  000055                     __pbssCOMRAM:
  2452                           	callstack 0
  2453  000055                     XReceiveBTMessage@byteCount:
  2454                           	callstack 0
  2455  000055                     	ds	2
  2456  000057                     _blueTimer:
  2457                           	callstack 0
  2458  000057                     	ds	2
  2459  000059                     _sensorLsb:
  2460                           	callstack 0
  2461  000059                     	ds	1
  2462  00005A                     _sensorMsb:
  2463                           	callstack 0
  2464  00005A                     	ds	1
  2465                           
  2466                           	psect	dataCOMRAM
  2467  00005B                     __pdataCOMRAM:
  2468                           	callstack 0
  2469  00005B                     _blueState:
  2470                           	callstack 0
  2471  00005B                     	ds	1
  2472                           
  2473                           	psect	bssBANK0
  2474  000060                     __pbssBANK0:
  2475                           	callstack 0
  2476  000060                     _datasOut:
  2477                           	callstack 0
  2478  000060                     	ds	20
  2479  000074                     _datasIn:
  2480                           	callstack 0
  2481  000074                     	ds	20
  2482  000088                     _calibrationFlagsSet:
  2483                           	callstack 0
  2484  000088                     	ds	8
  2485  000090                     _calibrationPointsMSB:
  2486                           	callstack 0
  2487  000090                     	ds	8
  2488  000098                     _calibrationPointsLSB:
  2489                           	callstack 0
  2490  000098                     	ds	8
  2491  0000A0                     XReceiveBTMessage@BTHeader:
  2492                           	callstack 0
  2493  0000A0                     	ds	4
  2494  0000A4                     _secTimeCount:
  2495                           	callstack 0
  2496  0000A4                     	ds	2
  2497  0000A6                     _bleBufferDepthCount:
  2498                           	callstack 0
  2499  0000A6                     	ds	2
  2500  0000A8                     _bleTxOutOfBuffer:
  2501                           	callstack 0
  2502  0000A8                     	ds	2
  2503  0000AA                     _bleTxIntoBuffer:
  2504                           	callstack 0
  2505  0000AA                     	ds	2
  2506  0000AC                     _bleRxOutOfBuffer:
  2507                           	callstack 0
  2508  0000AC                     	ds	2
  2509  0000AE                     _bleRxIntoBuffer:
  2510                           	callstack 0
  2511  0000AE                     	ds	2
  2512  0000B0                     _periodTimer:
  2513                           	callstack 0
  2514  0000B0                     	ds	2
  2515  0000B2                     XBLE_state_manage@dataId:
  2516                           	callstack 0
  2517  0000B2                     	ds	2
  2518  0000B4                     XReceiveBTMessage@pLength:
  2519                           	callstack 0
  2520  0000B4                     	ds	2
  2521  0000B6                     _solidColourTimer:
  2522                           	callstack 0
  2523  0000B6                     	ds	2
  2524  0000B8                     _secTimeFlag:
  2525                           	callstack 0
  2526  0000B8                     	ds	1
  2527  0000B9                     _ledDisplayCount:
  2528                           	callstack 0
  2529  0000B9                     	ds	1
  2530  0000BA                     _ledCount:
  2531                           	callstack 0
  2532  0000BA                     	ds	1
  2533  0000BB                     _systemClockSpeed:
  2534                           	callstack 0
  2535  0000BB                     	ds	1
  2536  0000BC                     _flag25mSec:
  2537                           	callstack 0
  2538  0000BC                     	ds	1
  2539  0000BD                     _timer25mSec:
  2540                           	callstack 0
  2541  0000BD                     	ds	1
  2542  0000BE                     _bleReadyStore:
  2543                           	callstack 0
  2544  0000BE                     	ds	1
  2545  0000BF                     XBLE_state_manage@countId:
  2546                           	callstack 0
  2547  0000BF                     	ds	1
  2548  0000C0                     	ds	1
  2549  0000C1                     XReceiveBTMessage@receivedMessage:
  2550                           	callstack 0
  2551  0000C1                     	ds	1
  2552  0000C2                     _batteryVoltage:
  2553                           	callstack 0
  2554  0000C2                     	ds	1
  2555  0000C3                     _autoCalibrationLsb:
  2556                           	callstack 0
  2557  0000C3                     	ds	1
  2558  0000C4                     _autoCalibrationMsb:
  2559                           	callstack 0
  2560  0000C4                     	ds	1
  2561  0000C5                     _periodFlag:
  2562                           	callstack 0
  2563  0000C5                     	ds	1
  2564  0000C6                     _bleReady:
  2565                           	callstack 0
  2566  0000C6                     	ds	1
  2567  0000C7                     _solidColour:
  2568                           	callstack 0
  2569  0000C7                     	ds	1
  2570  0000C8                     _ads1120Config3:
  2571                           	callstack 0
  2572  0000C8                     	ds	1
  2573  0000C9                     _ads1120Config2:
  2574                           	callstack 0
  2575  0000C9                     	ds	1
  2576  0000CA                     _ads1120Config1:
  2577                           	callstack 0
  2578  0000CA                     	ds	1
  2579  0000CB                     _ads1120Config0:
  2580                           	callstack 0
  2581  0000CB                     	ds	1
  2582                           
  2583                           	psect	dataBANK0
  2584  0000CC                     __pdataBANK0:
  2585                           	callstack 0
  2586  0000CC                     _calibrationColours:
  2587                           	callstack 0
  2588  0000CC                     	ds	8
  2589  0000D4                     XBLE_state_manage@historyMsb:
  2590                           	callstack 0
  2591  0000D4                     	ds	8
  2592  0000DC                     XBLE_state_manage@historyLsb:
  2593                           	callstack 0
  2594  0000DC                     	ds	8
  2595  0000E4                     _bleJustReset:
  2596                           	callstack 0
  2597  0000E4                     	ds	1
  2598                           
  2599                           	psect	dataBANK1
  2600  000100                     __pdataBANK1:
  2601                           	callstack 0
  2602  000100                     _dataSet:
  2603                           	callstack 0
  2604  000100                     	ds	20
  2605                           
  2606                           	psect	bssBANK2
  2607  000200                     __pbssBANK2:
  2608                           	callstack 0
  2609  000200                     _bleRxBuffer:
  2610                           	callstack 0
  2611  000200                     	ds	256
  2612                           
  2613                           	psect	bssBANK3
  2614  000300                     __pbssBANK3:
  2615                           	callstack 0
  2616  000300                     _payload:
  2617                           	callstack 0
  2618  000300                     	ds	256
  2619                           
  2620                           	psect	bssBANK4
  2621  000400                     __pbssBANK4:
  2622                           	callstack 0
  2623  000400                     _bleTxBuffer:
  2624                           	callstack 0
  2625  000400                     	ds	256
  2626                           
  2627                           	psect	cstackBANK0
  2628  0000E5                     __pcstackBANK0:
  2629                           	callstack 0
  2630  0000E5                     
  2631                           ; 2 bytes @ 0x0
  2632  0000E5                     	ds	2
  2633  0000E7                     
  2634                           ; 3 bytes @ 0x2
  2635  0000E7                     	ds	3
  2636  0000EA                     ??_main:
  2637                           
  2638                           ; 1 bytes @ 0x5
  2639  0000EA                     	ds	2
  2640  0000EC                     main@x:
  2641                           	callstack 0
  2642                           
  2643                           ; 2 bytes @ 0x7
  2644  0000EC                     	ds	2
  2645  0000EE                     main@n:
  2646                           	callstack 0
  2647                           
  2648                           ; 1 bytes @ 0x9
  2649  0000EE                     	ds	1
  2650  0000EF                     main@d:
  2651                           	callstack 0
  2652                           
  2653                           ; 2 bytes @ 0xA
  2654  0000EF                     	ds	2
  2655                           
  2656                           	psect	cstackCOMRAM
  2657  000041                     __pcstackCOMRAM:
  2658                           	callstack 0
  2659  000041                     
  2660                           ; 1 bytes @ 0x0
  2661  000041                     	ds	1
  2662  000042                     ??_my_isr:
  2663                           
  2664                           ; 1 bytes @ 0x1
  2665  000042                     	ds	2
  2666  000044                     shootSoftSpiData8@data:
  2667                           	callstack 0
  2668  000044                     readSoftSpiData8@n:
  2669                           	callstack 0
  2670  000044                     ledColour@colour:
  2671                           	callstack 0
  2672  000044                     bleReset@reset:
  2673                           	callstack 0
  2674  000044                     shootUart1Data@data:
  2675                           	callstack 0
  2676  000044                     ifDcPlugInserted@n:
  2677                           	callstack 0
  2678  000044                     ReadEEByte@address:
  2679                           	callstack 0
  2680  000044                     WriteEEByte@address:
  2681                           	callstack 0
  2682                           
  2683                           ; 2 bytes @ 0x3
  2684  000044                     	ds	1
  2685  000045                     shootSoftSpiData8@n:
  2686                           	callstack 0
  2687  000045                     readSoftSpiData8@build:
  2688                           	callstack 0
  2689  000045                     Xble_cmd_attributes_write@n:
  2690                           	callstack 0
  2691                           
  2692                           ; 1 bytes @ 0x4
  2693  000045                     	ds	1
  2694  000046                     ??_ReadEEByte:
  2695  000046                     shootSoftSpiData8@shift:
  2696                           	callstack 0
  2697  000046                     readSoftSpiData8@shift:
  2698                           	callstack 0
  2699  000046                     WriteEEByte@data:
  2700                           	callstack 0
  2701                           
  2702                           ; 1 bytes @ 0x5
  2703  000046                     	ds	1
  2704  000047                     ??_WriteEEByte:
  2705  000047                     readDataSensor@data:
  2706                           	callstack 0
  2707  000047                     setupADS1120@d:
  2708                           	callstack 0
  2709  000047                     readAllADS1120configRegisters@d:
  2710                           	callstack 0
  2711                           
  2712                           ; 2 bytes @ 0x6
  2713  000047                     	ds	1
  2714  000048                     ??_XBLE_state_manage:
  2715  000048                     readInCalibrationPoints@n:
  2716                           	callstack 0
  2717                           
  2718                           ; 2 bytes @ 0x7
  2719  000048                     	ds	1
  2720  000049                     calibrationStow@id:
  2721                           	callstack 0
  2722                           
  2723                           ; 1 bytes @ 0x8
  2724  000049                     	ds	1
  2725  00004A                     messageMatch@cls:
  2726                           	callstack 0
  2727                           
  2728                           ; 1 bytes @ 0x9
  2729  00004A                     	ds	1
  2730  00004B                     messageMatch@command:
  2731                           	callstack 0
  2732                           
  2733                           ; 1 bytes @ 0xA
  2734  00004B                     	ds	1
  2735  00004C                     ??_messageMatch:
  2736                           
  2737                           ; 1 bytes @ 0xB
  2738  00004C                     	ds	2
  2739  00004E                     messageMatch@hilen:
  2740                           	callstack 0
  2741                           
  2742                           ; 1 bytes @ 0xD
  2743  00004E                     	ds	1
  2744  00004F                     messageMatch@n:
  2745                           	callstack 0
  2746                           
  2747                           ; 1 bytes @ 0xE
  2748  00004F                     	ds	1
  2749  000050                     messageMatch@result:
  2750                           	callstack 0
  2751                           
  2752                           ; 1 bytes @ 0xF
  2753  000050                     	ds	1
  2754  000051                     ??_XReceiveBTMessage:
  2755                           
  2756                           ; 1 bytes @ 0x10
  2757  000051                     	ds	2
  2758  000053                     XReceiveBTMessage@BTdata:
  2759                           	callstack 0
  2760                           
  2761                           ; 1 bytes @ 0x12
  2762  000053                     	ds	1
  2763  000054                     analyseBleRxIn@data:
  2764                           	callstack 0
  2765                           
  2766                           ; 1 bytes @ 0x13
  2767  000054                     	ds	1
  2768                           
  2769 ;;
  2770 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2771 ;;
  2772 ;; *************** function _main *****************
  2773 ;; Defined at:
  2774 ;;		line 177 in file "src/main.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  argc            2    0[BANK0 ] int 
  2777 ;;  argv            3    2[BANK0 ] PTR PTR unsigned char 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  d               2   10[BANK0 ] unsigned short 
  2780 ;;  x               2    7[BANK0 ] unsigned short 
  2781 ;;  n               1    9[BANK0 ] unsigned char 
  2782 ;;  data            1    0        unsigned char 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2792 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2793 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2794 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2795 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2796 ;;Total ram usage:       12 bytes
  2797 ;; Hardware stack levels required when called:    7
  2798 ;; This function calls:
  2799 ;;		_XBLE_state_manage
  2800 ;;		_analyseBleRxIn
  2801 ;;		_ifDcPlugInserted
  2802 ;;		_initialiseAdc
  2803 ;;		_initialiseBitBashSpi
  2804 ;;		_initialiseBlueToothIo
  2805 ;;		_initialiseDac
  2806 ;;		_initialiseIoBitsAndPieces
  2807 ;;		_initialiseLeds
  2808 ;;		_initialiseVoltageReference
  2809 ;;		_ledColour
  2810 ;;		_mcuRtsHigh
  2811 ;;		_mcuRtsLow
  2812 ;;		_readAllADS1120configRegisters
  2813 ;;		_readDataSensor
  2814 ;;		_readInCalibrationPoints
  2815 ;;		_setupADS1120
  2816 ;;		_switchToHighFreqOsc
  2817 ;;		_switchToLowFreqOsc
  2818 ;;		_timer0Setup
  2819 ;;		_uart1Setup
  2820 ;; This function is called by:
  2821 ;;		Startup code after reset
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text0
  2826  005014                     __ptext0:
  2827                           	callstack 0
  2828  005014                     _main:
  2829                           	callstack 24
  2830  005014                     
  2831                           ;src/main.c: 177: void main(int argc, char** argv);src/main.c: 178: {;src/main.c: 179:  
      +                            uint8 data, n;;src/main.c: 180:    uint16 x;;src/main.c: 181:    uint16 d;;src/main.c:
      +                           184:    normalOrBoot = 1;
  2832  005014  0E01               	movlw	1
  2833  005016  6E00               	movwf	0,c
  2834                           
  2835                           ;src/main.c: 186:    ANSELA = 0;
  2836  005018  0E00               	movlw	0
  2837  00501A  010F               	movlb	15	; () banked
  2838  00501C  6F11               	movwf	17,b	;volatile
  2839                           
  2840                           ;src/main.c: 187:    ANSELB = 0;
  2841  00501E  0E00               	movlw	0
  2842  005020  6F19               	movwf	25,b	;volatile
  2843                           
  2844                           ;src/main.c: 188:    ANSELC = 0;
  2845  005022  0E00               	movlw	0
  2846  005024  6F21               	movwf	33,b	;volatile
  2847                           
  2848                           ;src/main.c: 189:    ANSELD = 0;
  2849  005026  0E00               	movlw	0
  2850  005028  6F26               	movwf	38,b	;volatile
  2851  00502A                     
  2852                           ; BSR set to: 15
  2853                           ;src/main.c: 191:    initialiseLeds();
  2854  00502A  ECAE  F031         	call	_initialiseLeds	;wreg free
  2855  00502E                     
  2856                           ;src/main.c: 192:    initialiseIoBitsAndPieces();
  2857  00502E  ECBF  F031         	call	_initialiseIoBitsAndPieces	;wreg free
  2858  005032                     
  2859                           ;src/main.c: 193:    initialiseBlueToothIo();
  2860  005032  EC66  F031         	call	_initialiseBlueToothIo	;wreg free
  2861  005036                     
  2862                           ;src/main.c: 195:    if (ifDcPlugInserted() == 1)
  2863  005036  EC83  F02E         	call	_ifDcPlugInserted	;wreg free
  2864  00503A  06E8               	decf	wreg,f,c
  2865  00503C  A4D8               	btfss	status,2,c
  2866  00503E  EF23  F028         	goto	u2191
  2867  005042  EF25  F028         	goto	u2190
  2868  005046                     u2191:
  2869  005046  EFB4  F028         	goto	l492
  2870  00504A                     u2190:
  2871  00504A                     
  2872                           ;src/main.c: 196:    {;src/main.c: 206:       T2CONbits.ON = 1;
  2873  00504A  8EBD               	bsf	189,7,c	;volatile
  2874  00504C                     
  2875                           ;src/main.c: 207:       T2CONbits.CKPS = 0b101;
  2876  00504C  50BD               	movf	189,w,c	;volatile
  2877  00504E  0B8F               	andlw	-113
  2878  005050  0950               	iorlw	80
  2879  005052  6EBD               	movwf	189,c	;volatile
  2880                           
  2881                           ;src/main.c: 208:       T2CONbits.OUTPS = 0b000;
  2882  005054  0EF0               	movlw	-16
  2883  005056  16BD               	andwf	189,f,c	;volatile
  2884                           
  2885                           ;src/main.c: 209:       T2CLKCONbits.CS = 0b0100;
  2886  005058  50BF               	movf	191,w,c	;volatile
  2887  00505A  0BF0               	andlw	-16
  2888  00505C  0904               	iorlw	4
  2889  00505E  6EBF               	movwf	191,c	;volatile
  2890  005060                     
  2891                           ;src/main.c: 213:       if ((PORTD & 0b00100000) == 0b00100000)
  2892  005060  AA90               	btfss	144,5,c	;volatile
  2893  005062  EF35  F028         	goto	u2201
  2894  005066  EF37  F028         	goto	u2200
  2895  00506A                     u2201:
  2896  00506A  EF7F  F028         	goto	l510
  2897  00506E                     u2200:
  2898  00506E                     
  2899                           ;src/main.c: 214:       {;src/main.c: 218:          LATDbits.LATD2 = 0;
  2900  00506E  9486               	bcf	134,2,c	;volatile
  2901  005070                     
  2902                           ;src/main.c: 220:          for (d = 0 ; d < 500 ; d++)
  2903  005070  0E00               	movlw	0
  2904  005072  0100               	movlb	0	; () banked
  2905  005074  6FF0               	movwf	(main@d+1)& (0+255),b
  2906  005076  0E00               	movlw	0
  2907  005078  6FEF               	movwf	main@d& (0+255),b
  2908  00507A                     l494:
  2909                           
  2910                           ; BSR set to: 0
  2911  00507A  0004               	clrwdt		;# 
  2912  00507C  0100               	movlb	0	; () banked
  2913  00507E  4BEF               	infsnz	main@d& (0+255),f,b
  2914  005080  2BF0               	incf	(main@d+1)& (0+255),f,b
  2915  005082                     
  2916                           ; BSR set to: 0
  2917  005082  0EF4               	movlw	244
  2918  005084  5DEF               	subwf	main@d& (0+255),w,b
  2919  005086  0E01               	movlw	1
  2920  005088  59F0               	subwfb	(main@d+1)& (0+255),w,b
  2921  00508A  A0D8               	btfss	status,0,c
  2922  00508C  EF4A  F028         	goto	u2211
  2923  005090  EF4C  F028         	goto	u2210
  2924  005094                     u2211:
  2925  005094  EF3D  F028         	goto	l494
  2926  005098                     u2210:
  2927  005098                     
  2928                           ; BSR set to: 0
  2929                           ;src/main.c: 223:          LATDbits.LATD2 = 1;
  2930  005098  8486               	bsf	134,2,c	;volatile
  2931                           
  2932                           ;src/main.c: 225:          LATCbits.LATC0 = 0;
  2933  00509A  9085               	bcf	133,0,c	;volatile
  2934                           
  2935                           ;src/main.c: 227:          LATEbits.LATE0 = 0;
  2936  00509C  9087               	bcf	135,0,c	;volatile
  2937                           
  2938                           ;src/main.c: 228:          TRISEbits.TRISE0 = 0;
  2939  00509E  908C               	bcf	140,0,c	;volatile
  2940                           
  2941                           ;src/main.c: 230:          TRISAbits.TRISA4 = 1;
  2942  0050A0  8888               	bsf	136,4,c	;volatile
  2943                           
  2944                           ;src/main.c: 231:          TRISAbits.TRISA3 = 1;
  2945  0050A2  8688               	bsf	136,3,c	;volatile
  2946                           
  2947                           ;src/main.c: 232:          TRISAbits.TRISA1 = 1;
  2948  0050A4  8288               	bsf	136,1,c	;volatile
  2949                           
  2950                           ;src/main.c: 233:          TRISAbits.TRISA2 = 1;
  2951  0050A6  8488               	bsf	136,2,c	;volatile
  2952  0050A8                     
  2953                           ; BSR set to: 0
  2954                           ;src/main.c: 234:          WPUA = 0b00000000;
  2955  0050A8  0E00               	movlw	0
  2956  0050AA  010F               	movlb	15	; () banked
  2957  0050AC  6F10               	movwf	16,b	;volatile
  2958  0050AE                     
  2959                           ; BSR set to: 15
  2960                           ;src/main.c: 235:          TRISAbits.TRISA5 = 1;
  2961  0050AE  8A88               	bsf	136,5,c	;volatile
  2962  0050B0                     
  2963                           ; BSR set to: 15
  2964                           ;src/main.c: 237:          T0CON0bits.T0EN = 0;
  2965  0050B0  9ED5               	bcf	213,7,c	;volatile
  2966  0050B2                     
  2967                           ; BSR set to: 15
  2968                           ;src/main.c: 238:          TXSTA1bits.TXEN = 0;
  2969  0050B2  9A9E               	bcf	158,5,c	;volatile
  2970  0050B4                     
  2971                           ; BSR set to: 15
  2972                           ;src/main.c: 239:          RCSTA1bits.SPEN = 0;
  2973  0050B4  9E9D               	bcf	157,7,c	;volatile
  2974  0050B6                     
  2975                           ; BSR set to: 15
  2976                           ;src/main.c: 241:          ledColour(0b00000000);
  2977  0050B6  0E00               	movlw	0
  2978  0050B8  EC41  F030         	call	_ledColour
  2979  0050BC                     l496:
  2980  0050BC  0004               	clrwdt		;# 
  2981  0050BE                     
  2982                           ;src/main.c: 248:             if (ifDcPlugInserted() == 0)
  2983  0050BE  EC83  F02E         	call	_ifDcPlugInserted	;wreg free
  2984  0050C2  0900               	iorlw	0
  2985  0050C4  A4D8               	btfss	status,2,c
  2986  0050C6  EF67  F028         	goto	u2221
  2987  0050CA  EF69  F028         	goto	u2220
  2988  0050CE                     u2221:
  2989  0050CE  EF6B  F028         	goto	l497
  2990  0050D2                     u2220:
  2991  0050D2                     l498:
  2992  0050D2  EF69  F028         	goto	l498
  2993  0050D6                     l497:
  2994                           
  2995                           ;src/main.c: 251:             if ((PORTD & 0b00100000) == 0b00100000)
  2996  0050D6  AA90               	btfss	144,5,c	;volatile
  2997  0050D8  EF70  F028         	goto	u2231
  2998  0050DC  EF72  F028         	goto	u2230
  2999  0050E0                     u2231:
  3000  0050E0  EF7D  F028         	goto	l504
  3001  0050E4                     u2230:
  3002  0050E4                     
  3003                           ;src/main.c: 252:             {;src/main.c: 257:                if (PIR4bits.TMR2IF == 1
      +                          )
  3004  0050E4  010E               	movlb	14	; () banked
  3005  0050E6  A3CE               	btfss	206,1,b	;volatile
  3006  0050E8  EF78  F028         	goto	u2241
  3007  0050EC  EF7A  F028         	goto	u2240
  3008  0050F0                     u2241:
  3009  0050F0  EF5E  F028         	goto	l496
  3010  0050F4                     u2240:
  3011  0050F4                     
  3012                           ; BSR set to: 14
  3013                           ;src/main.c: 258:                {;src/main.c: 260:                   PIR4bits.TMR2IF = 
      +                          0;
  3014  0050F4  93CE               	bcf	206,1,b	;volatile
  3015  0050F6  EF5E  F028         	goto	l496
  3016  0050FA                     l504:
  3017  0050FA  EF7D  F028         	goto	l504
  3018  0050FE                     l510:
  3019  0050FE  0004               	clrwdt		;# 
  3020                           
  3021                           ;src/main.c: 280:             LATCbits.LATC0 = 1;
  3022  005100  8085               	bsf	133,0,c	;volatile
  3023                           
  3024                           ;src/main.c: 282:             if ((PORTD & 0b00000001) == 0b00000001)
  3025  005102  A090               	btfss	144,0,c	;volatile
  3026  005104  EF86  F028         	goto	u2251
  3027  005108  EF88  F028         	goto	u2250
  3028  00510C                     u2251:
  3029  00510C  EF8D  F028         	goto	l3514
  3030  005110                     u2250:
  3031  005110                     
  3032                           ;src/main.c: 283:             {;src/main.c: 285:                ledColour(0b00000010);
  3033  005110  0E02               	movlw	2
  3034  005112  EC41  F030         	call	_ledColour
  3035                           
  3036                           ;src/main.c: 287:             }
  3037  005116  EF99  F028         	goto	l512
  3038  00511A                     l3514:
  3039                           
  3040                           ;src/main.c: 289:             {;src/main.c: 291:                ledColour(0b00000001);
  3041  00511A  0E01               	movlw	1
  3042  00511C  EC41  F030         	call	_ledColour
  3043  005120                     
  3044                           ;src/main.c: 293:                if (PIR4bits.TMR2IF == 1)
  3045  005120  010E               	movlb	14	; () banked
  3046  005122  A3CE               	btfss	206,1,b	;volatile
  3047  005124  EF96  F028         	goto	u2261
  3048  005128  EF98  F028         	goto	u2260
  3049  00512C                     u2261:
  3050  00512C  EF99  F028         	goto	l512
  3051  005130                     u2260:
  3052  005130                     
  3053                           ; BSR set to: 14
  3054                           ;src/main.c: 294:                {;src/main.c: 295:                   PIR4bits.TMR2IF = 
      +                          0;
  3055  005130  93CE               	bcf	206,1,b	;volatile
  3056  005132                     l512:
  3057                           
  3058                           ;src/main.c: 300:             if ((PORTD & 0b00100000) == 0b00100000)
  3059  005132  AA90               	btfss	144,5,c	;volatile
  3060  005134  EF9E  F028         	goto	u2271
  3061  005138  EFA0  F028         	goto	u2270
  3062  00513C                     u2271:
  3063  00513C  EFA5  F028         	goto	l3522
  3064  005140                     u2270:
  3065  005140                     
  3066                           ;src/main.c: 301:             {;src/main.c: 302:                ledColour(0b00000000);
  3067  005140  0E00               	movlw	0
  3068  005142  EC41  F030         	call	_ledColour
  3069  005146                     l515:
  3070  005146  EFA3  F028         	goto	l515
  3071  00514A                     l3522:
  3072                           
  3073                           ;src/main.c: 308:             if (ifDcPlugInserted() == 0)
  3074  00514A  EC83  F02E         	call	_ifDcPlugInserted	;wreg free
  3075  00514E  0900               	iorlw	0
  3076  005150  A4D8               	btfss	status,2,c
  3077  005152  EFAD  F028         	goto	u2281
  3078  005156  EFAF  F028         	goto	u2280
  3079  00515A                     u2281:
  3080  00515A  EF7F  F028         	goto	l510
  3081  00515E                     u2280:
  3082  00515E                     
  3083                           ;src/main.c: 309:             {;src/main.c: 310:                ledColour(0b00000000);
  3084  00515E  0E00               	movlw	0
  3085  005160  EC41  F030         	call	_ledColour
  3086  005164                     l519:
  3087  005164  EFB2  F028         	goto	l519
  3088  005168                     l492:
  3089                           
  3090                           ;src/main.c: 322:    {;src/main.c: 326:       LATCbits.LATC0 = 1;
  3091  005168  8085               	bsf	133,0,c	;volatile
  3092  00516A                     
  3093                           ;src/main.c: 330:       for (d = 0 ; d < 500 ; d++)
  3094  00516A  0E00               	movlw	0
  3095  00516C  0100               	movlb	0	; () banked
  3096  00516E  6FF0               	movwf	(main@d+1)& (0+255),b
  3097  005170  0E00               	movlw	0
  3098  005172  6FEF               	movwf	main@d& (0+255),b
  3099  005174                     l525:
  3100                           
  3101                           ; BSR set to: 0
  3102  005174  0004               	clrwdt		;# 
  3103  005176  0100               	movlb	0	; () banked
  3104  005178  4BEF               	infsnz	main@d& (0+255),f,b
  3105  00517A  2BF0               	incf	(main@d+1)& (0+255),f,b
  3106  00517C                     
  3107                           ; BSR set to: 0
  3108  00517C  0EF4               	movlw	244
  3109  00517E  5DEF               	subwf	main@d& (0+255),w,b
  3110  005180  0E01               	movlw	1
  3111  005182  59F0               	subwfb	(main@d+1)& (0+255),w,b
  3112  005184  A0D8               	btfss	status,0,c
  3113  005186  EFC7  F028         	goto	u2291
  3114  00518A  EFC9  F028         	goto	u2290
  3115  00518E                     u2291:
  3116  00518E  EFBA  F028         	goto	l525
  3117  005192                     u2290:
  3118  005192                     
  3119                           ; BSR set to: 0
  3120                           ;src/main.c: 333:       if (systemClockSpeed != 1)
  3121  005192  05BB               	decf	_systemClockSpeed& (0+255),w,b
  3122  005194  B4D8               	btfsc	status,2,c
  3123  005196  EFCF  F028         	goto	u2301
  3124  00519A  EFD1  F028         	goto	u2300
  3125  00519E                     u2301:
  3126  00519E  EFD5  F028         	goto	l3542
  3127  0051A2                     u2300:
  3128  0051A2                     
  3129                           ; BSR set to: 0
  3130                           ;src/main.c: 334:       {;src/main.c: 335:          systemClockSpeed = 1;
  3131  0051A2  0E01               	movlw	1
  3132  0051A4  6FBB               	movwf	_systemClockSpeed& (0+255),b
  3133  0051A6                     
  3134                           ; BSR set to: 0
  3135                           ;src/main.c: 336:          switchToHighFreqOsc();
  3136  0051A6  EC64  F030         	call	_switchToHighFreqOsc	;wreg free
  3137  0051AA                     l3542:
  3138                           
  3139                           ;src/main.c: 339:       LATEbits.LATE0 = 1;
  3140  0051AA  8087               	bsf	135,0,c	;volatile
  3141  0051AC                     
  3142                           ;src/main.c: 340:       TRISEbits.TRISE0 = 0;
  3143  0051AC  908C               	bcf	140,0,c	;volatile
  3144  0051AE                     
  3145                           ;src/main.c: 342:       initialiseVoltageReference();
  3146  0051AE  EC24  F031         	call	_initialiseVoltageReference	;wreg free
  3147  0051B2                     
  3148                           ;src/main.c: 343:       initialiseDac();
  3149  0051B2  EC80  F031         	call	_initialiseDac	;wreg free
  3150  0051B6                     
  3151                           ;src/main.c: 344:       initialiseAdc();
  3152  0051B6  ECD2  F030         	call	_initialiseAdc	;wreg free
  3153  0051BA                     
  3154                           ;src/main.c: 345:       initialiseBitBashSpi();
  3155  0051BA  EC8C  F031         	call	_initialiseBitBashSpi	;wreg free
  3156  0051BE                     
  3157                           ;src/main.c: 346:       timer0Setup();
  3158  0051BE  EC36  F031         	call	_timer0Setup	;wreg free
  3159  0051C2                     
  3160                           ;src/main.c: 347:       uart1Setup();
  3161  0051C2  ECE8  F030         	call	_uart1Setup	;wreg free
  3162  0051C6                     
  3163                           ;src/main.c: 348:       setupADS1120();
  3164  0051C6  ECF6  F02F         	call	_setupADS1120	;wreg free
  3165  0051CA                     
  3166                           ;src/main.c: 349:       readInCalibrationPoints();
  3167  0051CA  EC48  F02F         	call	_readInCalibrationPoints	;wreg free
  3168  0051CE                     
  3169                           ;src/main.c: 350:       readAllADS1120configRegisters();
  3170  0051CE  ECCE  F02F         	call	_readAllADS1120configRegisters	;wreg free
  3171  0051D2                     
  3172                           ;src/main.c: 352:       if ((ads1120Config0 != 0b00111010) ||
  3173  0051D2  0E3A               	movlw	58
  3174  0051D4  0100               	movlb	0	; () banked
  3175  0051D6  19CB               	xorwf	_ads1120Config0& (0+255),w,b
  3176  0051D8  A4D8               	btfss	status,2,c
  3177  0051DA  EFF1  F028         	goto	u2311
  3178  0051DE  EFF3  F028         	goto	u2310
  3179  0051E2                     u2311:
  3180  0051E2  EF0C  F029         	goto	l3572
  3181  0051E6                     u2310:
  3182  0051E6                     
  3183                           ; BSR set to: 0
  3184  0051E6  51CA               	movf	_ads1120Config1& (0+255),w,b
  3185  0051E8  A4D8               	btfss	status,2,c
  3186  0051EA  EFF9  F028         	goto	u2321
  3187  0051EE  EFFB  F028         	goto	u2320
  3188  0051F2                     u2321:
  3189  0051F2  EF0C  F029         	goto	l3572
  3190  0051F6                     u2320:
  3191  0051F6                     
  3192                           ; BSR set to: 0
  3193  0051F6  0E88               	movlw	136
  3194  0051F8  19C9               	xorwf	_ads1120Config2& (0+255),w,b
  3195  0051FA  A4D8               	btfss	status,2,c
  3196  0051FC  EF02  F029         	goto	u2331
  3197  005200  EF04  F029         	goto	u2330
  3198  005204                     u2331:
  3199  005204  EF0C  F029         	goto	l3572
  3200  005208                     u2330:
  3201  005208                     
  3202                           ; BSR set to: 0
  3203  005208  51C8               	movf	_ads1120Config3& (0+255),w,b
  3204  00520A  B4D8               	btfsc	status,2,c
  3205  00520C  EF0A  F029         	goto	u2341
  3206  005210  EF0C  F029         	goto	u2340
  3207  005214                     u2341:
  3208  005214  EF0F  F029         	goto	l3574
  3209  005218                     u2340:
  3210  005218                     l3572:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;src/main.c: 356:       {;src/main.c: 357:          ledColour(0b00000011);
  3214  005218  0E03               	movlw	3
  3215  00521A  EC41  F030         	call	_ledColour
  3216  00521E                     l3574:
  3217                           
  3218                           ;src/main.c: 360:       for (n = 0 ; n < 10 ; n++)
  3219  00521E  0E00               	movlw	0
  3220  005220  0100               	movlb	0	; () banked
  3221  005222  6FEE               	movwf	main@n& (0+255),b
  3222  005224                     l3580:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;src/main.c: 361:          readDataSensor(0b00001000);
  3226  005224  0E08               	movlw	8
  3227  005226  ECBB  F030         	call	_readDataSensor
  3228  00522A  0100               	movlb	0	; () banked
  3229  00522C  2BEE               	incf	main@n& (0+255),f,b
  3230  00522E                     
  3231                           ; BSR set to: 0
  3232  00522E  0E09               	movlw	9
  3233  005230  65EE               	cpfsgt	main@n& (0+255),b
  3234  005232  EF1D  F029         	goto	u2351
  3235  005236  EF1F  F029         	goto	u2350
  3236  00523A                     u2351:
  3237  00523A  EF12  F029         	goto	l3580
  3238  00523E                     u2350:
  3239  00523E                     
  3240                           ; BSR set to: 0
  3241                           ;src/main.c: 363:       autoCalibrationLsb = sensorLsb;
  3242  00523E  C059  F0C3         	movff	_sensorLsb,_autoCalibrationLsb
  3243                           
  3244                           ;src/main.c: 364:       autoCalibrationMsb = sensorMsb;
  3245  005242  C05A  F0C4         	movff	_sensorMsb,_autoCalibrationMsb
  3246                           
  3247                           ;src/main.c: 366:       GIE = 1;
  3248  005246  8EF2               	bsf	4082,7,c	;volatile
  3249                           
  3250                           ;src/main.c: 368:       LATDbits.LATD2 = 1;
  3251  005248  8486               	bsf	134,2,c	;volatile
  3252  00524A                     l533:
  3253                           
  3254                           ;src/main.c: 371:       {;src/main.c: 373:          LATCbits.LATC0 = 1;
  3255  00524A  8085               	bsf	133,0,c	;volatile
  3256  00524C                     
  3257                           ;src/main.c: 375:          if (ifDcPlugInserted() == 1)
  3258  00524C  EC83  F02E         	call	_ifDcPlugInserted	;wreg free
  3259  005250  06E8               	decf	wreg,f,c
  3260  005252  A4D8               	btfss	status,2,c
  3261  005254  EF2E  F029         	goto	u2361
  3262  005258  EF30  F029         	goto	u2360
  3263  00525C                     u2361:
  3264  00525C  EF40  F029         	goto	l3604
  3265  005260                     u2360:
  3266  005260                     
  3267                           ;src/main.c: 376:          {;src/main.c: 378:             ledColour(0b00000000);
  3268  005260  0E00               	movlw	0
  3269  005262  EC41  F030         	call	_ledColour
  3270  005266                     
  3271                           ;src/main.c: 379:             LATCbits.LATC0 = 0;
  3272  005266  9085               	bcf	133,0,c	;volatile
  3273  005268                     
  3274                           ;src/main.c: 381:             GIE = 0;
  3275  005268  9EF2               	bcf	4082,7,c	;volatile
  3276  00526A                     
  3277                           ;src/main.c: 382:             readDataSensor(0b00000010);
  3278  00526A  0E02               	movlw	2
  3279  00526C  ECBB  F030         	call	_readDataSensor
  3280  005270                     
  3281                           ;src/main.c: 385:             ADCON0bits.ADON = 0;
  3282  005270  9E60               	bcf	96,7,c	;volatile
  3283  005272                     
  3284                           ;src/main.c: 388:             DAC1CON0bits.EN = 0;
  3285  005272  010F               	movlb	15	; () banked
  3286  005274  9F33               	bcf	51,7,b	;volatile
  3287  005276                     
  3288                           ; BSR set to: 15
  3289                           ;src/main.c: 391:             FVRCONbits.FVREN = 0;
  3290  005276  9F31               	bcf	49,7,b	;volatile
  3291  005278                     
  3292                           ; BSR set to: 15
  3293                           ;src/main.c: 393:             switchToLowFreqOsc();
  3294  005278  EC83  F030         	call	_switchToLowFreqOsc	;wreg free
  3295  00527C                     l535:
  3296  00527C  EF3E  F029         	goto	l535
  3297  005280                     l3604:
  3298                           
  3299                           ;src/main.c: 401:          if (bleBufferDepthCount > 128)
  3300  005280  0100               	movlb	0	; () banked
  3301  005282  51A7               	movf	(_bleBufferDepthCount+1)& (0+255),w,b	;volatile
  3302  005284  E109               	bnz	u2370
  3303  005286  0E81               	movlw	129
  3304  005288  5DA6               	subwf	_bleBufferDepthCount& (0+255),w,b	;volatile
  3305  00528A  A0D8               	btfss	status,0,c
  3306  00528C  EF4A  F029         	goto	u2371
  3307  005290  EF4C  F029         	goto	u2370
  3308  005294                     u2371:
  3309  005294  EF50  F029         	goto	l3608
  3310  005298                     u2370:
  3311  005298                     
  3312                           ; BSR set to: 0
  3313                           ;src/main.c: 402:             mcuRtsHigh();
  3314  005298  ECC8  F031         	call	_mcuRtsHigh	;wreg free
  3315  00529C  EF52  F029         	goto	l3610
  3316  0052A0                     l3608:
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;src/main.c: 404:             mcuRtsLow();
  3320  0052A0  ECC6  F031         	call	_mcuRtsLow	;wreg free
  3321  0052A4                     l3610:
  3322                           
  3323                           ;src/main.c: 406:          analyseBleRxIn();
  3324  0052A4  ECB6  F02E         	call	_analyseBleRxIn	;wreg free
  3325  0052A8                     
  3326                           ;src/main.c: 407:          XBLE_state_manage();
  3327  0052A8  EC53  F02B         	call	_XBLE_state_manage	;wreg free
  3328  0052AC  0004               	clrwdt		;# 
  3329  0052AE                     
  3330                           ;src/main.c: 411:          if (secTimeFlag == 1)
  3331  0052AE  0100               	movlb	0	; () banked
  3332  0052B0  05B8               	decf	_secTimeFlag& (0+255),w,b
  3333  0052B2  A4D8               	btfss	status,2,c
  3334  0052B4  EF5E  F029         	goto	u2381
  3335  0052B8  EF60  F029         	goto	u2380
  3336  0052BC                     u2381:
  3337  0052BC  EF7E  F029         	goto	l3628
  3338  0052C0                     u2380:
  3339  0052C0                     
  3340                           ; BSR set to: 0
  3341                           ;src/main.c: 412:          {;src/main.c: 414:             secTimeFlag = 0;
  3342  0052C0  0E00               	movlw	0
  3343  0052C2  6FB8               	movwf	_secTimeFlag& (0+255),b
  3344  0052C4                     
  3345                           ; BSR set to: 0
  3346                           ;src/main.c: 416:             if (ADCON0bits.ADGO == 0)
  3347  0052C4  B060               	btfsc	96,0,c	;volatile
  3348  0052C6  EF67  F029         	goto	u2391
  3349  0052CA  EF69  F029         	goto	u2390
  3350  0052CE                     u2391:
  3351  0052CE  EF7E  F029         	goto	l3628
  3352  0052D2                     u2390:
  3353  0052D2                     
  3354                           ; BSR set to: 0
  3355                           ;src/main.c: 417:             {;src/main.c: 418:                x = ADRES;
  3356  0052D2  CF63 F0EC          	movff	3939,main@x	;volatile
  3357  0052D6  CF64 F0ED          	movff	3940,main@x+1	;volatile
  3358  0052DA                     
  3359                           ; BSR set to: 0
  3360                           ;src/main.c: 419:                x = x >> 2;
  3361  0052DA  C0EC  F0EA         	movff	main@x,??_main
  3362  0052DE  C0ED  F0EB         	movff	main@x+1,??_main+1
  3363  0052E2  90D8               	bcf	status,0,c
  3364  0052E4  33EB               	rrcf	(??_main+1)& (0+255),f,b
  3365  0052E6  33EA               	rrcf	??_main& (0+255),f,b
  3366  0052E8  90D8               	bcf	status,0,c
  3367  0052EA  33EB               	rrcf	(??_main+1)& (0+255),f,b
  3368  0052EC  33EA               	rrcf	??_main& (0+255),f,b
  3369  0052EE  C0EA  F0EC         	movff	??_main,main@x
  3370  0052F2  C0EB  F0ED         	movff	??_main+1,main@x+1
  3371  0052F6                     
  3372                           ; BSR set to: 0
  3373                           ;src/main.c: 420:                batteryVoltage = (unsigned char)x;
  3374  0052F6  C0EC  F0C2         	movff	main@x,_batteryVoltage	;volatile
  3375  0052FA                     
  3376                           ; BSR set to: 0
  3377                           ;src/main.c: 421:                ADCON0bits.ADGO = 1;
  3378  0052FA  8060               	bsf	96,0,c	;volatile
  3379  0052FC                     l3628:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;src/main.c: 426:          if (solidColourTimer != 0)
  3383  0052FC  51B6               	movf	_solidColourTimer& (0+255),w,b	;volatile
  3384  0052FE  11B7               	iorwf	(_solidColourTimer+1)& (0+255),w,b	;volatile
  3385  005300  B4D8               	btfsc	status,2,c
  3386  005302  EF85  F029         	goto	u2401
  3387  005306  EF87  F029         	goto	u2400
  3388  00530A                     u2401:
  3389  00530A  EF92  F029         	goto	l3632
  3390  00530E                     u2400:
  3391  00530E                     
  3392                           ; BSR set to: 0
  3393                           ;src/main.c: 427:             ledColour(calibrationColours[solidColour]);
  3394  00530E  0ECC               	movlw	low _calibrationColours
  3395  005310  25C7               	addwf	_solidColour& (0+255),w,b	;volatile
  3396  005312  6ED9               	movwf	fsr2l,c
  3397  005314  6ADA               	clrf	fsr2h,c
  3398  005316  0E00               	movlw	high _calibrationColours
  3399  005318  22DA               	addwfc	fsr2h,f,c
  3400  00531A  50DF               	movf	indf2,w,c
  3401  00531C  EC41  F030         	call	_ledColour
  3402  005320  EF25  F029         	goto	l533
  3403  005324                     l3632:
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;src/main.c: 429:          {;src/main.c: 431:             if (ledDisplayCount == 19)
  3407  005324  0E13               	movlw	19
  3408  005326  19B9               	xorwf	_ledDisplayCount& (0+255),w,b	;volatile
  3409  005328  A4D8               	btfss	status,2,c
  3410  00532A  EF99  F029         	goto	u2411
  3411  00532E  EF9B  F029         	goto	u2410
  3412  005332                     u2411:
  3413  005332  EFAE  F029         	goto	l3640
  3414  005336                     u2410:
  3415  005336                     
  3416                           ; BSR set to: 0
  3417                           ;src/main.c: 432:             {;src/main.c: 433:                if (blueState == 7)
  3418  005336  0E07               	movlw	7
  3419  005338  185B               	xorwf	_blueState^0,w,c	;volatile
  3420  00533A  A4D8               	btfss	status,2,c
  3421  00533C  EFA2  F029         	goto	u2421
  3422  005340  EFA4  F029         	goto	u2420
  3423  005344                     u2421:
  3424  005344  EFA9  F029         	goto	l3638
  3425  005348                     u2420:
  3426  005348                     
  3427                           ; BSR set to: 0
  3428                           ;src/main.c: 434:                   ledColour(0b00000010);
  3429  005348  0E02               	movlw	2
  3430  00534A  EC41  F030         	call	_ledColour
  3431  00534E  EF25  F029         	goto	l533
  3432  005352                     l3638:
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;src/main.c: 436:                   ledColour(0b00000100);
  3436  005352  0E04               	movlw	4
  3437  005354  EC41  F030         	call	_ledColour
  3438  005358  EF25  F029         	goto	l533
  3439  00535C                     l3640:
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;src/main.c: 439:                ledColour(0b00000000);
  3443  00535C  0E00               	movlw	0
  3444  00535E  EC41  F030         	call	_ledColour
  3445  005362  EF25  F029         	goto	l533
  3446  005366  EF11  F000         	goto	start
  3447  00536A                     __end_of_main:
  3448                           	callstack 0
  3449                           
  3450 ;; *************** function _uart1Setup *****************
  3451 ;; Defined at:
  3452 ;;		line 478 in file "src/main.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  dummyRead       1    0        unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3470 ;;Total ram usage:        1 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    2
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text1
  3481  0061D0                     __ptext1:
  3482                           	callstack 0
  3483  0061D0                     _uart1Setup:
  3484                           	callstack 28
  3485  0061D0                     
  3486                           ;src/main.c: 480:    uint8 dummyRead;;src/main.c: 493:    TXSTA1bits.CSRC = 1;
  3487  0061D0  8E9E               	bsf	158,7,c	;volatile
  3488                           
  3489                           ;src/main.c: 498:    TXSTA1bits.TX9 = 0;
  3490  0061D2  9C9E               	bcf	158,6,c	;volatile
  3491                           
  3492                           ;src/main.c: 503:    TXSTA1bits.SYNC = 0;
  3493  0061D4  989E               	bcf	158,4,c	;volatile
  3494                           
  3495                           ;src/main.c: 511:    TXSTA1bits.SENDB = 0;
  3496  0061D6  969E               	bcf	158,3,c	;volatile
  3497                           
  3498                           ;src/main.c: 519:    TXSTA1bits.BRGH = 1;
  3499  0061D8  849E               	bsf	158,2,c	;volatile
  3500                           
  3501                           ;src/main.c: 533:    TXSTA1bits.TXEN = 1;
  3502  0061DA  8A9E               	bsf	158,5,c	;volatile
  3503                           
  3504                           ;src/main.c: 541:    RCSTA1bits.RX9 = 0;
  3505  0061DC  9C9D               	bcf	157,6,c	;volatile
  3506                           
  3507                           ;src/main.c: 553:    RCSTA1bits.SREN = 0;
  3508  0061DE  9A9D               	bcf	157,5,c	;volatile
  3509                           
  3510                           ;src/main.c: 562:    RCSTA1bits.CREN = 1;
  3511  0061E0  889D               	bsf	157,4,c	;volatile
  3512                           
  3513                           ;src/main.c: 570:    RCSTA1bits.ADDEN = 0;
  3514  0061E2  969D               	bcf	157,3,c	;volatile
  3515                           
  3516                           ;src/main.c: 622:    BAUDCON1bits.CKTXP = 0;
  3517  0061E4  989F               	bcf	159,4,c	;volatile
  3518                           
  3519                           ;src/main.c: 628:    BAUDCON1bits.BRG16 = 1;
  3520  0061E6  869F               	bsf	159,3,c	;volatile
  3521                           
  3522                           ;src/main.c: 645:    BAUDCON1bits.ABDEN = 0;
  3523  0061E8  909F               	bcf	159,0,c	;volatile
  3524  0061EA                     
  3525                           ;src/main.c: 653:    SPBRG1 = 68;
  3526  0061EA  0E44               	movlw	68
  3527  0061EC  6E9B               	movwf	155,c	;volatile
  3528  0061EE                     
  3529                           ;src/main.c: 658:    RCSTA1bits.SPEN = 1;
  3530  0061EE  8E9D               	bsf	157,7,c	;volatile
  3531  0061F0                     
  3532                           ;src/main.c: 660:    INTCONbits.PEIE = 1;
  3533  0061F0  8CF2               	bsf	242,6,c	;volatile
  3534  0061F2  5099               	movf	153,w,c	;volatile
  3535  0061F4                     
  3536                           ;src/main.c: 663:    PIE3bits.RC1IE = 1;
  3537  0061F4  010E               	movlb	14	; () banked
  3538  0061F6  8BC5               	bsf	197,5,b	;volatile
  3539  0061F8                     
  3540                           ; BSR set to: 14
  3541  0061F8  0012               	return		;funcret
  3542  0061FA                     __end_of_uart1Setup:
  3543                           	callstack 0
  3544                           
  3545 ;; *************** function _timer0Setup *****************
  3546 ;; Defined at:
  3547 ;;		line 452 in file "src/main.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text2
  3576  00626C                     __ptext2:
  3577                           	callstack 0
  3578  00626C                     _timer0Setup:
  3579                           	callstack 28
  3580  00626C                     
  3581                           ;src/main.c: 455:    T0CON0bits.T016BIT = 0;
  3582  00626C  98D5               	bcf	213,4,c	;volatile
  3583  00626E                     
  3584                           ;src/main.c: 456:    T0CON0bits.T0OUTPS = 0b0000;
  3585  00626E  0EF0               	movlw	-16
  3586  006270  16D5               	andwf	213,f,c	;volatile
  3587                           
  3588                           ;src/main.c: 458:    T0CON1bits.T0CS = 0b011;
  3589  006272  50D6               	movf	214,w,c	;volatile
  3590  006274  0B1F               	andlw	-225
  3591  006276  0960               	iorlw	96
  3592  006278  6ED6               	movwf	214,c	;volatile
  3593  00627A                     
  3594                           ;src/main.c: 459:    T0CON1bits.T0ASYNC = 0;
  3595  00627A  98D6               	bcf	214,4,c	;volatile
  3596                           
  3597                           ;src/main.c: 460:    T0CON1bits.T0CKPS = 0b0110;
  3598  00627C  50D6               	movf	214,w,c	;volatile
  3599  00627E  0BF0               	andlw	-16
  3600  006280  0906               	iorlw	6
  3601  006282  6ED6               	movwf	214,c	;volatile
  3602  006284                     
  3603                           ;src/main.c: 462:    T0CON0bits.T0EN = 1;
  3604  006284  8ED5               	bsf	213,7,c	;volatile
  3605  006286                     
  3606                           ;src/main.c: 464:    PIR0bits.INT0IF = 0;
  3607  006286  010E               	movlb	14	; () banked
  3608  006288  91CA               	bcf	202,0,b	;volatile
  3609  00628A                     
  3610                           ; BSR set to: 14
  3611                           ;src/main.c: 466:    PIE0bits.TMR0IE = 1;
  3612  00628A  8BC2               	bsf	194,5,b	;volatile
  3613  00628C                     
  3614                           ; BSR set to: 14
  3615  00628C  0012               	return		;funcret
  3616  00628E                     __end_of_timer0Setup:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _switchToLowFreqOsc *****************
  3620 ;; Defined at:
  3621 ;;		line 698 in file "src/main.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    2
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text3
  3650  006106                     __ptext3:
  3651                           	callstack 0
  3652  006106                     _switchToLowFreqOsc:
  3653                           	callstack 28
  3654  006106                     
  3655                           ;src/main.c: 701:    OSCCON1bits.NOSC = 0b101;
  3656  006106  010E               	movlb	14	; () banked
  3657  006108  51D8               	movf	216,w,b	;volatile
  3658  00610A  0B8F               	andlw	-113
  3659  00610C  0950               	iorlw	80
  3660  00610E  6FD8               	movwf	216,b	;volatile
  3661                           
  3662                           ;src/main.c: 702:    OSCCON1bits.NDIV = 0b0000;
  3663  006110  0EF0               	movlw	-16
  3664  006112  17D8               	andwf	216,f,b	;volatile
  3665  006114                     
  3666                           ; BSR set to: 14
  3667                           ;src/main.c: 704:    __nop();
  3668  006114  F000               	nop	
  3669  006116                     
  3670                           ;src/main.c: 705:    __nop();
  3671  006116  F000               	nop	
  3672  006118                     
  3673                           ;src/main.c: 706:    __nop();
  3674  006118  F000               	nop	
  3675  00611A                     
  3676                           ;src/main.c: 707:    __nop();
  3677  00611A  F000               	nop	
  3678  00611C                     
  3679                           ;src/main.c: 708:    __nop();
  3680  00611C  F000               	nop	
  3681  00611E                     
  3682                           ;src/main.c: 709:    __nop();
  3683  00611E  F000               	nop	
  3684  006120                     
  3685                           ;src/main.c: 710:    __nop();
  3686  006120  F000               	nop	
  3687  006122                     
  3688                           ;src/main.c: 711:    __nop();
  3689  006122  F000               	nop	
  3690  006124                     
  3691                           ;src/main.c: 712:    __nop();
  3692  006124  F000               	nop	
  3693  006126                     
  3694                           ;src/main.c: 713:    __nop();
  3695  006126  F000               	nop	
  3696  006128                     l565:
  3697                           
  3698                           ;src/main.c: 715:    while(OSCCON3bits.ORDY == 0)
  3699  006128  010E               	movlb	14	; () banked
  3700  00612A  A9DA               	btfss	218,4,b	;volatile
  3701  00612C  EF9A  F030         	goto	u1801
  3702  006130  EF9C  F030         	goto	u1800
  3703  006134                     u1801:
  3704  006134  EF94  F030         	goto	l565
  3705  006138                     u1800:
  3706  006138                     
  3707                           ; BSR set to: 14
  3708                           ;src/main.c: 719:    systemClockSpeed = 0;
  3709  006138  0E00               	movlw	0
  3710  00613A  0100               	movlb	0	; () banked
  3711  00613C  6FBB               	movwf	_systemClockSpeed& (0+255),b
  3712  00613E                     
  3713                           ; BSR set to: 0
  3714  00613E  0012               	return		;funcret
  3715  006140                     __end_of_switchToLowFreqOsc:
  3716                           	callstack 0
  3717                           
  3718 ;; *************** function _switchToHighFreqOsc *****************
  3719 ;; Defined at:
  3720 ;;		line 671 in file "src/main.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3738 ;;Total ram usage:        0 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    2
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_main
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text4
  3749  0060C8                     __ptext4:
  3750                           	callstack 0
  3751  0060C8                     _switchToHighFreqOsc:
  3752                           	callstack 28
  3753  0060C8                     
  3754                           ;src/main.c: 674:    OSCCON1bits.NOSC = 0b110;
  3755  0060C8  010E               	movlb	14	; () banked
  3756  0060CA  51D8               	movf	216,w,b	;volatile
  3757  0060CC  0B8F               	andlw	-113
  3758  0060CE  0960               	iorlw	96
  3759  0060D0  6FD8               	movwf	216,b	;volatile
  3760                           
  3761                           ;src/main.c: 675:    OSCFRQ = 0b00000101;
  3762  0060D2  0E05               	movlw	5
  3763  0060D4  6FDE               	movwf	222,b	;volatile
  3764                           
  3765                           ;src/main.c: 677:    OSCCON1bits.NDIV = 0b0000;
  3766  0060D6  0EF0               	movlw	-16
  3767  0060D8  17D8               	andwf	216,f,b	;volatile
  3768  0060DA                     
  3769                           ; BSR set to: 14
  3770                           ;src/main.c: 679:    __nop();
  3771  0060DA  F000               	nop	
  3772  0060DC                     
  3773                           ;src/main.c: 680:    __nop();
  3774  0060DC  F000               	nop	
  3775  0060DE                     
  3776                           ;src/main.c: 681:    __nop();
  3777  0060DE  F000               	nop	
  3778  0060E0                     
  3779                           ;src/main.c: 682:    __nop();
  3780  0060E0  F000               	nop	
  3781  0060E2                     
  3782                           ;src/main.c: 683:    __nop();
  3783  0060E2  F000               	nop	
  3784  0060E4                     
  3785                           ;src/main.c: 684:    __nop();
  3786  0060E4  F000               	nop	
  3787  0060E6                     
  3788                           ;src/main.c: 685:    __nop();
  3789  0060E6  F000               	nop	
  3790  0060E8                     
  3791                           ;src/main.c: 686:    __nop();
  3792  0060E8  F000               	nop	
  3793  0060EA                     
  3794                           ;src/main.c: 687:    __nop();
  3795  0060EA  F000               	nop	
  3796  0060EC                     
  3797                           ;src/main.c: 688:    __nop();
  3798  0060EC  F000               	nop	
  3799  0060EE                     l559:
  3800                           
  3801                           ;src/main.c: 690:    while(OSCCON3bits.ORDY == 0)
  3802  0060EE  010E               	movlb	14	; () banked
  3803  0060F0  A9DA               	btfss	218,4,b	;volatile
  3804  0060F2  EF7D  F030         	goto	u1781
  3805  0060F6  EF7F  F030         	goto	u1780
  3806  0060FA                     u1781:
  3807  0060FA  EF77  F030         	goto	l559
  3808  0060FE                     u1780:
  3809  0060FE                     
  3810                           ; BSR set to: 14
  3811                           ;src/main.c: 694:    systemClockSpeed = 1;
  3812  0060FE  0E01               	movlw	1
  3813  006100  0100               	movlb	0	; () banked
  3814  006102  6FBB               	movwf	_systemClockSpeed& (0+255),b
  3815  006104                     
  3816                           ; BSR set to: 0
  3817  006104  0012               	return		;funcret
  3818  006106                     __end_of_switchToHighFreqOsc:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _setupADS1120 *****************
  3822 ;; Defined at:
  3823 ;;		line 151 in file "src/blueWork.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;		None
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  d               2    6[COMRAM] unsigned int 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3841 ;;Total ram usage:        2 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    4
  3844 ;; This function calls:
  3845 ;;		_shootSoftSpiData8
  3846 ;; This function is called by:
  3847 ;;		_main
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text5
  3852  005FEC                     __ptext5:
  3853                           	callstack 0
  3854  005FEC                     _setupADS1120:
  3855                           	callstack 26
  3856  005FEC                     
  3857                           ;src/blueWork.c: 154:    unsigned int d;;src/blueWork.c: 156:    LATAbits.LATA2 = 0;
  3858  005FEC  9483               	bcf	131,2,c	;volatile
  3859                           
  3860                           ;src/blueWork.c: 157:    LATAbits.LATA4 = 0;
  3861  005FEE  9883               	bcf	131,4,c	;volatile
  3862  005FF0                     
  3863                           ;src/blueWork.c: 159:    shootSoftSpiData8(0b00000110);
  3864  005FF0  0E06               	movlw	6
  3865  005FF2  EC19  F02F         	call	_shootSoftSpiData8
  3866  005FF6                     
  3867                           ;src/blueWork.c: 161:    for (d = 0 ; d < 500 ; d++)
  3868  005FF6  0E00               	movlw	0
  3869  005FF8  6E48               	movwf	(setupADS1120@d+1)^0,c
  3870  005FFA  0E00               	movlw	0
  3871  005FFC  6E47               	movwf	setupADS1120@d^0,c
  3872  005FFE                     l2774:
  3873                           
  3874                           ;src/blueWork.c: 162:    {;src/blueWork.c: 163:    }
  3875  005FFE  4A47               	infsnz	setupADS1120@d^0,f,c
  3876  006000  2A48               	incf	(setupADS1120@d+1)^0,f,c
  3877  006002  0EF4               	movlw	244
  3878  006004  5C47               	subwf	setupADS1120@d^0,w,c
  3879  006006  0E01               	movlw	1
  3880  006008  5848               	subwfb	(setupADS1120@d+1)^0,w,c
  3881  00600A  A0D8               	btfss	status,0,c
  3882  00600C  EF0A  F030         	goto	u1611
  3883  006010  EF0C  F030         	goto	u1610
  3884  006014                     u1611:
  3885  006014  EFFF  F02F         	goto	l2774
  3886  006018                     u1610:
  3887  006018                     
  3888                           ;src/blueWork.c: 165:    shootSoftSpiData8(0b01000000 | 0b00000011);
  3889  006018  0E43               	movlw	67
  3890  00601A  EC19  F02F         	call	_shootSoftSpiData8
  3891                           
  3892                           ;src/blueWork.c: 166:    shootSoftSpiData8(0b00111010);
  3893  00601E  0E3A               	movlw	58
  3894  006020  EC19  F02F         	call	_shootSoftSpiData8
  3895                           
  3896                           ;src/blueWork.c: 167:    shootSoftSpiData8(0b00000000);
  3897  006024  0E00               	movlw	0
  3898  006026  EC19  F02F         	call	_shootSoftSpiData8
  3899                           
  3900                           ;src/blueWork.c: 168:    shootSoftSpiData8(0b10001000);
  3901  00602A  0E88               	movlw	136
  3902  00602C  EC19  F02F         	call	_shootSoftSpiData8
  3903                           
  3904                           ;src/blueWork.c: 169:    shootSoftSpiData8(0b00000000);
  3905  006030  0E00               	movlw	0
  3906  006032  EC19  F02F         	call	_shootSoftSpiData8
  3907  006036                     
  3908                           ;src/blueWork.c: 171:    LATAbits.LATA4 = 1;
  3909  006036  8883               	bsf	131,4,c	;volatile
  3910  006038  0012               	return		;funcret
  3911  00603A                     __end_of_setupADS1120:
  3912                           	callstack 0
  3913                           
  3914 ;; *************** function _readInCalibrationPoints *****************
  3915 ;; Defined at:
  3916 ;;		line 262 in file "src/blueWork.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  n               2    7[COMRAM] unsigned int 
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3934 ;;Total ram usage:        2 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    3
  3937 ;; This function calls:
  3938 ;;		_ReadEEByte
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text6
  3945  005E90                     __ptext6:
  3946                           	callstack 0
  3947  005E90                     _readInCalibrationPoints:
  3948                           	callstack 27
  3949  005E90                     
  3950                           ;src/blueWork.c: 264:    unsigned int n;;src/blueWork.c: 266:    for (n = 0 ; n < 8 ; n+
      +                          +)
  3951  005E90  0E00               	movlw	0
  3952  005E92  6E49               	movwf	(readInCalibrationPoints@n+1)^0,c
  3953  005E94  0E00               	movlw	0
  3954  005E96  6E48               	movwf	readInCalibrationPoints@n^0,c
  3955  005E98                     l2804:
  3956                           
  3957                           ;src/blueWork.c: 267:    {;src/blueWork.c: 268:       calibrationPointsLSB[n] = ReadEEBy
      +                          te(n);
  3958  005E98  0E98               	movlw	low _calibrationPointsLSB
  3959  005E9A  2448               	addwf	readInCalibrationPoints@n^0,w,c
  3960  005E9C  6ED9               	movwf	fsr2l,c
  3961  005E9E  0E00               	movlw	high _calibrationPointsLSB
  3962  005EA0  2049               	addwfc	(readInCalibrationPoints@n+1)^0,w,c
  3963  005EA2  6EDA               	movwf	fsr2h,c
  3964  005EA4  C048  F044         	movff	readInCalibrationPoints@n,ReadEEByte@address
  3965  005EA8  C049  F045         	movff	readInCalibrationPoints@n+1,ReadEEByte@address+1
  3966  005EAC  ECFD  F030         	call	_ReadEEByte	;wreg free
  3967  005EB0  6EDF               	movwf	indf2,c
  3968                           
  3969                           ;src/blueWork.c: 269:       calibrationPointsMSB[n] = ReadEEByte(n + 8);
  3970  005EB2  0E90               	movlw	low _calibrationPointsMSB
  3971  005EB4  2448               	addwf	readInCalibrationPoints@n^0,w,c
  3972  005EB6  6ED9               	movwf	fsr2l,c
  3973  005EB8  0E00               	movlw	high _calibrationPointsMSB
  3974  005EBA  2049               	addwfc	(readInCalibrationPoints@n+1)^0,w,c
  3975  005EBC  6EDA               	movwf	fsr2h,c
  3976  005EBE  0E08               	movlw	8
  3977  005EC0  2448               	addwf	readInCalibrationPoints@n^0,w,c
  3978  005EC2  6E44               	movwf	ReadEEByte@address^0,c
  3979  005EC4  0E00               	movlw	0
  3980  005EC6  2049               	addwfc	(readInCalibrationPoints@n+1)^0,w,c
  3981  005EC8  6E45               	movwf	(ReadEEByte@address+1)^0,c
  3982  005ECA  ECFD  F030         	call	_ReadEEByte	;wreg free
  3983  005ECE  6EDF               	movwf	indf2,c
  3984  005ED0                     
  3985                           ;src/blueWork.c: 270:    }
  3986  005ED0  4A48               	infsnz	readInCalibrationPoints@n^0,f,c
  3987  005ED2  2A49               	incf	(readInCalibrationPoints@n+1)^0,f,c
  3988  005ED4  5049               	movf	(readInCalibrationPoints@n+1)^0,w,c
  3989  005ED6  E109               	bnz	u1630
  3990  005ED8  0E08               	movlw	8
  3991  005EDA  5C48               	subwf	readInCalibrationPoints@n^0,w,c
  3992  005EDC  A0D8               	btfss	status,0,c
  3993  005EDE  EF73  F02F         	goto	u1631
  3994  005EE2  EF75  F02F         	goto	u1630
  3995  005EE6                     u1631:
  3996  005EE6  EF4C  F02F         	goto	l2804
  3997  005EEA                     u1630:
  3998  005EEA  0012               	return		;funcret
  3999  005EEC                     __end_of_readInCalibrationPoints:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function _ReadEEByte *****************
  4003 ;; Defined at:
  4004 ;;		line 218 in file "src/blueWork.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  address         2    3[COMRAM] unsigned short 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      unsigned char 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4022 ;;Total ram usage:        4 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    2
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_readInCalibrationPoints
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text7
  4033  0061FA                     __ptext7:
  4034                           	callstack 0
  4035  0061FA                     _ReadEEByte:
  4036                           	callstack 27
  4037  0061FA                     
  4038                           ;src/blueWork.c: 218: uint8 ReadEEByte(uint16 address);src/blueWork.c: 219: {;src/blueWo
      +                          rk.c: 221:    NVMCON1bits.NVMREG0 = 0;
  4039  0061FA  9C81               	bcf	129,6,c	;volsfr
  4040                           
  4041                           ;src/blueWork.c: 222:    NVMCON1bits.NVMREG1 = 0;
  4042  0061FC  9E81               	bcf	129,7,c	;volsfr
  4043                           
  4044                           ;src/blueWork.c: 224:    NVMADRL = (uint8)(address & 0x00FF);
  4045  0061FE  C044  FF7E         	movff	ReadEEByte@address,3966	;volatile
  4046  006202                     
  4047                           ;src/blueWork.c: 225:    NVMADRH = (uint8)((address >> 2) & 0x0003);
  4048  006202  C044  F046         	movff	ReadEEByte@address,??_ReadEEByte
  4049  006206  C045  F047         	movff	ReadEEByte@address+1,??_ReadEEByte+1
  4050  00620A  90D8               	bcf	status,0,c
  4051  00620C  3247               	rrcf	(??_ReadEEByte+1)^0,f,c
  4052  00620E  3246               	rrcf	??_ReadEEByte^0,f,c
  4053  006210  90D8               	bcf	status,0,c
  4054  006212  3247               	rrcf	(??_ReadEEByte+1)^0,f,c
  4055  006214  3246               	rrcf	??_ReadEEByte^0,f,c
  4056  006216  5046               	movf	??_ReadEEByte^0,w,c
  4057  006218  0B03               	andlw	3
  4058  00621A  6E7F               	movwf	127,c	;volatile
  4059  00621C                     
  4060                           ;src/blueWork.c: 227:    NVMCON1bits.RD = 1;
  4061  00621C  8081               	bsf	129,0,c	;volsfr
  4062  00621E                     
  4063                           ;src/blueWork.c: 229:    return NVMDAT;
  4064  00621E  5080               	movf	128,w,c	;volatile
  4065  006220  0012               	return		;funcret
  4066  006222                     __end_of_ReadEEByte:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _readAllADS1120configRegisters *****************
  4070 ;; Defined at:
  4071 ;;		line 175 in file "src/blueWork.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  d               2    6[COMRAM] unsigned int 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4089 ;;Total ram usage:        2 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    4
  4092 ;; This function calls:
  4093 ;;		_readSoftSpiData8
  4094 ;;		_shootSoftSpiData8
  4095 ;; This function is called by:
  4096 ;;		_main
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text8
  4101  005F9C                     __ptext8:
  4102                           	callstack 0
  4103  005F9C                     _readAllADS1120configRegisters:
  4104                           	callstack 26
  4105  005F9C                     
  4106                           ;src/blueWork.c: 177:    unsigned int d;;src/blueWork.c: 180:    LATAbits.LATA2 = 0;
  4107  005F9C  9483               	bcf	131,2,c	;volatile
  4108                           
  4109                           ;src/blueWork.c: 181:    LATAbits.LATA4 = 0;
  4110  005F9E  9883               	bcf	131,4,c	;volatile
  4111  005FA0                     
  4112                           ;src/blueWork.c: 183:    for (d = 0 ; d < 500 ; d++)
  4113  005FA0  0E00               	movlw	0
  4114  005FA2  6E48               	movwf	(readAllADS1120configRegisters@d+1)^0,c
  4115  005FA4  0E00               	movlw	0
  4116  005FA6  6E47               	movwf	readAllADS1120configRegisters@d^0,c
  4117  005FA8                     l2790:
  4118                           
  4119                           ;src/blueWork.c: 184:    {;src/blueWork.c: 185:    }
  4120  005FA8  4A47               	infsnz	readAllADS1120configRegisters@d^0,f,c
  4121  005FAA  2A48               	incf	(readAllADS1120configRegisters@d+1)^0,f,c
  4122  005FAC  0EF4               	movlw	244
  4123  005FAE  5C47               	subwf	readAllADS1120configRegisters@d^0,w,c
  4124  005FB0  0E01               	movlw	1
  4125  005FB2  5848               	subwfb	(readAllADS1120configRegisters@d+1)^0,w,c
  4126  005FB4  A0D8               	btfss	status,0,c
  4127  005FB6  EFDF  F02F         	goto	u1621
  4128  005FBA  EFE1  F02F         	goto	u1620
  4129  005FBE                     u1621:
  4130  005FBE  EFD4  F02F         	goto	l2790
  4131  005FC2                     u1620:
  4132  005FC2                     
  4133                           ;src/blueWork.c: 187:    shootSoftSpiData8(0b00100000 | 0b00000011);
  4134  005FC2  0E23               	movlw	35
  4135  005FC4  EC19  F02F         	call	_shootSoftSpiData8
  4136                           
  4137                           ;src/blueWork.c: 189:    ads1120Config0 = readSoftSpiData8();
  4138  005FC8  ECA3  F02F         	call	_readSoftSpiData8	;wreg free
  4139  005FCC  0100               	movlb	0	; () banked
  4140  005FCE  6FCB               	movwf	_ads1120Config0& (0+255),b
  4141                           
  4142                           ;src/blueWork.c: 190:    ads1120Config1 = readSoftSpiData8();
  4143  005FD0  ECA3  F02F         	call	_readSoftSpiData8	;wreg free
  4144  005FD4  0100               	movlb	0	; () banked
  4145  005FD6  6FCA               	movwf	_ads1120Config1& (0+255),b
  4146                           
  4147                           ;src/blueWork.c: 191:    ads1120Config2 = readSoftSpiData8();
  4148  005FD8  ECA3  F02F         	call	_readSoftSpiData8	;wreg free
  4149  005FDC  0100               	movlb	0	; () banked
  4150  005FDE  6FC9               	movwf	_ads1120Config2& (0+255),b
  4151                           
  4152                           ;src/blueWork.c: 192:    ads1120Config3 = readSoftSpiData8();
  4153  005FE0  ECA3  F02F         	call	_readSoftSpiData8	;wreg free
  4154  005FE4  0100               	movlb	0	; () banked
  4155  005FE6  6FC8               	movwf	_ads1120Config3& (0+255),b
  4156  005FE8                     
  4157                           ; BSR set to: 0
  4158                           ;src/blueWork.c: 194:    LATAbits.LATA4 = 1;
  4159  005FE8  8883               	bsf	131,4,c	;volatile
  4160  005FEA                     
  4161                           ; BSR set to: 0
  4162  005FEA  0012               	return		;funcret
  4163  005FEC                     __end_of_readAllADS1120configRegisters:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _mcuRtsLow *****************
  4167 ;; Defined at:
  4168 ;;		line 286 in file "src/blueWork.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		None
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    2
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_main
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text9
  4197  00638C                     __ptext9:
  4198                           	callstack 0
  4199  00638C                     _mcuRtsLow:
  4200                           	callstack 28
  4201  00638C                     
  4202                           ;src/blueWork.c: 288:    LATCbits.LATC4 = 0;
  4203  00638C  9885               	bcf	133,4,c	;volatile
  4204  00638E  0012               	return		;funcret
  4205  006390                     __end_of_mcuRtsLow:
  4206                           	callstack 0
  4207                           
  4208 ;; *************** function _mcuRtsHigh *****************
  4209 ;; Defined at:
  4210 ;;		line 281 in file "src/blueWork.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		None
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4228 ;;Total ram usage:        0 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    2
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_main
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text10
  4239  006390                     __ptext10:
  4240                           	callstack 0
  4241  006390                     _mcuRtsHigh:
  4242                           	callstack 28
  4243  006390                     
  4244                           ;src/blueWork.c: 283:    LATCbits.LATC4 = 1;
  4245  006390  8885               	bsf	133,4,c	;volatile
  4246  006392  0012               	return		;funcret
  4247  006394                     __end_of_mcuRtsHigh:
  4248                           	callstack 0
  4249                           
  4250 ;; *************** function _initialiseVoltageReference *****************
  4251 ;; Defined at:
  4252 ;;		line 811 in file "src/main.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    2
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text11
  4281  006248                     __ptext11:
  4282                           	callstack 0
  4283  006248                     _initialiseVoltageReference:
  4284                           	callstack 28
  4285  006248                     
  4286                           ;src/main.c: 817:    FVRCONbits.FVREN = 1;
  4287  006248  010F               	movlb	15	; () banked
  4288  00624A  8F31               	bsf	49,7,b	;volatile
  4289                           
  4290                           ;src/main.c: 824:    FVRCONbits.TSEN = 0;
  4291  00624C  9B31               	bcf	49,5,b	;volatile
  4292                           
  4293                           ;src/main.c: 831:    FVRCONbits.TSRNG = 0;
  4294  00624E  9931               	bcf	49,4,b	;volatile
  4295  006250                     
  4296                           ; BSR set to: 15
  4297                           ;src/main.c: 839:    FVRCONbits.CDAFVR = 0b01;
  4298  006250  5131               	movf	49,w,b	;volatile
  4299  006252  0BF3               	andlw	-13
  4300  006254  0904               	iorlw	4
  4301  006256  6F31               	movwf	49,b	;volatile
  4302                           
  4303                           ;src/main.c: 847:    FVRCONbits.ADFVR = 0b00;
  4304  006258  0EFC               	movlw	-4
  4305  00625A  1731               	andwf	49,f,b	;volatile
  4306  00625C                     l580:
  4307                           
  4308                           ; BSR set to: 15
  4309                           ;src/main.c: 850:    while (FVRCONbits.FVRRDY == 0)
  4310  00625C  AD31               	btfss	49,6,b	;volatile
  4311  00625E  EF33  F031         	goto	u1791
  4312  006262  EF35  F031         	goto	u1790
  4313  006266                     u1791:
  4314  006266  EF2E  F031         	goto	l580
  4315  00626A                     u1790:
  4316  00626A                     
  4317                           ; BSR set to: 15
  4318  00626A  0012               	return		;funcret
  4319  00626C                     __end_of_initialiseVoltageReference:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function _initialiseLeds *****************
  4323 ;; Defined at:
  4324 ;;		line 723 in file "src/main.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    3
  4345 ;; This function calls:
  4346 ;;		_ledColour
  4347 ;; This function is called by:
  4348 ;;		_main
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text12
  4353  00635C                     __ptext12:
  4354                           	callstack 0
  4355  00635C                     _initialiseLeds:
  4356                           	callstack 27
  4357  00635C                     
  4358                           ;src/main.c: 726:    LATCbits.LATC0 = 0;
  4359  00635C  9085               	bcf	133,0,c	;volatile
  4360                           
  4361                           ;src/main.c: 727:    TRISCbits.TRISC0 = 0;
  4362  00635E  908A               	bcf	138,0,c	;volatile
  4363                           
  4364                           ;src/main.c: 729:    TRISBbits.TRISB1 = 0;
  4365  006360  9289               	bcf	137,1,c	;volatile
  4366                           
  4367                           ;src/main.c: 730:    TRISBbits.TRISB2 = 0;
  4368  006362  9489               	bcf	137,2,c	;volatile
  4369                           
  4370                           ;src/main.c: 731:    TRISBbits.TRISB3 = 0;
  4371  006364  9689               	bcf	137,3,c	;volatile
  4372  006366                     
  4373                           ;src/main.c: 733:    ledColour(0b00000000);
  4374  006366  0E00               	movlw	0
  4375  006368  EC41  F030         	call	_ledColour
  4376  00636C  0012               	return		;funcret
  4377  00636E                     __end_of_initialiseLeds:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _initialiseIoBitsAndPieces *****************
  4381 ;; Defined at:
  4382 ;;		line 857 in file "src/main.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    2
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text13
  4411  00637E                     __ptext13:
  4412                           	callstack 0
  4413  00637E                     _initialiseIoBitsAndPieces:
  4414                           	callstack 28
  4415  00637E                     
  4416                           ;src/main.c: 860:    TRISBbits.TRISB4 = 1;
  4417  00637E  8889               	bsf	137,4,c	;volatile
  4418                           
  4419                           ;src/main.c: 863:    TRISDbits.TRISD5 = 1;
  4420  006380  8A8B               	bsf	139,5,c	;volatile
  4421                           
  4422                           ;src/main.c: 865:    TRISDbits.TRISD0 = 1;
  4423  006382  808B               	bsf	139,0,c	;volatile
  4424  006384                     
  4425                           ;src/main.c: 867:    WPUD = 0b00100001;
  4426  006384  0E21               	movlw	33
  4427  006386  010F               	movlb	15	; () banked
  4428  006388  6F25               	movwf	37,b	;volatile
  4429  00638A                     
  4430                           ; BSR set to: 15
  4431  00638A  0012               	return		;funcret
  4432  00638C                     __end_of_initialiseIoBitsAndPieces:
  4433                           	callstack 0
  4434                           
  4435 ;; *************** function _initialiseDac *****************
  4436 ;; Defined at:
  4437 ;;		line 781 in file "src/main.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;		None
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4455 ;;Total ram usage:        0 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    2
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_main
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text14
  4466  006300                     __ptext14:
  4467                           	callstack 0
  4468  006300                     _initialiseDac:
  4469                           	callstack 28
  4470  006300                     
  4471                           ;src/main.c: 786:    DAC1CON0bits.OE1 = 0;
  4472  006300  010F               	movlb	15	; () banked
  4473  006302  9B33               	bcf	51,5,b	;volatile
  4474                           
  4475                           ;src/main.c: 790:    DAC1CON0bits.OE2 = 0;
  4476  006304  9933               	bcf	51,4,b	;volatile
  4477  006306                     
  4478                           ; BSR set to: 15
  4479                           ;src/main.c: 795:    DAC1CON0bits.PSS = 0b10;
  4480  006306  5133               	movf	51,w,b	;volatile
  4481  006308  0BF3               	andlw	-13
  4482  00630A  0908               	iorlw	8
  4483  00630C  6F33               	movwf	51,b	;volatile
  4484  00630E                     
  4485                           ; BSR set to: 15
  4486                           ;src/main.c: 799:    DAC1CON0bits.NSS = 0;
  4487  00630E  9133               	bcf	51,0,b	;volatile
  4488                           
  4489                           ;src/main.c: 803:    DAC1CON1 = 31;
  4490  006310  0E1F               	movlw	31
  4491  006312  6F34               	movwf	52,b	;volatile
  4492  006314                     
  4493                           ; BSR set to: 15
  4494                           ;src/main.c: 807:    DAC1CON0bits.EN = 1;
  4495  006314  8F33               	bsf	51,7,b	;volatile
  4496  006316                     
  4497                           ; BSR set to: 15
  4498  006316  0012               	return		;funcret
  4499  006318                     __end_of_initialiseDac:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function _initialiseBlueToothIo *****************
  4503 ;; Defined at:
  4504 ;;		line 897 in file "src/main.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    2
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_main
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text15
  4533  0062CC                     __ptext15:
  4534                           	callstack 0
  4535  0062CC                     _initialiseBlueToothIo:
  4536                           	callstack 28
  4537  0062CC                     
  4538                           ;src/main.c: 900:    TRISCbits.TRISC6 = 0;
  4539  0062CC  9C8A               	bcf	138,6,c	;volatile
  4540  0062CE                     
  4541                           ;src/main.c: 901:    RC6PPS = 0x09;
  4542  0062CE  0E09               	movlw	9
  4543  0062D0  010E               	movlb	14	; () banked
  4544  0062D2  6FFD               	movwf	253,b	;volatile
  4545  0062D4                     
  4546                           ; BSR set to: 14
  4547                           ;src/main.c: 903:    TRISCbits.TRISC7 = 1;
  4548  0062D4  8E8A               	bsf	138,7,c	;volatile
  4549                           
  4550                           ;src/main.c: 904:    RX1PPS = 0x17;
  4551  0062D6  0E17               	movlw	23
  4552  0062D8  6FB5               	movwf	181,b	;volatile
  4553  0062DA                     
  4554                           ; BSR set to: 14
  4555                           ;src/main.c: 906:    TRISCbits.TRISC5 = 1;
  4556  0062DA  8A8A               	bsf	138,5,c	;volatile
  4557  0062DC                     
  4558                           ; BSR set to: 14
  4559                           ;src/main.c: 908:    LATCbits.LATC4 = 0;
  4560  0062DC  9885               	bcf	133,4,c	;volatile
  4561  0062DE                     
  4562                           ; BSR set to: 14
  4563                           ;src/main.c: 909:    TRISCbits.TRISC4 = 0;
  4564  0062DE  988A               	bcf	138,4,c	;volatile
  4565  0062E0                     
  4566                           ; BSR set to: 14
  4567                           ;src/main.c: 911:    LATDbits.LATD2 = 0;
  4568  0062E0  9486               	bcf	134,2,c	;volatile
  4569  0062E2                     
  4570                           ; BSR set to: 14
  4571                           ;src/main.c: 912:    TRISDbits.TRISD2 = 0;
  4572  0062E2  948B               	bcf	139,2,c	;volatile
  4573  0062E4                     
  4574                           ; BSR set to: 14
  4575  0062E4  0012               	return		;funcret
  4576  0062E6                     __end_of_initialiseBlueToothIo:
  4577                           	callstack 0
  4578                           
  4579 ;; *************** function _initialiseBitBashSpi *****************
  4580 ;; Defined at:
  4581 ;;		line 871 in file "src/main.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;		None
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4599 ;;Total ram usage:        0 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    2
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_main
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text16
  4610  006318                     __ptext16:
  4611                           	callstack 0
  4612  006318                     _initialiseBitBashSpi:
  4613                           	callstack 28
  4614  006318                     
  4615                           ;src/main.c: 877:    LATAbits.LATA4 = 1;
  4616  006318  8883               	bsf	131,4,c	;volatile
  4617                           
  4618                           ;src/main.c: 878:    TRISAbits.TRISA4 = 0;
  4619  00631A  9888               	bcf	136,4,c	;volatile
  4620                           
  4621                           ;src/main.c: 881:    LATAbits.LATA3 = 0;
  4622  00631C  9683               	bcf	131,3,c	;volatile
  4623                           
  4624                           ;src/main.c: 882:    TRISAbits.TRISA3 = 0;
  4625  00631E  9688               	bcf	136,3,c	;volatile
  4626                           
  4627                           ;src/main.c: 885:    TRISAbits.TRISA1 = 1;
  4628  006320  8288               	bsf	136,1,c	;volatile
  4629                           
  4630                           ;src/main.c: 888:    LATAbits.LATA2 = 0;
  4631  006322  9483               	bcf	131,2,c	;volatile
  4632                           
  4633                           ;src/main.c: 889:    TRISAbits.TRISA2 = 0;
  4634  006324  9488               	bcf	136,2,c	;volatile
  4635  006326                     
  4636                           ;src/main.c: 892:    WPUA = 0b00100000;
  4637  006326  0E20               	movlw	32
  4638  006328  010F               	movlb	15	; () banked
  4639  00632A  6F10               	movwf	16,b	;volatile
  4640  00632C                     
  4641                           ; BSR set to: 15
  4642                           ;src/main.c: 893:    TRISAbits.TRISA5 = 1;
  4643  00632C  8A88               	bsf	136,5,c	;volatile
  4644  00632E                     
  4645                           ; BSR set to: 15
  4646  00632E  0012               	return		;funcret
  4647  006330                     __end_of_initialiseBitBashSpi:
  4648                           	callstack 0
  4649                           
  4650 ;; *************** function _initialiseAdc *****************
  4651 ;; Defined at:
  4652 ;;		line 737 in file "src/main.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4670 ;;Total ram usage:        0 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; Hardware stack levels required when called:    2
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_main
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text17
  4681  0061A4                     __ptext17:
  4682                           	callstack 0
  4683  0061A4                     _initialiseAdc:
  4684                           	callstack 28
  4685  0061A4                     
  4686                           ;src/main.c: 740:    ANSELA = 0;
  4687  0061A4  0E00               	movlw	0
  4688  0061A6  010F               	movlb	15	; () banked
  4689  0061A8  6F11               	movwf	17,b	;volatile
  4690                           
  4691                           ;src/main.c: 742:    ANSELB = 0;
  4692  0061AA  0E00               	movlw	0
  4693  0061AC  6F19               	movwf	25,b	;volatile
  4694                           
  4695                           ;src/main.c: 743:    ANSELC = 0;
  4696  0061AE  0E00               	movlw	0
  4697  0061B0  6F21               	movwf	33,b	;volatile
  4698                           
  4699                           ;src/main.c: 744:    ANSELD = 0;
  4700  0061B2  0E00               	movlw	0
  4701  0061B4  6F26               	movwf	38,b	;volatile
  4702  0061B6                     
  4703                           ; BSR set to: 15
  4704                           ;src/main.c: 751:    ADCON0bits.ADCS = 0;
  4705  0061B6  9860               	bcf	96,4,c	;volatile
  4706                           
  4707                           ;src/main.c: 752:    ADCLK = 0b00111111;
  4708  0061B8  0E3F               	movlw	63
  4709  0061BA  6F57               	movwf	87,b	;volatile
  4710  0061BC                     
  4711                           ; BSR set to: 15
  4712                           ;src/main.c: 756:    ADREFbits.ADNREF = 0;
  4713  0061BC  9958               	bcf	88,4,b	;volatile
  4714                           
  4715                           ;src/main.c: 760:    ADREFbits.ADPREF = 0b00;
  4716  0061BE  0EFC               	movlw	-4
  4717  0061C0  1758               	andwf	88,f,b	;volatile
  4718                           
  4719                           ;src/main.c: 766:    ADPCH = 0b111110;
  4720  0061C2  0E3E               	movlw	62
  4721  0061C4  6F5F               	movwf	95,b	;volatile
  4722  0061C6                     
  4723                           ; BSR set to: 15
  4724                           ;src/main.c: 769:    ADCON0bits.ADFM = 1;
  4725  0061C6  8460               	bsf	96,2,c	;volatile
  4726                           
  4727                           ;src/main.c: 773:    ADACQ = 0;
  4728  0061C8  0E00               	movlw	0
  4729  0061CA  6F5C               	movwf	92,b	;volatile
  4730  0061CC                     
  4731                           ; BSR set to: 15
  4732                           ;src/main.c: 777:    ADCON0bits.ADON = 1;
  4733  0061CC  8E60               	bsf	96,7,c	;volatile
  4734  0061CE                     
  4735                           ; BSR set to: 15
  4736  0061CE  0012               	return		;funcret
  4737  0061D0                     __end_of_initialiseAdc:
  4738                           	callstack 0
  4739                           
  4740 ;; *************** function _ifDcPlugInserted *****************
  4741 ;; Defined at:
  4742 ;;		line 916 in file "src/main.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  n               1    3[COMRAM] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      unsigned char 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4760 ;;Total ram usage:        1 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:    2
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text18
  4771  005D06                     __ptext18:
  4772                           	callstack 0
  4773  005D06                     _ifDcPlugInserted:
  4774                           	callstack 28
  4775  005D06                     
  4776                           ;src/main.c: 918:    unsigned char n;;src/main.c: 921:    LATAbits.LATA6 = 1;
  4777  005D06  8C83               	bsf	131,6,c	;volatile
  4778                           
  4779                           ;src/main.c: 922:    TRISAbits.TRISA6 = 0;
  4780  005D08  9C88               	bcf	136,6,c	;volatile
  4781  005D0A                     
  4782                           ;src/main.c: 924:    if (systemClockSpeed == 0)
  4783  005D0A  0100               	movlb	0	; () banked
  4784  005D0C  51BB               	movf	_systemClockSpeed& (0+255),w,b
  4785  005D0E  A4D8               	btfss	status,2,c
  4786  005D10  EF8C  F02E         	goto	u1741
  4787  005D14  EF8E  F02E         	goto	u1740
  4788  005D18                     u1741:
  4789  005D18  EF9C  F02E         	goto	l3024
  4790  005D1C                     u1740:
  4791  005D1C                     
  4792                           ; BSR set to: 0
  4793                           ;src/main.c: 925:    {;src/main.c: 926:       for (n = 0 ; n < 10 ; n++)
  4794  005D1C  0E00               	movlw	0
  4795  005D1E  6E44               	movwf	ifDcPlugInserted@n^0,c
  4796  005D20                     l596:
  4797                           
  4798                           ;src/main.c: 927:          __nop();
  4799  005D20  F000               	nop	
  4800  005D22  2A44               	incf	ifDcPlugInserted@n^0,f,c
  4801  005D24  0E09               	movlw	9
  4802  005D26  6444               	cpfsgt	ifDcPlugInserted@n^0,c
  4803  005D28  EF98  F02E         	goto	u1751
  4804  005D2C  EF9A  F02E         	goto	u1750
  4805  005D30                     u1751:
  4806  005D30  EF90  F02E         	goto	l596
  4807  005D34                     u1750:
  4808  005D34  EFA8  F02E         	goto	l598
  4809  005D38                     l3024:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;src/main.c: 930:    {;src/main.c: 931:       for (n = 0 ; n < 200 ; n++)
  4813  005D38  0E00               	movlw	0
  4814  005D3A  6E44               	movwf	ifDcPlugInserted@n^0,c
  4815  005D3C                     l599:
  4816                           
  4817                           ;src/main.c: 932:          __nop();
  4818  005D3C  F000               	nop	
  4819  005D3E  2A44               	incf	ifDcPlugInserted@n^0,f,c
  4820  005D40  0EC7               	movlw	199
  4821  005D42  6444               	cpfsgt	ifDcPlugInserted@n^0,c
  4822  005D44  EFA6  F02E         	goto	u1761
  4823  005D48  EFA8  F02E         	goto	u1760
  4824  005D4C                     u1761:
  4825  005D4C  EF9E  F02E         	goto	l599
  4826  005D50                     u1760:
  4827  005D50                     l598:
  4828                           
  4829                           ;src/main.c: 935:    if ((PORTB & 0b00010000) == 0b00010000)
  4830  005D50  A88E               	btfss	142,4,c	;volatile
  4831  005D52  EFAD  F02E         	goto	u1771
  4832  005D56  EFAF  F02E         	goto	u1770
  4833  005D5A                     u1771:
  4834  005D5A  EFB3  F02E         	goto	l601
  4835  005D5E                     u1770:
  4836  005D5E                     
  4837                           ;src/main.c: 936:    {;src/main.c: 937:       TRISAbits.TRISA6 = 1;
  4838  005D5E  8C88               	bsf	136,6,c	;volatile
  4839  005D60                     
  4840                           ;src/main.c: 938:       return 1;
  4841  005D60  0E01               	movlw	1
  4842  005D62  EFB5  F02E         	goto	l602
  4843  005D66                     l601:
  4844                           
  4845                           ;src/main.c: 941:    {;src/main.c: 942:       TRISAbits.TRISA6 = 1;
  4846  005D66  8C88               	bsf	136,6,c	;volatile
  4847  005D68                     
  4848                           ;src/main.c: 943:       return 0;
  4849  005D68  0E00               	movlw	0
  4850  005D6A                     l602:
  4851  005D6A  0012               	return		;funcret
  4852  005D6C                     __end_of_ifDcPlugInserted:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _analyseBleRxIn *****************
  4856 ;; Defined at:
  4857 ;;		line 948 in file "src/main.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  data            1   19[COMRAM] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4875 ;;Total ram usage:        1 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    6
  4878 ;; This function calls:
  4879 ;;		_XReceiveBTMessage
  4880 ;; This function is called by:
  4881 ;;		_main
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text19
  4886  005D6C                     __ptext19:
  4887                           	callstack 0
  4888  005D6C                     _analyseBleRxIn:
  4889                           	callstack 24
  4890  005D6C                     
  4891                           ;src/main.c: 950:    uint8 data;;src/main.c: 952:    if (bleRxIntoBuffer != bleRxOutOfBu
      +                          ffer)
  4892  005D6C  0100               	movlb	0	; () banked
  4893  005D6E  51AC               	movf	_bleRxOutOfBuffer& (0+255),w,b	;volatile
  4894  005D70  19AE               	xorwf	_bleRxIntoBuffer& (0+255),w,b	;volatile
  4895  005D72  E109               	bnz	u1810
  4896  005D74  51AD               	movf	(_bleRxOutOfBuffer+1)& (0+255),w,b	;volatile
  4897  005D76  19AF               	xorwf	(_bleRxIntoBuffer+1)& (0+255),w,b	;volatile
  4898  005D78  B4D8               	btfsc	status,2,c
  4899  005D7A  EFC1  F02E         	goto	u1811
  4900  005D7E  EFC3  F02E         	goto	u1810
  4901  005D82                     u1811:
  4902  005D82  EFE7  F02E         	goto	l608
  4903  005D86                     u1810:
  4904  005D86                     
  4905                           ; BSR set to: 0
  4906                           ;src/main.c: 953:    {;src/main.c: 955:       PIE0bits.TMR0IE = 0;
  4907  005D86  010E               	movlb	14	; () banked
  4908  005D88  9BC2               	bcf	194,5,b	;volatile
  4909  005D8A                     
  4910                           ; BSR set to: 14
  4911                           ;src/main.c: 956:       data = bleRxBuffer[bleRxOutOfBuffer];
  4912  005D8A  0E00               	movlw	low _bleRxBuffer
  4913  005D8C  0100               	movlb	0	; () banked
  4914  005D8E  25AC               	addwf	_bleRxOutOfBuffer& (0+255),w,b	;volatile
  4915  005D90  6ED9               	movwf	fsr2l,c
  4916  005D92  0E02               	movlw	high _bleRxBuffer
  4917  005D94  21AD               	addwfc	(_bleRxOutOfBuffer+1)& (0+255),w,b	;volatile
  4918  005D96  6EDA               	movwf	fsr2h,c
  4919  005D98  50DF               	movf	indf2,w,c
  4920  005D9A  6E54               	movwf	analyseBleRxIn@data^0,c
  4921  005D9C                     
  4922                           ; BSR set to: 0
  4923                           ;src/main.c: 957:       if (++bleRxOutOfBuffer >= 256)
  4924  005D9C  4BAC               	infsnz	_bleRxOutOfBuffer& (0+255),f,b	;volatile
  4925  005D9E  2BAD               	incf	(_bleRxOutOfBuffer+1)& (0+255),f,b	;volatile
  4926  005DA0  0E00               	movlw	0
  4927  005DA2  5DAC               	subwf	_bleRxOutOfBuffer& (0+255),w,b	;volatile
  4928  005DA4  0E01               	movlw	1
  4929  005DA6  59AD               	subwfb	(_bleRxOutOfBuffer+1)& (0+255),w,b	;volatile
  4930  005DA8  A0D8               	btfss	status,0,c
  4931  005DAA  EFD9  F02E         	goto	u1821
  4932  005DAE  EFDB  F02E         	goto	u1820
  4933  005DB2                     u1821:
  4934  005DB2  EFDF  F02E         	goto	l3156
  4935  005DB6                     u1820:
  4936  005DB6                     
  4937                           ; BSR set to: 0
  4938                           ;src/main.c: 958:          bleRxOutOfBuffer = 0;
  4939  005DB6  0E00               	movlw	0
  4940  005DB8  6FAD               	movwf	(_bleRxOutOfBuffer+1)& (0+255),b	;volatile
  4941  005DBA  0E00               	movlw	0
  4942  005DBC  6FAC               	movwf	_bleRxOutOfBuffer& (0+255),b	;volatile
  4943  005DBE                     l3156:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;src/main.c: 959:       --bleBufferDepthCount;
  4947  005DBE  07A6               	decf	_bleBufferDepthCount& (0+255),f,b	;volatile
  4948  005DC0  A0D8               	btfss	status,0,c
  4949  005DC2  07A7               	decf	(_bleBufferDepthCount+1)& (0+255),f,b	;volatile
  4950  005DC4                     
  4951                           ; BSR set to: 0
  4952                           ;src/main.c: 960:       PIE0bits.TMR0IE = 1;
  4953  005DC4  010E               	movlb	14	; () banked
  4954  005DC6  8BC2               	bsf	194,5,b	;volatile
  4955  005DC8                     
  4956                           ; BSR set to: 14
  4957                           ;src/main.c: 962:       XReceiveBTMessage(data);
  4958  005DC8  5054               	movf	analyseBleRxIn@data^0,w,c
  4959  005DCA  ECD3  F02C         	call	_XReceiveBTMessage
  4960  005DCE                     l608:
  4961  005DCE  0012               	return		;funcret
  4962  005DD0                     __end_of_analyseBleRxIn:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function _XReceiveBTMessage *****************
  4966 ;; Defined at:
  4967 ;;		line 481 in file "src/blueWork.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  BTdata          1    wreg     unsigned char 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  BTdata          1   18[COMRAM] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  1    wreg      void 
  4974 ;; Registers used:
  4975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;Total ram usage:        3 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    5
  4988 ;; This function calls:
  4989 ;;		_messageMatch
  4990 ;; This function is called by:
  4991 ;;		_analyseBleRxIn
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text20
  4996  0059A6                     __ptext20:
  4997                           	callstack 0
  4998  0059A6                     _XReceiveBTMessage:
  4999                           	callstack 24
  5000                           
  5001                           ;incstack = 0
  5002                           ;XReceiveBTMessage@BTdata stored from wreg
  5003  0059A6  6E53               	movwf	XReceiveBTMessage@BTdata^0,c
  5004  0059A8                     
  5005                           ;src/blueWork.c: 481: void XReceiveBTMessage (uint8 BTdata);src/blueWork.c: 482: {;src/b
      +                          lueWork.c: 483:     static uint16 byteCount = 0;;src/blueWork.c: 484:     static struct 
      +                          ble_header BTHeader;;src/blueWork.c: 485:     static uint16 pLength;;src/blueWork.c: 486
      +                          :     static uint8 receivedMessage;;src/blueWork.c: 491:    if (bleJustReset == 1)
  5006  0059A8  0100               	movlb	0	; () banked
  5007  0059AA  05E4               	decf	_bleJustReset& (0+255),w,b
  5008  0059AC  A4D8               	btfss	status,2,c
  5009  0059AE  EFDB  F02C         	goto	u1501
  5010  0059B2  EFDD  F02C         	goto	u1500
  5011  0059B6                     u1501:
  5012  0059B6  EFE8  F02C         	goto	l2688
  5013  0059BA                     u1500:
  5014  0059BA                     
  5015                           ; BSR set to: 0
  5016                           ;src/blueWork.c: 492:    {;src/blueWork.c: 493:       if (BTdata == 0x80)
  5017  0059BA  0E80               	movlw	128
  5018  0059BC  1853               	xorwf	XReceiveBTMessage@BTdata^0,w,c
  5019  0059BE  A4D8               	btfss	status,2,c
  5020  0059C0  EFE4  F02C         	goto	u1511
  5021  0059C4  EFE6  F02C         	goto	u1510
  5022  0059C8                     u1511:
  5023  0059C8  EF80  F02D         	goto	l203
  5024  0059CC                     u1510:
  5025  0059CC                     
  5026                           ; BSR set to: 0
  5027                           ;src/blueWork.c: 494:          bleJustReset = 0;
  5028  0059CC  0E00               	movlw	0
  5029  0059CE  6FE4               	movwf	_bleJustReset& (0+255),b
  5030  0059D0                     l2688:
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;src/blueWork.c: 499:    if (byteCount == 0)
  5034  0059D0  5055               	movf	XReceiveBTMessage@byteCount^0,w,c
  5035  0059D2  1056               	iorwf	(XReceiveBTMessage@byteCount+1)^0,w,c
  5036  0059D4  A4D8               	btfss	status,2,c
  5037  0059D6  EFEF  F02C         	goto	u1521
  5038  0059DA  EFF1  F02C         	goto	u1520
  5039  0059DE                     u1521:
  5040  0059DE  EFF7  F02C         	goto	l2696
  5041  0059E2                     u1520:
  5042  0059E2                     
  5043                           ; BSR set to: 0
  5044                           ;src/blueWork.c: 500:    {;src/blueWork.c: 501:       BTHeader.type_hilen = BTdata;
  5045  0059E2  C053  F0A0         	movff	XReceiveBTMessage@BTdata,XReceiveBTMessage@BTHeader
  5046  0059E6                     l2692:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;src/blueWork.c: 502:       ++byteCount;
  5050  0059E6  4A55               	infsnz	XReceiveBTMessage@byteCount^0,f,c
  5051  0059E8  2A56               	incf	(XReceiveBTMessage@byteCount+1)^0,f,c
  5052  0059EA  EF80  F02D         	goto	l203
  5053  0059EE                     l2696:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;src/blueWork.c: 506:    if (byteCount == 1)
  5057  0059EE  0455               	decf	XReceiveBTMessage@byteCount^0,w,c
  5058  0059F0  1056               	iorwf	(XReceiveBTMessage@byteCount+1)^0,w,c
  5059  0059F2  A4D8               	btfss	status,2,c
  5060  0059F4  EFFE  F02C         	goto	u1531
  5061  0059F8  EF00  F02D         	goto	u1530
  5062  0059FC                     u1531:
  5063  0059FC  EF04  F02D         	goto	l2704
  5064  005A00                     u1530:
  5065  005A00                     
  5066                           ; BSR set to: 0
  5067                           ;src/blueWork.c: 507:    {;src/blueWork.c: 508:       BTHeader.lolen = BTdata;
  5068  005A00  C053  F0A1         	movff	XReceiveBTMessage@BTdata,XReceiveBTMessage@BTHeader+1
  5069  005A04  EFF3  F02C         	goto	l2692
  5070  005A08                     l2704:
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;src/blueWork.c: 513:    if (byteCount == 2)
  5074  005A08  0E02               	movlw	2
  5075  005A0A  1855               	xorwf	XReceiveBTMessage@byteCount^0,w,c
  5076  005A0C  1056               	iorwf	(XReceiveBTMessage@byteCount+1)^0,w,c
  5077  005A0E  A4D8               	btfss	status,2,c
  5078  005A10  EF0C  F02D         	goto	u1541
  5079  005A14  EF0E  F02D         	goto	u1540
  5080  005A18                     u1541:
  5081  005A18  EF12  F02D         	goto	l2712
  5082  005A1C                     u1540:
  5083  005A1C                     
  5084                           ; BSR set to: 0
  5085                           ;src/blueWork.c: 514:    {;src/blueWork.c: 515:       BTHeader.cls = BTdata;
  5086  005A1C  C053  F0A2         	movff	XReceiveBTMessage@BTdata,XReceiveBTMessage@BTHeader+2
  5087  005A20  EFF3  F02C         	goto	l2692
  5088  005A24                     l2712:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;src/blueWork.c: 520:    if (byteCount == 3)
  5092  005A24  0E03               	movlw	3
  5093  005A26  1855               	xorwf	XReceiveBTMessage@byteCount^0,w,c
  5094  005A28  1056               	iorwf	(XReceiveBTMessage@byteCount+1)^0,w,c
  5095  005A2A  A4D8               	btfss	status,2,c
  5096  005A2C  EF1A  F02D         	goto	u1551
  5097  005A30  EF1C  F02D         	goto	u1550
  5098  005A34                     u1551:
  5099  005A34  EF39  F02D         	goto	l2726
  5100  005A38                     u1550:
  5101  005A38                     
  5102                           ; BSR set to: 0
  5103                           ;src/blueWork.c: 521:    {;src/blueWork.c: 523:       BTHeader.command = BTdata;
  5104  005A38  C053  F0A3         	movff	XReceiveBTMessage@BTdata,XReceiveBTMessage@BTHeader+3
  5105                           
  5106                           ;src/blueWork.c: 527:       pLength = (uint16)BTHeader.lolen;
  5107  005A3C  C0A1  F0B4         	movff	XReceiveBTMessage@BTHeader+1,XReceiveBTMessage@pLength
  5108  005A40  6BB5               	clrf	(XReceiveBTMessage@pLength+1)& (0+255),b
  5109  005A42                     
  5110                           ; BSR set to: 0
  5111                           ;src/blueWork.c: 529:       if (pLength == 0)
  5112  005A42  51B4               	movf	XReceiveBTMessage@pLength& (0+255),w,b
  5113  005A44  11B5               	iorwf	(XReceiveBTMessage@pLength+1)& (0+255),w,b
  5114  005A46  A4D8               	btfss	status,2,c
  5115  005A48  EF28  F02D         	goto	u1561
  5116  005A4C  EF2A  F02D         	goto	u1560
  5117  005A50                     u1561:
  5118  005A50  EFF3  F02C         	goto	l2692
  5119  005A54                     u1560:
  5120  005A54                     
  5121                           ; BSR set to: 0
  5122                           ;src/blueWork.c: 530:       {;src/blueWork.c: 532:          receivedMessage = messageMat
      +                          ch(BTHeader.type_hilen, BTHeader.cls, BTHeader.command);
  5123  005A54  C0A2  F04A         	movff	XReceiveBTMessage@BTHeader+2,messageMatch@cls
  5124  005A58  C0A3  F04B         	movff	XReceiveBTMessage@BTHeader+3,messageMatch@command
  5125  005A5C  51A0               	movf	XReceiveBTMessage@BTHeader& (0+255),w,b
  5126  005A5E  ECB5  F029         	call	_messageMatch
  5127  005A62  0100               	movlb	0	; () banked
  5128  005A64  6FC1               	movwf	XReceiveBTMessage@receivedMessage& (0+255),b
  5129  005A66                     l2720:
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;src/blueWork.c: 533:          byteCount = 0x00;
  5133  005A66  0E00               	movlw	0
  5134  005A68  6E56               	movwf	(XReceiveBTMessage@byteCount+1)^0,c
  5135  005A6A  0E00               	movlw	0
  5136  005A6C  6E55               	movwf	XReceiveBTMessage@byteCount^0,c
  5137                           
  5138                           ;src/blueWork.c: 535:       }
  5139  005A6E  EF80  F02D         	goto	l203
  5140  005A72                     l2726:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;src/blueWork.c: 541:    if (byteCount >= 4)
  5144  005A72  5056               	movf	(XReceiveBTMessage@byteCount+1)^0,w,c
  5145  005A74  E109               	bnz	u1570
  5146  005A76  0E04               	movlw	4
  5147  005A78  5C55               	subwf	XReceiveBTMessage@byteCount^0,w,c
  5148  005A7A  A0D8               	btfss	status,0,c
  5149  005A7C  EF42  F02D         	goto	u1571
  5150  005A80  EF44  F02D         	goto	u1570
  5151  005A84                     u1571:
  5152  005A84  EF80  F02D         	goto	l203
  5153  005A88                     u1570:
  5154  005A88                     
  5155                           ; BSR set to: 0
  5156                           ;src/blueWork.c: 542:    {;src/blueWork.c: 544:       if (byteCount == (pLength + 3))
  5157  005A88  0E03               	movlw	3
  5158  005A8A  25B4               	addwf	XReceiveBTMessage@pLength& (0+255),w,b
  5159  005A8C  6E51               	movwf	??_XReceiveBTMessage^0,c
  5160  005A8E  0E00               	movlw	0
  5161  005A90  21B5               	addwfc	(XReceiveBTMessage@pLength+1)& (0+255),w,b
  5162  005A92  6E52               	movwf	(??_XReceiveBTMessage+1)^0,c
  5163  005A94  5055               	movf	XReceiveBTMessage@byteCount^0,w,c
  5164  005A96  1851               	xorwf	??_XReceiveBTMessage^0,w,c
  5165  005A98  E107               	bnz	u1581
  5166  005A9A  5056               	movf	(XReceiveBTMessage@byteCount+1)^0,w,c
  5167  005A9C  1852               	xorwf	(??_XReceiveBTMessage+1)^0,w,c
  5168  005A9E  A4D8               	btfss	status,2,c
  5169  005AA0  EF54  F02D         	goto	u1581
  5170  005AA4  EF56  F02D         	goto	u1580
  5171  005AA8                     u1581:
  5172  005AA8  EF69  F02D         	goto	l2740
  5173  005AAC                     u1580:
  5174  005AAC                     
  5175                           ; BSR set to: 0
  5176                           ;src/blueWork.c: 545:       {;src/blueWork.c: 548:          payload[byteCount - 4] = BTd
      +                          ata;
  5177  005AAC  0EFC               	movlw	low (_payload+65532)
  5178  005AAE  2455               	addwf	XReceiveBTMessage@byteCount^0,w,c
  5179  005AB0  6ED9               	movwf	fsr2l,c
  5180  005AB2  0E02               	movlw	high (_payload+65532)
  5181  005AB4  2056               	addwfc	(XReceiveBTMessage@byteCount+1)^0,w,c
  5182  005AB6  6EDA               	movwf	fsr2h,c
  5183  005AB8  C053  FFDF         	movff	XReceiveBTMessage@BTdata,indf2
  5184  005ABC                     
  5185                           ; BSR set to: 0
  5186                           ;src/blueWork.c: 550:          receivedMessage = messageMatch(BTHeader.type_hilen, BTHea
      +                          der.cls, BTHeader.command);
  5187  005ABC  C0A2  F04A         	movff	XReceiveBTMessage@BTHeader+2,messageMatch@cls
  5188  005AC0  C0A3  F04B         	movff	XReceiveBTMessage@BTHeader+3,messageMatch@command
  5189  005AC4  51A0               	movf	XReceiveBTMessage@BTHeader& (0+255),w,b
  5190  005AC6  ECB5  F029         	call	_messageMatch
  5191  005ACA  0100               	movlb	0	; () banked
  5192  005ACC  6FC1               	movwf	XReceiveBTMessage@receivedMessage& (0+255),b
  5193  005ACE  EF33  F02D         	goto	l2720
  5194  005AD2                     l2740:
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;src/blueWork.c: 556:       {;src/blueWork.c: 560:          payload[byteCount - 4] = BTd
      +                          ata;
  5198  005AD2  0EFC               	movlw	low (_payload+65532)
  5199  005AD4  2455               	addwf	XReceiveBTMessage@byteCount^0,w,c
  5200  005AD6  6ED9               	movwf	fsr2l,c
  5201  005AD8  0E02               	movlw	high (_payload+65532)
  5202  005ADA  2056               	addwfc	(XReceiveBTMessage@byteCount+1)^0,w,c
  5203  005ADC  6EDA               	movwf	fsr2h,c
  5204  005ADE  C053  FFDF         	movff	XReceiveBTMessage@BTdata,indf2
  5205  005AE2                     
  5206                           ; BSR set to: 0
  5207                           ;src/blueWork.c: 562:          if (++byteCount >= 255)
  5208  005AE2  4A55               	infsnz	XReceiveBTMessage@byteCount^0,f,c
  5209  005AE4  2A56               	incf	(XReceiveBTMessage@byteCount+1)^0,f,c
  5210  005AE6  5056               	movf	(XReceiveBTMessage@byteCount+1)^0,w,c
  5211  005AE8  E108               	bnz	u1590
  5212  005AEA  2855               	incf	XReceiveBTMessage@byteCount^0,w,c
  5213  005AEC  A0D8               	btfss	status,0,c
  5214  005AEE  EF7B  F02D         	goto	u1591
  5215  005AF2  EF7D  F02D         	goto	u1590
  5216  005AF6                     u1591:
  5217  005AF6  EF80  F02D         	goto	l203
  5218  005AFA                     u1590:
  5219  005AFA                     
  5220                           ; BSR set to: 0
  5221                           ;src/blueWork.c: 563:             byteCount = 255;
  5222  005AFA  0E00               	movlw	0
  5223  005AFC  6E56               	movwf	(XReceiveBTMessage@byteCount+1)^0,c
  5224  005AFE  6855               	setf	XReceiveBTMessage@byteCount^0,c
  5225  005B00                     l203:
  5226                           
  5227                           ; BSR set to: 0
  5228  005B00  0012               	return		;funcret
  5229  005B02                     __end_of_XReceiveBTMessage:
  5230                           	callstack 0
  5231                           
  5232 ;; *************** function _messageMatch *****************
  5233 ;; Defined at:
  5234 ;;		line 327 in file "src/blueWork.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  hilen           1    wreg     unsigned char 
  5237 ;;  cls             1    9[COMRAM] unsigned char 
  5238 ;;  command         1   10[COMRAM] unsigned char 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  hilen           1   13[COMRAM] unsigned char 
  5241 ;;  result          1   15[COMRAM] unsigned char 
  5242 ;;  n               1   14[COMRAM] unsigned char 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      unsigned char 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5253 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5255 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5256 ;;Total ram usage:        7 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    4
  5259 ;; This function calls:
  5260 ;;		_calibrationStow
  5261 ;; This function is called by:
  5262 ;;		_XReceiveBTMessage
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text21
  5267  00536A                     __ptext21:
  5268                           	callstack 0
  5269  00536A                     _messageMatch:
  5270                           	callstack 24
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;incstack = 0
  5274                           ;messageMatch@hilen stored from wreg
  5275  00536A  6E4E               	movwf	messageMatch@hilen^0,c
  5276  00536C                     
  5277                           ;src/blueWork.c: 336:    if ((hilen == 0x00) && (cls == 0x02) && (command == 0x00))
  5278  00536C  504E               	movf	messageMatch@hilen^0,w,c
  5279  00536E  A4D8               	btfss	status,2,c
  5280  005370  EFBC  F029         	goto	u1221
  5281  005374  EFBE  F029         	goto	u1220
  5282  005378                     u1221:
  5283  005378  EFD5  F029         	goto	l2528
  5284  00537C                     u1220:
  5285  00537C  0E02               	movlw	2
  5286  00537E  184A               	xorwf	messageMatch@cls^0,w,c
  5287  005380  A4D8               	btfss	status,2,c
  5288  005382  EFC5  F029         	goto	u1231
  5289  005386  EFC7  F029         	goto	u1230
  5290  00538A                     u1231:
  5291  00538A  EFD5  F029         	goto	l2528
  5292  00538E                     u1230:
  5293  00538E  504B               	movf	messageMatch@command^0,w,c
  5294  005390  A4D8               	btfss	status,2,c
  5295  005392  EFCD  F029         	goto	u1241
  5296  005396  EFCF  F029         	goto	u1240
  5297  00539A                     u1241:
  5298  00539A  EFD5  F029         	goto	l2528
  5299  00539E                     u1240:
  5300  00539E                     
  5301                           ;src/blueWork.c: 339:       bleReady = 1;
  5302  00539E  0E01               	movlw	1
  5303  0053A0  0100               	movlb	0	; () banked
  5304  0053A2  6FC6               	movwf	_bleReady& (0+255),b	;volatile
  5305                           
  5306                           ;src/blueWork.c: 340:       return result;
  5307  0053A4  0E01               	movlw	1
  5308  0053A6  EF52  F02B         	goto	l166
  5309  0053AA                     l2528:
  5310                           
  5311                           ;src/blueWork.c: 344:    if ((hilen == 0x00) && (cls == 0x06) && (command == 0x01))
  5312  0053AA  504E               	movf	messageMatch@hilen^0,w,c
  5313  0053AC  A4D8               	btfss	status,2,c
  5314  0053AE  EFDB  F029         	goto	u1251
  5315  0053B2  EFDD  F029         	goto	u1250
  5316  0053B6                     u1251:
  5317  0053B6  EFFA  F029         	goto	l2538
  5318  0053BA                     u1250:
  5319  0053BA  0E06               	movlw	6
  5320  0053BC  184A               	xorwf	messageMatch@cls^0,w,c
  5321  0053BE  A4D8               	btfss	status,2,c
  5322  0053C0  EFE4  F029         	goto	u1261
  5323  0053C4  EFE6  F029         	goto	u1260
  5324  0053C8                     u1261:
  5325  0053C8  EFFA  F029         	goto	l2538
  5326  0053CC                     u1260:
  5327  0053CC  044B               	decf	messageMatch@command^0,w,c
  5328  0053CE  A4D8               	btfss	status,2,c
  5329  0053D0  EFEC  F029         	goto	u1271
  5330  0053D4  EFEE  F029         	goto	u1270
  5331  0053D8                     u1271:
  5332  0053D8  EFFA  F029         	goto	l2538
  5333  0053DC                     u1270:
  5334  0053DC                     
  5335                           ;src/blueWork.c: 347:       blueState = 5;
  5336  0053DC  0E05               	movlw	5
  5337  0053DE  6E5B               	movwf	_blueState^0,c	;volatile
  5338                           
  5339                           ;src/blueWork.c: 348:       bleReady = 1;
  5340  0053E0  0E01               	movlw	1
  5341  0053E2  0100               	movlb	0	; () banked
  5342  0053E4  6FC6               	movwf	_bleReady& (0+255),b	;volatile
  5343                           
  5344                           ;src/blueWork.c: 349:       blueTimer = 0;
  5345  0053E6  0E00               	movlw	0
  5346  0053E8  6E58               	movwf	(_blueTimer+1)^0,c	;volatile
  5347  0053EA  0E00               	movlw	0
  5348  0053EC  6E57               	movwf	_blueTimer^0,c	;volatile
  5349                           
  5350                           ;src/blueWork.c: 350:       return result;
  5351  0053EE  0E02               	movlw	2
  5352  0053F0  EF52  F02B         	goto	l166
  5353  0053F4                     l2538:
  5354                           
  5355                           ;src/blueWork.c: 354:    if ((hilen == 0x80) && (cls == 0x00) && (command == 0x06))
  5356  0053F4  0E80               	movlw	128
  5357  0053F6  184E               	xorwf	messageMatch@hilen^0,w,c
  5358  0053F8  A4D8               	btfss	status,2,c
  5359  0053FA  EF01  F02A         	goto	u1281
  5360  0053FE  EF03  F02A         	goto	u1280
  5361  005402                     u1281:
  5362  005402  EF1A  F02A         	goto	l2548
  5363  005406                     u1280:
  5364  005406  504A               	movf	messageMatch@cls^0,w,c
  5365  005408  A4D8               	btfss	status,2,c
  5366  00540A  EF09  F02A         	goto	u1291
  5367  00540E  EF0B  F02A         	goto	u1290
  5368  005412                     u1291:
  5369  005412  EF1A  F02A         	goto	l2548
  5370  005416                     u1290:
  5371  005416  0E06               	movlw	6
  5372  005418  184B               	xorwf	messageMatch@command^0,w,c
  5373  00541A  A4D8               	btfss	status,2,c
  5374  00541C  EF12  F02A         	goto	u1301
  5375  005420  EF14  F02A         	goto	u1300
  5376  005424                     u1301:
  5377  005424  EF1A  F02A         	goto	l2548
  5378  005428                     u1300:
  5379  005428                     
  5380                           ;src/blueWork.c: 357:       bleReady = 1;
  5381  005428  0E01               	movlw	1
  5382  00542A  0100               	movlb	0	; () banked
  5383  00542C  6FC6               	movwf	_bleReady& (0+255),b	;volatile
  5384                           
  5385                           ;src/blueWork.c: 358:       return result;
  5386  00542E  0E03               	movlw	3
  5387  005430  EF52  F02B         	goto	l166
  5388  005434                     l2548:
  5389                           
  5390                           ;src/blueWork.c: 362:    if ((hilen == 0x80) && (cls == 0x00) && (command == 0x00))
  5391  005434  0E80               	movlw	128
  5392  005436  184E               	xorwf	messageMatch@hilen^0,w,c
  5393  005438  A4D8               	btfss	status,2,c
  5394  00543A  EF21  F02A         	goto	u1311
  5395  00543E  EF23  F02A         	goto	u1310
  5396  005442                     u1311:
  5397  005442  EF38  F02A         	goto	l2558
  5398  005446                     u1310:
  5399  005446  504A               	movf	messageMatch@cls^0,w,c
  5400  005448  A4D8               	btfss	status,2,c
  5401  00544A  EF29  F02A         	goto	u1321
  5402  00544E  EF2B  F02A         	goto	u1320
  5403  005452                     u1321:
  5404  005452  EF38  F02A         	goto	l2558
  5405  005456                     u1320:
  5406  005456  504B               	movf	messageMatch@command^0,w,c
  5407  005458  A4D8               	btfss	status,2,c
  5408  00545A  EF31  F02A         	goto	u1331
  5409  00545E  EF33  F02A         	goto	u1330
  5410  005462                     u1331:
  5411  005462  EF38  F02A         	goto	l2558
  5412  005466                     u1330:
  5413  005466                     
  5414                           ;src/blueWork.c: 365:       blueState = 3;
  5415  005466  0E03               	movlw	3
  5416  005468  6E5B               	movwf	_blueState^0,c	;volatile
  5417                           
  5418                           ;src/blueWork.c: 366:       return result;
  5419  00546A  0E04               	movlw	4
  5420  00546C  EF52  F02B         	goto	l166
  5421  005470                     l2558:
  5422                           
  5423                           ;src/blueWork.c: 370:    if ((hilen == 0x80) && (cls == 0x02) && (command == 0x00))
  5424  005470  0E80               	movlw	128
  5425  005472  184E               	xorwf	messageMatch@hilen^0,w,c
  5426  005474  A4D8               	btfss	status,2,c
  5427  005476  EF3F  F02A         	goto	u1341
  5428  00547A  EF41  F02A         	goto	u1340
  5429  00547E                     u1341:
  5430  00547E  EFF1  F02A         	goto	l2616
  5431  005482                     u1340:
  5432  005482  0E02               	movlw	2
  5433  005484  184A               	xorwf	messageMatch@cls^0,w,c
  5434  005486  A4D8               	btfss	status,2,c
  5435  005488  EF48  F02A         	goto	u1351
  5436  00548C  EF4A  F02A         	goto	u1350
  5437  005490                     u1351:
  5438  005490  EFF1  F02A         	goto	l2616
  5439  005494                     u1350:
  5440  005494  504B               	movf	messageMatch@command^0,w,c
  5441  005496  A4D8               	btfss	status,2,c
  5442  005498  EF50  F02A         	goto	u1361
  5443  00549C  EF52  F02A         	goto	u1360
  5444  0054A0                     u1361:
  5445  0054A0  EFF1  F02A         	goto	l2616
  5446  0054A4                     u1360:
  5447  0054A4                     
  5448                           ;src/blueWork.c: 371:    {;src/blueWork.c: 373:       result = 5;
  5449  0054A4  0E05               	movlw	5
  5450  0054A6  6E50               	movwf	messageMatch@result^0,c
  5451                           
  5452                           ;src/blueWork.c: 374:       for (n = 0 ; n < 20 ; n++)
  5453  0054A8  0E00               	movlw	0
  5454  0054AA  6E4F               	movwf	messageMatch@n^0,c
  5455  0054AC                     l2570:
  5456                           
  5457                           ;src/blueWork.c: 375:          datasIn[n] = payload[(uint16)(7 + n)];
  5458  0054AC  0E07               	movlw	low (_payload+7)
  5459  0054AE  244F               	addwf	messageMatch@n^0,w,c
  5460  0054B0  6ED9               	movwf	fsr2l,c
  5461  0054B2  6ADA               	clrf	fsr2h,c
  5462  0054B4  0E03               	movlw	high (_payload+7)
  5463  0054B6  22DA               	addwfc	fsr2h,f,c
  5464  0054B8  0E74               	movlw	low _datasIn
  5465  0054BA  244F               	addwf	messageMatch@n^0,w,c
  5466  0054BC  6EE1               	movwf	fsr1l,c
  5467  0054BE  6AE2               	clrf	fsr1h,c
  5468  0054C0  0E00               	movlw	high _datasIn
  5469  0054C2  22E2               	addwfc	fsr1h,f,c
  5470  0054C4  CFDF FFE7          	movff	indf2,indf1
  5471  0054C8  2A4F               	incf	messageMatch@n^0,f,c
  5472  0054CA  0E13               	movlw	19
  5473  0054CC  644F               	cpfsgt	messageMatch@n^0,c
  5474  0054CE  EF6B  F02A         	goto	u1371
  5475  0054D2  EF6D  F02A         	goto	u1370
  5476  0054D6                     u1371:
  5477  0054D6  EF56  F02A         	goto	l2570
  5478  0054DA                     u1370:
  5479  0054DA                     
  5480                           ;src/blueWork.c: 377:       for (n = 1 ; n < 20 ; n++)
  5481  0054DA  0E01               	movlw	1
  5482  0054DC  6E4F               	movwf	messageMatch@n^0,c
  5483  0054DE                     l2582:
  5484                           
  5485                           ;src/blueWork.c: 378:       {;src/blueWork.c: 379:          if (datasIn[n] != calibratio
      +                          nSecurityCheck[n])
  5486  0054DE  0E74               	movlw	low _datasIn
  5487  0054E0  244F               	addwf	messageMatch@n^0,w,c
  5488  0054E2  6ED9               	movwf	fsr2l,c
  5489  0054E4  6ADA               	clrf	fsr2h,c
  5490  0054E6  0E00               	movlw	high _datasIn
  5491  0054E8  22DA               	addwfc	fsr2h,f,c
  5492  0054EA  50DF               	movf	indf2,w,c
  5493  0054EC  6E4C               	movwf	??_messageMatch^0,c
  5494  0054EE  0EFF               	movlw	low _calibrationSecurityCheck
  5495  0054F0  244F               	addwf	messageMatch@n^0,w,c
  5496  0054F2  6EF6               	movwf	tblptrl,c
  5497  0054F4  6AF7               	clrf	tblptrh,c
  5498  0054F6  0E4F               	movlw	high _calibrationSecurityCheck
  5499  0054F8  22F7               	addwfc	tblptrh,f,c
  5500  0054FA                     	if	1	;There are 3 active tblptr bytes
  5501  0054FA  6AF8               	clrf	tblptru,c
  5502  0054FC  0E00               	movlw	low (__mediumconst shr (0+16))
  5503  0054FE  22F8               	addwfc	tblptru,f,c
  5504  005500                     	endif
  5505  005500  0008               	tblrd		*
  5506  005502  50F5               	movf	tablat,w,c
  5507  005504  184C               	xorwf	??_messageMatch^0,w,c
  5508  005506  B4D8               	btfsc	status,2,c
  5509  005508  EF88  F02A         	goto	u1381
  5510  00550C  EF8A  F02A         	goto	u1380
  5511  005510                     u1381:
  5512  005510  EF8D  F02A         	goto	l2588
  5513  005514                     u1380:
  5514  005514                     l2584:
  5515                           
  5516                           ;src/blueWork.c: 380:             return 0;
  5517  005514  0E00               	movlw	0
  5518  005516  EF52  F02B         	goto	l166
  5519  00551A                     l2588:
  5520                           
  5521                           ;src/blueWork.c: 381:       }
  5522  00551A  2A4F               	incf	messageMatch@n^0,f,c
  5523  00551C  0E13               	movlw	19
  5524  00551E  644F               	cpfsgt	messageMatch@n^0,c
  5525  005520  EF94  F02A         	goto	u1391
  5526  005524  EF96  F02A         	goto	u1390
  5527  005528                     u1391:
  5528  005528  EF6F  F02A         	goto	l2582
  5529  00552C                     u1390:
  5530  00552C  EFC0  F02A         	goto	l2610
  5531  005530                     l2592:
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;src/blueWork.c: 387:          {;src/blueWork.c: 389:             calibrationStow(0);
  5535  005530  0E00               	movlw	0
  5536  005532  ECE8  F02E         	call	_calibrationStow
  5537                           
  5538                           ;src/blueWork.c: 390:             break;
  5539  005536  EFEE  F02A         	goto	l2612
  5540  00553A                     l2594:
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;src/blueWork.c: 394:          {;src/blueWork.c: 396:             calibrationStow(1);
  5544  00553A  0E01               	movlw	1
  5545  00553C  ECE8  F02E         	call	_calibrationStow
  5546                           
  5547                           ;src/blueWork.c: 397:             break;
  5548  005540  EFEE  F02A         	goto	l2612
  5549  005544                     l2596:
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;src/blueWork.c: 401:          {;src/blueWork.c: 403:             calibrationStow(2);
  5553  005544  0E02               	movlw	2
  5554  005546  ECE8  F02E         	call	_calibrationStow
  5555                           
  5556                           ;src/blueWork.c: 404:             break;
  5557  00554A  EFEE  F02A         	goto	l2612
  5558  00554E                     l2598:
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;src/blueWork.c: 408:          {;src/blueWork.c: 410:             calibrationStow(3);
  5562  00554E  0E03               	movlw	3
  5563  005550  ECE8  F02E         	call	_calibrationStow
  5564                           
  5565                           ;src/blueWork.c: 411:             break;
  5566  005554  EFEE  F02A         	goto	l2612
  5567  005558                     l2600:
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;src/blueWork.c: 415:          {;src/blueWork.c: 417:             calibrationStow(4);
  5571  005558  0E04               	movlw	4
  5572  00555A  ECE8  F02E         	call	_calibrationStow
  5573                           
  5574                           ;src/blueWork.c: 418:             break;
  5575  00555E  EFEE  F02A         	goto	l2612
  5576  005562                     l2602:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;src/blueWork.c: 422:          {;src/blueWork.c: 424:             calibrationStow(5);
  5580  005562  0E05               	movlw	5
  5581  005564  ECE8  F02E         	call	_calibrationStow
  5582                           
  5583                           ;src/blueWork.c: 425:             break;
  5584  005568  EFEE  F02A         	goto	l2612
  5585  00556C                     l2604:
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;src/blueWork.c: 429:          {;src/blueWork.c: 431:             calibrationStow(6);
  5589  00556C  0E06               	movlw	6
  5590  00556E  ECE8  F02E         	call	_calibrationStow
  5591                           
  5592                           ;src/blueWork.c: 432:             break;
  5593  005572  EFEE  F02A         	goto	l2612
  5594  005576                     l2606:
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;src/blueWork.c: 436:          {;src/blueWork.c: 438:             calibrationStow(7);
  5598  005576  0E07               	movlw	7
  5599  005578  ECE8  F02E         	call	_calibrationStow
  5600                           
  5601                           ;src/blueWork.c: 439:             break;
  5602  00557C  EFEE  F02A         	goto	l2612
  5603  005580                     l2610:
  5604  005580  0100               	movlb	0	; () banked
  5605  005582  5174               	movf	_datasIn& (0+255),w,b
  5606  005584  6E4C               	movwf	??_messageMatch^0,c
  5607  005586  6A4D               	clrf	(??_messageMatch+1)^0,c
  5608                           
  5609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5610                           ; Switch size 1, requested type "simple"
  5611                           ; Number of cases is 1, Range of values is 0 to 0
  5612                           ; switch strategies available:
  5613                           ; Name         Instructions Cycles
  5614                           ; simple_byte            4     3 (average)
  5615                           ;	Chosen strategy is simple_byte
  5616  005588  504D               	movf	(??_messageMatch+1)^0,w,c
  5617  00558A  0A00               	xorlw	0	; case 0
  5618  00558C  B4D8               	btfsc	status,2,c
  5619  00558E  EFCB  F02A         	goto	l3722
  5620  005592  EFEE  F02A         	goto	l2612
  5621  005596                     l3722:
  5622                           
  5623                           ; BSR set to: 0
  5624                           ; Switch size 1, requested type "simple"
  5625                           ; Number of cases is 8, Range of values is 241 to 248
  5626                           ; switch strategies available:
  5627                           ; Name         Instructions Cycles
  5628                           ; simple_byte           25    13 (average)
  5629                           ;	Chosen strategy is simple_byte
  5630  005596  504C               	movf	??_messageMatch^0,w,c
  5631  005598  0AF1               	xorlw	241	; case 241
  5632  00559A  B4D8               	btfsc	status,2,c
  5633  00559C  EF98  F02A         	goto	l2592
  5634  0055A0  0A03               	xorlw	3	; case 242
  5635  0055A2  B4D8               	btfsc	status,2,c
  5636  0055A4  EF9D  F02A         	goto	l2594
  5637  0055A8  0A01               	xorlw	1	; case 243
  5638  0055AA  B4D8               	btfsc	status,2,c
  5639  0055AC  EFA2  F02A         	goto	l2596
  5640  0055B0  0A07               	xorlw	7	; case 244
  5641  0055B2  B4D8               	btfsc	status,2,c
  5642  0055B4  EFA7  F02A         	goto	l2598
  5643  0055B8  0A01               	xorlw	1	; case 245
  5644  0055BA  B4D8               	btfsc	status,2,c
  5645  0055BC  EFAC  F02A         	goto	l2600
  5646  0055C0  0A03               	xorlw	3	; case 246
  5647  0055C2  B4D8               	btfsc	status,2,c
  5648  0055C4  EFB1  F02A         	goto	l2602
  5649  0055C8  0A01               	xorlw	1	; case 247
  5650  0055CA  B4D8               	btfsc	status,2,c
  5651  0055CC  EFB6  F02A         	goto	l2604
  5652  0055D0  0A0F               	xorlw	15	; case 248
  5653  0055D2  B4D8               	btfsc	status,2,c
  5654  0055D4  EFBB  F02A         	goto	l2606
  5655  0055D8  EFEE  F02A         	goto	l2612
  5656  0055DC                     l2612:
  5657                           
  5658                           ;src/blueWork.c: 448:       return result;
  5659  0055DC  5050               	movf	messageMatch@result^0,w,c
  5660  0055DE  EF52  F02B         	goto	l166
  5661  0055E2                     l2616:
  5662                           
  5663                           ;src/blueWork.c: 453:    if ((hilen == 0x80) && (cls == 0x02) && (command == 0x02))
  5664  0055E2  0E80               	movlw	128
  5665  0055E4  184E               	xorwf	messageMatch@hilen^0,w,c
  5666  0055E6  A4D8               	btfss	status,2,c
  5667  0055E8  EFF8  F02A         	goto	u1401
  5668  0055EC  EFFA  F02A         	goto	u1400
  5669  0055F0                     u1401:
  5670  0055F0  EF11  F02B         	goto	l2626
  5671  0055F4                     u1400:
  5672  0055F4  0E02               	movlw	2
  5673  0055F6  184A               	xorwf	messageMatch@cls^0,w,c
  5674  0055F8  A4D8               	btfss	status,2,c
  5675  0055FA  EF01  F02B         	goto	u1411
  5676  0055FE  EF03  F02B         	goto	u1410
  5677  005602                     u1411:
  5678  005602  EF11  F02B         	goto	l2626
  5679  005606                     u1410:
  5680  005606  0E02               	movlw	2
  5681  005608  184B               	xorwf	messageMatch@command^0,w,c
  5682  00560A  A4D8               	btfss	status,2,c
  5683  00560C  EF0A  F02B         	goto	u1421
  5684  005610  EF0C  F02B         	goto	u1420
  5685  005614                     u1421:
  5686  005614  EF11  F02B         	goto	l2626
  5687  005618                     u1420:
  5688  005618                     
  5689                           ;src/blueWork.c: 456:       blueState = 7;
  5690  005618  0E07               	movlw	7
  5691  00561A  6E5B               	movwf	_blueState^0,c	;volatile
  5692                           
  5693                           ;src/blueWork.c: 457:       return result;
  5694  00561C  0E06               	movlw	6
  5695  00561E  EF52  F02B         	goto	l166
  5696  005622                     l2626:
  5697                           
  5698                           ;src/blueWork.c: 461:    if ((hilen == 0x80) && (cls == 0x03) && (command == 0x00))
  5699  005622  0E80               	movlw	128
  5700  005624  184E               	xorwf	messageMatch@hilen^0,w,c
  5701  005626  A4D8               	btfss	status,2,c
  5702  005628  EF18  F02B         	goto	u1431
  5703  00562C  EF1A  F02B         	goto	u1430
  5704  005630                     u1431:
  5705  005630  EF34  F02B         	goto	l2636
  5706  005634                     u1430:
  5707  005634  0E03               	movlw	3
  5708  005636  184A               	xorwf	messageMatch@cls^0,w,c
  5709  005638  A4D8               	btfss	status,2,c
  5710  00563A  EF21  F02B         	goto	u1441
  5711  00563E  EF23  F02B         	goto	u1440
  5712  005642                     u1441:
  5713  005642  EF34  F02B         	goto	l2636
  5714  005646                     u1440:
  5715  005646  504B               	movf	messageMatch@command^0,w,c
  5716  005648  A4D8               	btfss	status,2,c
  5717  00564A  EF29  F02B         	goto	u1451
  5718  00564E  EF2B  F02B         	goto	u1450
  5719  005652                     u1451:
  5720  005652  EF34  F02B         	goto	l2636
  5721  005656                     u1450:
  5722  005656                     
  5723                           ;src/blueWork.c: 464:       blueState = 6;
  5724  005656  0E06               	movlw	6
  5725  005658  6E5B               	movwf	_blueState^0,c	;volatile
  5726                           
  5727                           ;src/blueWork.c: 465:       blueTimer = 0;
  5728  00565A  0E00               	movlw	0
  5729  00565C  6E58               	movwf	(_blueTimer+1)^0,c	;volatile
  5730  00565E  0E00               	movlw	0
  5731  005660  6E57               	movwf	_blueTimer^0,c	;volatile
  5732                           
  5733                           ;src/blueWork.c: 466:       return result;
  5734  005662  0E07               	movlw	7
  5735  005664  EF52  F02B         	goto	l166
  5736  005668                     l2636:
  5737                           
  5738                           ;src/blueWork.c: 470:    if ((hilen == 0x80) && (cls == 0x03) && (command == 0x04))
  5739  005668  0E80               	movlw	128
  5740  00566A  184E               	xorwf	messageMatch@hilen^0,w,c
  5741  00566C  A4D8               	btfss	status,2,c
  5742  00566E  EF3B  F02B         	goto	u1461
  5743  005672  EF3D  F02B         	goto	u1460
  5744  005676                     u1461:
  5745  005676  EF8A  F02A         	goto	l2584
  5746  00567A                     u1460:
  5747  00567A  0E03               	movlw	3
  5748  00567C  184A               	xorwf	messageMatch@cls^0,w,c
  5749  00567E  A4D8               	btfss	status,2,c
  5750  005680  EF44  F02B         	goto	u1471
  5751  005684  EF46  F02B         	goto	u1470
  5752  005688                     u1471:
  5753  005688  EF8A  F02A         	goto	l2584
  5754  00568C                     u1470:
  5755  00568C  0E04               	movlw	4
  5756  00568E  184B               	xorwf	messageMatch@command^0,w,c
  5757  005690  A4D8               	btfss	status,2,c
  5758  005692  EF4D  F02B         	goto	u1481
  5759  005696  EF4F  F02B         	goto	u1480
  5760  00569A                     u1481:
  5761  00569A  EF8A  F02A         	goto	l2584
  5762  00569E                     u1480:
  5763  00569E                     
  5764                           ;src/blueWork.c: 473:       blueState = 8;
  5765  00569E  0E08               	movlw	8
  5766  0056A0  6E5B               	movwf	_blueState^0,c	;volatile
  5767                           
  5768                           ;src/blueWork.c: 474:       return result;
  5769  0056A2  0E08               	movlw	8
  5770  0056A4                     l166:
  5771  0056A4  0012               	return		;funcret
  5772  0056A6                     __end_of_messageMatch:
  5773                           	callstack 0
  5774                           
  5775 ;; *************** function _calibrationStow *****************
  5776 ;; Defined at:
  5777 ;;		line 315 in file "src/blueWork.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  id              1    wreg     unsigned char 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  id              1    8[COMRAM] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5795 ;;Total ram usage:        1 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    3
  5798 ;; This function calls:
  5799 ;;		_WriteEEByte
  5800 ;;		_ledColour
  5801 ;; This function is called by:
  5802 ;;		_messageMatch
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text22
  5807  005DD0                     __ptext22:
  5808                           	callstack 0
  5809  005DD0                     _calibrationStow:
  5810                           	callstack 24
  5811                           
  5812                           ;incstack = 0
  5813                           ;calibrationStow@id stored from wreg
  5814  005DD0  6E49               	movwf	calibrationStow@id^0,c
  5815  005DD2                     
  5816                           ;src/blueWork.c: 315: void calibrationStow(unsigned char id);src/blueWork.c: 316: {;src/
      +                          blueWork.c: 317:    ledColour(0b00000000);
  5817  005DD2  0E00               	movlw	0
  5818  005DD4  EC41  F030         	call	_ledColour
  5819  005DD8                     
  5820                           ;src/blueWork.c: 318:    WriteEEByte((uint16)(id), sensorLsb);
  5821  005DD8  C049  F044         	movff	calibrationStow@id,WriteEEByte@address
  5822  005DDC  6A45               	clrf	(WriteEEByte@address+1)^0,c
  5823  005DDE  C059  F046         	movff	_sensorLsb,WriteEEByte@data
  5824  005DE2  EC1D  F030         	call	_WriteEEByte	;wreg free
  5825  005DE6                     
  5826                           ;src/blueWork.c: 319:    WriteEEByte((uint16)(id + 8), (uint8)sensorMsb);
  5827  005DE6  0E08               	movlw	8
  5828  005DE8  2449               	addwf	calibrationStow@id^0,w,c
  5829  005DEA  6E44               	movwf	WriteEEByte@address^0,c
  5830  005DEC  6A45               	clrf	(WriteEEByte@address+1)^0,c
  5831  005DEE  0E00               	movlw	0
  5832  005DF0  2245               	addwfc	(WriteEEByte@address+1)^0,f,c
  5833  005DF2  C05A  F046         	movff	_sensorMsb,WriteEEByte@data
  5834  005DF6  EC1D  F030         	call	_WriteEEByte	;wreg free
  5835  005DFA                     
  5836                           ;src/blueWork.c: 320:    calibrationPointsLSB[id] = sensorLsb;
  5837  005DFA  0E98               	movlw	low _calibrationPointsLSB
  5838  005DFC  2449               	addwf	calibrationStow@id^0,w,c
  5839  005DFE  6ED9               	movwf	fsr2l,c
  5840  005E00  6ADA               	clrf	fsr2h,c
  5841  005E02  0E00               	movlw	high _calibrationPointsLSB
  5842  005E04  22DA               	addwfc	fsr2h,f,c
  5843  005E06  C059  FFDF         	movff	_sensorLsb,indf2
  5844  005E0A                     
  5845                           ;src/blueWork.c: 321:    calibrationPointsMSB[id] = sensorMsb;
  5846  005E0A  0E90               	movlw	low _calibrationPointsMSB
  5847  005E0C  2449               	addwf	calibrationStow@id^0,w,c
  5848  005E0E  6ED9               	movwf	fsr2l,c
  5849  005E10  6ADA               	clrf	fsr2h,c
  5850  005E12  0E00               	movlw	high _calibrationPointsMSB
  5851  005E14  22DA               	addwfc	fsr2h,f,c
  5852  005E16  C05A  FFDF         	movff	_sensorMsb,indf2
  5853  005E1A                     
  5854                           ;src/blueWork.c: 322:    blueTimer = 0;
  5855  005E1A  0E00               	movlw	0
  5856  005E1C  6E58               	movwf	(_blueTimer+1)^0,c	;volatile
  5857  005E1E  0E00               	movlw	0
  5858  005E20  6E57               	movwf	_blueTimer^0,c	;volatile
  5859  005E22                     
  5860                           ;src/blueWork.c: 323:    solidColourTimer = 100;
  5861  005E22  0E00               	movlw	0
  5862  005E24  0100               	movlb	0	; () banked
  5863  005E26  6FB7               	movwf	(_solidColourTimer+1)& (0+255),b	;volatile
  5864  005E28  0E64               	movlw	100
  5865  005E2A  6FB6               	movwf	_solidColourTimer& (0+255),b	;volatile
  5866  005E2C                     
  5867                           ; BSR set to: 0
  5868                           ;src/blueWork.c: 324:    solidColour = id;
  5869  005E2C  C049  F0C7         	movff	calibrationStow@id,_solidColour	;volatile
  5870  005E30                     
  5871                           ; BSR set to: 0
  5872  005E30  0012               	return		;funcret
  5873  005E32                     __end_of_calibrationStow:
  5874                           	callstack 0
  5875                           
  5876 ;; *************** function _ledColour *****************
  5877 ;; Defined at:
  5878 ;;		line 198 in file "src/blueWork.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  colour          1    wreg     unsigned char 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  colour          1    3[COMRAM] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;Total ram usage:        1 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    2
  5899 ;; This function calls:
  5900 ;;		Nothing
  5901 ;; This function is called by:
  5902 ;;		_calibrationStow
  5903 ;;		_main
  5904 ;;		_initialiseLeds
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text23
  5909  006082                     __ptext23:
  5910                           	callstack 0
  5911  006082                     _ledColour:
  5912                           	callstack 28
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;incstack = 0
  5916                           ;ledColour@colour stored from wreg
  5917  006082  6E44               	movwf	ledColour@colour^0,c
  5918  006084                     
  5919                           ;src/blueWork.c: 198: void ledColour(unsigned char colour);src/blueWork.c: 199: {;src/bl
      +                          ueWork.c: 201:    if ((colour & 0b00000001) == 0b00000001)
  5920  006084  A044               	btfss	ledColour@colour^0,0,c
  5921  006086  EF47  F030         	goto	u1101
  5922  00608A  EF49  F030         	goto	u1100
  5923  00608E                     u1101:
  5924  00608E  EF4C  F030         	goto	l114
  5925  006092                     u1100:
  5926  006092                     
  5927                           ;src/blueWork.c: 202:       LATBbits.LATB1 = 1;
  5928  006092  8284               	bsf	132,1,c	;volatile
  5929  006094  EF4D  F030         	goto	l2388
  5930  006098                     l114:
  5931                           
  5932                           ;src/blueWork.c: 204:       LATBbits.LATB1 = 0;
  5933  006098  9284               	bcf	132,1,c	;volatile
  5934  00609A                     l2388:
  5935                           
  5936                           ;src/blueWork.c: 206:    if ((colour & 0b00000010) == 0b00000010)
  5937  00609A  A244               	btfss	ledColour@colour^0,1,c
  5938  00609C  EF52  F030         	goto	u1111
  5939  0060A0  EF54  F030         	goto	u1110
  5940  0060A4                     u1111:
  5941  0060A4  EF57  F030         	goto	l116
  5942  0060A8                     u1110:
  5943  0060A8                     
  5944                           ;src/blueWork.c: 207:       LATBbits.LATB2 = 1;
  5945  0060A8  8484               	bsf	132,2,c	;volatile
  5946  0060AA  EF58  F030         	goto	l2392
  5947  0060AE                     l116:
  5948                           
  5949                           ;src/blueWork.c: 209:       LATBbits.LATB2 = 0;
  5950  0060AE  9484               	bcf	132,2,c	;volatile
  5951  0060B0                     l2392:
  5952                           
  5953                           ;src/blueWork.c: 211:    if ((colour & 0b00000100) == 0b00000100)
  5954  0060B0  A444               	btfss	ledColour@colour^0,2,c
  5955  0060B2  EF5D  F030         	goto	u1121
  5956  0060B6  EF5F  F030         	goto	u1120
  5957  0060BA                     u1121:
  5958  0060BA  EF62  F030         	goto	l118
  5959  0060BE                     u1120:
  5960  0060BE                     
  5961                           ;src/blueWork.c: 212:       LATBbits.LATB3 = 1;
  5962  0060BE  8684               	bsf	132,3,c	;volatile
  5963  0060C0  EF63  F030         	goto	l120
  5964  0060C4                     l118:
  5965                           
  5966                           ;src/blueWork.c: 214:       LATBbits.LATB3 = 0;
  5967  0060C4  9684               	bcf	132,3,c	;volatile
  5968  0060C6                     l120:
  5969  0060C6  0012               	return		;funcret
  5970  0060C8                     __end_of_ledColour:
  5971                           	callstack 0
  5972                           
  5973 ;; *************** function _WriteEEByte *****************
  5974 ;; Defined at:
  5975 ;;		line 233 in file "src/blueWork.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  address         2    3[COMRAM] unsigned short 
  5978 ;;  data            1    5[COMRAM] unsigned char 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;		None
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, status,0
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5990 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5993 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5994 ;;Total ram usage:        5 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    2
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_calibrationStow
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text24
  6005  00603A                     __ptext24:
  6006                           	callstack 0
  6007  00603A                     _WriteEEByte:
  6008                           	callstack 24
  6009  00603A                     
  6010                           ;src/blueWork.c: 233: void WriteEEByte(uint16 address, uint8 data);src/blueWork.c: 234: 
      +                          {;src/blueWork.c: 236:    NVMCON1bits.NVMREG0 = 0;
  6011  00603A  9C81               	bcf	129,6,c	;volsfr
  6012                           
  6013                           ;src/blueWork.c: 237:    NVMCON1bits.NVMREG1 = 0;
  6014  00603C  9E81               	bcf	129,7,c	;volsfr
  6015                           
  6016                           ;src/blueWork.c: 239:    NVMADRL = (uint8)(address & 0x00FF);
  6017  00603E  C044  FF7E         	movff	WriteEEByte@address,3966	;volatile
  6018  006042                     
  6019                           ;src/blueWork.c: 240:    NVMADRH = (uint8)((address >> 2) & 0x0003);
  6020  006042  C044  F047         	movff	WriteEEByte@address,??_WriteEEByte
  6021  006046  C045  F048         	movff	WriteEEByte@address+1,??_WriteEEByte+1
  6022  00604A  90D8               	bcf	status,0,c
  6023  00604C  3248               	rrcf	(??_WriteEEByte+1)^0,f,c
  6024  00604E  3247               	rrcf	??_WriteEEByte^0,f,c
  6025  006050  90D8               	bcf	status,0,c
  6026  006052  3248               	rrcf	(??_WriteEEByte+1)^0,f,c
  6027  006054  3247               	rrcf	??_WriteEEByte^0,f,c
  6028  006056  5047               	movf	??_WriteEEByte^0,w,c
  6029  006058  0B03               	andlw	3
  6030  00605A  6E7F               	movwf	127,c	;volatile
  6031  00605C                     
  6032                           ;src/blueWork.c: 242:    NVMDAT = data;
  6033  00605C  C046  FF80         	movff	WriteEEByte@data,3968	;volatile
  6034  006060                     
  6035                           ;src/blueWork.c: 244:    NVMCON1bits.WREN = 1;
  6036  006060  8481               	bsf	129,2,c	;volsfr
  6037  006062                     
  6038                           ;src/blueWork.c: 246:    INTCONbits.GIE = 0;
  6039  006062  9EF2               	bcf	242,7,c	;volatile
  6040  006064                     
  6041                           ;src/blueWork.c: 248:    NVMCON2 = 0x55;
  6042  006064  0E55               	movlw	85
  6043  006066  6E82               	movwf	130,c	;volsfr
  6044  006068                     
  6045                           ;src/blueWork.c: 249:    NVMCON2 = 0xAA;
  6046  006068  0EAA               	movlw	170
  6047  00606A  6E82               	movwf	130,c	;volsfr
  6048  00606C                     
  6049                           ;src/blueWork.c: 251:    NVMCON1bits.WR = 1;
  6050  00606C  8281               	bsf	129,1,c	;volsfr
  6051  00606E                     l126:
  6052                           
  6053                           ;src/blueWork.c: 252:    while (NVMCON1bits.WR == 1)
  6054  00606E  B281               	btfsc	129,1,c	;volsfr
  6055  006070  EF3C  F030         	goto	u1131
  6056  006074  EF3E  F030         	goto	u1130
  6057  006078                     u1131:
  6058  006078  EF37  F030         	goto	l126
  6059  00607C                     u1130:
  6060  00607C                     
  6061                           ;src/blueWork.c: 256:    INTCONbits.GIE = 1;
  6062  00607C  8EF2               	bsf	242,7,c	;volatile
  6063                           
  6064                           ;src/blueWork.c: 258:    NVMCON1bits.WREN = 0;
  6065  00607E  9481               	bcf	129,2,c	;volsfr
  6066  006080  0012               	return		;funcret
  6067  006082                     __end_of_WriteEEByte:
  6068                           	callstack 0
  6069                           
  6070 ;; *************** function _XBLE_state_manage *****************
  6071 ;; Defined at:
  6072 ;;		line 598 in file "src/blueWork.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;		None
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  n               1    0        unsigned char 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1    wreg      void 
  6079 ;; Registers used:
  6080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6090 ;;Total ram usage:        2 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:    5
  6093 ;; This function calls:
  6094 ;;		_Xble_cmd_attributes_write
  6095 ;;		_Xble_cmd_gap_set_mode
  6096 ;;		_bleReset
  6097 ;;		_readDataSensor
  6098 ;; This function is called by:
  6099 ;;		_main
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text25
  6104  0056A6                     __ptext25:
  6105                           	callstack 0
  6106  0056A6                     _XBLE_state_manage:
  6107                           	callstack 25
  6108  0056A6                     
  6109                           ;src/blueWork.c: 600:    unsigned char n;;src/blueWork.c: 601:    static uint8 value = 0
      +                          ;;src/blueWork.c: 602:    static uint8 countId = 0;;src/blueWork.c: 603:    static uint1
      +                          6 dataId = 0;;src/blueWork.c: 604:    static uint8 historyLsb[8] = {0xFF, 0xFF, 0xFF, 0x
      +                          FF, 0xFF, 0xFF, 0xFF, 0xFF};;src/blueWork.c: 605:    static uint8 historyMsb[8] = {0xFF,
      +                           0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};;src/blueWork.c: 607:    switch(blueState)
  6110  0056A6  EF9D  F02C         	goto	l2972
  6111  0056AA                     l2816:
  6112                           
  6113                           ;src/blueWork.c: 611:       {;src/blueWork.c: 612:          if (blueTimer > 20)
  6114  0056AA  5058               	movf	(_blueTimer+1)^0,w,c	;volatile
  6115  0056AC  E109               	bnz	u1640
  6116  0056AE  0E15               	movlw	21
  6117  0056B0  5C57               	subwf	_blueTimer^0,w,c	;volatile
  6118  0056B2  A0D8               	btfss	status,0,c
  6119  0056B4  EF5E  F02B         	goto	u1641
  6120  0056B8  EF60  F02B         	goto	u1640
  6121  0056BC                     u1641:
  6122  0056BC  EFD2  F02C         	goto	l265
  6123  0056C0                     u1640:
  6124  0056C0                     l2818:
  6125                           
  6126                           ;src/blueWork.c: 613:             blueState = 1;
  6127  0056C0  0E01               	movlw	1
  6128  0056C2  6E5B               	movwf	_blueState^0,c	;volatile
  6129  0056C4  EFD2  F02C         	goto	l265
  6130  0056C8                     l2820:
  6131                           
  6132                           ;src/blueWork.c: 618:       {;src/blueWork.c: 619:          bleJustReset = 1;
  6133  0056C8  0E01               	movlw	1
  6134  0056CA  0100               	movlb	0	; () banked
  6135  0056CC  6FE4               	movwf	_bleJustReset& (0+255),b
  6136  0056CE                     
  6137                           ; BSR set to: 0
  6138                           ;src/blueWork.c: 620:          LATDbits.LATD2 = 1;
  6139  0056CE  8486               	bsf	134,2,c	;volatile
  6140  0056D0                     
  6141                           ; BSR set to: 0
  6142                           ;src/blueWork.c: 621:          bleReset(1);
  6143  0056D0  0E01               	movlw	1
  6144  0056D2  EC58  F031         	call	_bleReset
  6145  0056D6                     
  6146                           ;src/blueWork.c: 623:          blueTimer = 0;
  6147  0056D6  0E00               	movlw	0
  6148  0056D8  6E58               	movwf	(_blueTimer+1)^0,c	;volatile
  6149  0056DA  0E00               	movlw	0
  6150  0056DC  6E57               	movwf	_blueTimer^0,c	;volatile
  6151  0056DE                     
  6152                           ;src/blueWork.c: 624:          blueState = 2;
  6153  0056DE  0E02               	movlw	2
  6154  0056E0  6E5B               	movwf	_blueState^0,c	;volatile
  6155                           
  6156                           ;src/blueWork.c: 625:          break;
  6157  0056E2  EFD2  F02C         	goto	l265
  6158  0056E6                     l2830:
  6159                           
  6160                           ;src/blueWork.c: 629:       {;src/blueWork.c: 630:          if (blueTimer > 40)
  6161  0056E6  5058               	movf	(_blueTimer+1)^0,w,c	;volatile
  6162  0056E8  E109               	bnz	u1650
  6163  0056EA  0E29               	movlw	41
  6164  0056EC  5C57               	subwf	_blueTimer^0,w,c	;volatile
  6165  0056EE  A0D8               	btfss	status,0,c
  6166  0056F0  EF7C  F02B         	goto	u1651
  6167  0056F4  EF7E  F02B         	goto	u1650
  6168  0056F8                     u1651:
  6169  0056F8  EFD2  F02C         	goto	l265
  6170  0056FC                     u1650:
  6171  0056FC                     
  6172                           ;src/blueWork.c: 631:          {;src/blueWork.c: 632:             blueState = 0;
  6173  0056FC  0E00               	movlw	0
  6174  0056FE  6E5B               	movwf	_blueState^0,c	;volatile
  6175                           
  6176                           ;src/blueWork.c: 633:             blueTimer = 0;
  6177  005700  0E00               	movlw	0
  6178  005702  6E58               	movwf	(_blueTimer+1)^0,c	;volatile
  6179  005704  0E00               	movlw	0
  6180  005706  6E57               	movwf	_blueTimer^0,c	;volatile
  6181  005708                     
  6182                           ;src/blueWork.c: 634:             LATDbits.LATD2 = 0;
  6183  005708  9486               	bcf	134,2,c	;volatile
  6184  00570A                     
  6185                           ;src/blueWork.c: 635:             bleReset(0);
  6186  00570A  0E00               	movlw	0
  6187  00570C  EC58  F031         	call	_bleReset
  6188  005710  EFD2  F02C         	goto	l265
  6189  005714                     l2838:
  6190                           
  6191                           ;src/blueWork.c: 641:       {;src/blueWork.c: 642:          Xble_cmd_gap_set_mode();
  6192  005714  EC11  F031         	call	_Xble_cmd_gap_set_mode	;wreg free
  6193  005718                     
  6194                           ;src/blueWork.c: 643:          blueState = 4;
  6195  005718  0E04               	movlw	4
  6196  00571A  6E5B               	movwf	_blueState^0,c	;volatile
  6197  00571C                     l2842:
  6198                           
  6199                           ;src/blueWork.c: 644:          blueTimer = 0;
  6200  00571C  0E00               	movlw	0
  6201  00571E  6E58               	movwf	(_blueTimer+1)^0,c	;volatile
  6202  005720  0E00               	movlw	0
  6203  005722  6E57               	movwf	_blueTimer^0,c	;volatile
  6204                           
  6205                           ;src/blueWork.c: 645:          break;
  6206  005724  EFD2  F02C         	goto	l265
  6207  005728                     l2844:
  6208                           
  6209                           ;src/blueWork.c: 649:       {;src/blueWork.c: 650:          if (blueTimer > 20)
  6210  005728  5058               	movf	(_blueTimer+1)^0,w,c	;volatile
  6211  00572A  E109               	bnz	u1660
  6212  00572C  0E15               	movlw	21
  6213  00572E  5C57               	subwf	_blueTimer^0,w,c	;volatile
  6214  005730  A0D8               	btfss	status,0,c
  6215  005732  EF9D  F02B         	goto	u1661
  6216  005736  EF9F  F02B         	goto	u1660
  6217  00573A                     u1661:
  6218  00573A  EFD2  F02C         	goto	l265
  6219  00573E                     u1660:
  6220  00573E                     l2846:
  6221                           
  6222                           ;src/blueWork.c: 651:             blueState = 8;
  6223  00573E  0E08               	movlw	8
  6224  005740  6E5B               	movwf	_blueState^0,c	;volatile
  6225  005742  EFD2  F02C         	goto	l265
  6226  005746                     l2848:
  6227                           
  6228                           ;src/blueWork.c: 656:       {;src/blueWork.c: 657:          if (blueTimer > 200)
  6229  005746  5058               	movf	(_blueTimer+1)^0,w,c	;volatile
  6230  005748  E109               	bnz	u1670
  6231  00574A  0EC9               	movlw	201
  6232  00574C  5C57               	subwf	_blueTimer^0,w,c	;volatile
  6233  00574E  A0D8               	btfss	status,0,c
  6234  005750  EFAC  F02B         	goto	u1671
  6235  005754  EFAE  F02B         	goto	u1670
  6236  005758                     u1671:
  6237  005758  EFD2  F02C         	goto	l265
  6238  00575C                     u1670:
  6239  00575C  EF9F  F02B         	goto	l2846
  6240  005760                     l2852:
  6241                           
  6242                           ;src/blueWork.c: 663:       {;src/blueWork.c: 664:          if (blueTimer > 200)
  6243  005760  5058               	movf	(_blueTimer+1)^0,w,c	;volatile
  6244  005762  E109               	bnz	u1680
  6245  005764  0EC9               	movlw	201
  6246  005766  5C57               	subwf	_blueTimer^0,w,c	;volatile
  6247  005768  A0D8               	btfss	status,0,c
  6248  00576A  EFB9  F02B         	goto	u1681
  6249  00576E  EFBB  F02B         	goto	u1680
  6250  005772                     u1681:
  6251  005772  EFD2  F02C         	goto	l265
  6252  005776                     u1680:
  6253  005776  EF9F  F02B         	goto	l2846
  6254  00577A                     l2856:
  6255                           
  6256                           ;src/blueWork.c: 670:       {;src/blueWork.c: 672:          if (periodFlag == 1)
  6257  00577A  0100               	movlb	0	; () banked
  6258  00577C  05C5               	decf	_periodFlag& (0+255),w,b	;volatile
  6259  00577E  A4D8               	btfss	status,2,c
  6260  005780  EFC4  F02B         	goto	u1691
  6261  005784  EFC6  F02B         	goto	u1690
  6262  005788                     u1691:
  6263  005788  EF7B  F02C         	goto	l2956
  6264  00578C                     u1690:
  6265  00578C                     
  6266                           ; BSR set to: 0
  6267                           ;src/blueWork.c: 673:          {;src/blueWork.c: 674:             periodFlag = 0;
  6268  00578C  0E00               	movlw	0
  6269  00578E  6FC5               	movwf	_periodFlag& (0+255),b	;volatile
  6270  005790                     
  6271                           ; BSR set to: 0
  6272                           ;src/blueWork.c: 676:             readDataSensor(0b00001000);
  6273  005790  0E08               	movlw	8
  6274  005792  ECBB  F030         	call	_readDataSensor
  6275  005796                     
  6276                           ;src/blueWork.c: 678:             historyLsb[7] = historyLsb[6];
  6277  005796  C0E2  F0E3         	movff	XBLE_state_manage@historyLsb+6,XBLE_state_manage@historyLsb+7
  6278  00579A                     
  6279                           ;src/blueWork.c: 679:             historyMsb[7] = historyMsb[6];
  6280  00579A  C0DA  F0DB         	movff	XBLE_state_manage@historyMsb+6,XBLE_state_manage@historyMsb+7
  6281  00579E                     
  6282                           ;src/blueWork.c: 680:             historyLsb[6] = historyLsb[5];
  6283  00579E  C0E1  F0E2         	movff	XBLE_state_manage@historyLsb+5,XBLE_state_manage@historyLsb+6
  6284  0057A2                     
  6285                           ;src/blueWork.c: 681:             historyMsb[6] = historyMsb[5];
  6286  0057A2  C0D9  F0DA         	movff	XBLE_state_manage@historyMsb+5,XBLE_state_manage@historyMsb+6
  6287  0057A6                     
  6288                           ;src/blueWork.c: 682:             historyLsb[5] = historyLsb[4];
  6289  0057A6  C0E0  F0E1         	movff	XBLE_state_manage@historyLsb+4,XBLE_state_manage@historyLsb+5
  6290  0057AA                     
  6291                           ;src/blueWork.c: 683:             historyMsb[5] = historyMsb[4];
  6292  0057AA  C0D8  F0D9         	movff	XBLE_state_manage@historyMsb+4,XBLE_state_manage@historyMsb+5
  6293  0057AE                     
  6294                           ;src/blueWork.c: 684:             historyLsb[4] = historyLsb[3];
  6295  0057AE  C0DF  F0E0         	movff	XBLE_state_manage@historyLsb+3,XBLE_state_manage@historyLsb+4
  6296  0057B2                     
  6297                           ;src/blueWork.c: 685:             historyMsb[4] = historyMsb[3];
  6298  0057B2  C0D7  F0D8         	movff	XBLE_state_manage@historyMsb+3,XBLE_state_manage@historyMsb+4
  6299  0057B6                     
  6300                           ;src/blueWork.c: 686:             historyLsb[3] = historyLsb[2];
  6301  0057B6  C0DE  F0DF         	movff	XBLE_state_manage@historyLsb+2,XBLE_state_manage@historyLsb+3
  6302  0057BA                     
  6303                           ;src/blueWork.c: 687:             historyMsb[3] = historyMsb[2];
  6304  0057BA  C0D6  F0D7         	movff	XBLE_state_manage@historyMsb+2,XBLE_state_manage@historyMsb+3
  6305  0057BE                     
  6306                           ;src/blueWork.c: 688:             historyLsb[2] = historyLsb[1];
  6307  0057BE  C0DD  F0DE         	movff	XBLE_state_manage@historyLsb+1,XBLE_state_manage@historyLsb+2
  6308  0057C2                     
  6309                           ;src/blueWork.c: 689:             historyMsb[2] = historyMsb[1];
  6310  0057C2  C0D5  F0D6         	movff	XBLE_state_manage@historyMsb+1,XBLE_state_manage@historyMsb+2
  6311  0057C6                     
  6312                           ;src/blueWork.c: 690:             historyLsb[1] = historyLsb[0];
  6313  0057C6  C0DC  F0DD         	movff	XBLE_state_manage@historyLsb,XBLE_state_manage@historyLsb+1
  6314  0057CA                     
  6315                           ;src/blueWork.c: 691:             historyMsb[1] = historyMsb[0];
  6316  0057CA  C0D4  F0D5         	movff	XBLE_state_manage@historyMsb,XBLE_state_manage@historyMsb+1
  6317  0057CE                     
  6318                           ;src/blueWork.c: 693:             historyLsb[0] = sensorLsb;
  6319  0057CE  C059  F0DC         	movff	_sensorLsb,XBLE_state_manage@historyLsb
  6320  0057D2                     
  6321                           ;src/blueWork.c: 694:             historyMsb[0] = sensorMsb;
  6322  0057D2  C05A  F0D4         	movff	_sensorMsb,XBLE_state_manage@historyMsb
  6323  0057D6                     
  6324                           ;src/blueWork.c: 696:             countId++;
  6325  0057D6  0100               	movlb	0	; () banked
  6326  0057D8  2BBF               	incf	XBLE_state_manage@countId& (0+255),f,b
  6327  0057DA                     
  6328                           ; BSR set to: 0
  6329                           ;src/blueWork.c: 698:             if (bleReady == 1)
  6330  0057DA  05C6               	decf	_bleReady& (0+255),w,b	;volatile
  6331  0057DC  A4D8               	btfss	status,2,c
  6332  0057DE  EFF3  F02B         	goto	u1701
  6333  0057E2  EFF5  F02B         	goto	u1700
  6334  0057E6                     u1701:
  6335  0057E6  EF7B  F02C         	goto	l2956
  6336  0057EA                     u1700:
  6337  0057EA                     
  6338                           ; BSR set to: 0
  6339                           ;src/blueWork.c: 699:             {;src/blueWork.c: 701:                blueTimer = 0;
  6340  0057EA  0E00               	movlw	0
  6341  0057EC  6E58               	movwf	(_blueTimer+1)^0,c	;volatile
  6342  0057EE  0E00               	movlw	0
  6343  0057F0  6E57               	movwf	_blueTimer^0,c	;volatile
  6344                           
  6345                           ;src/blueWork.c: 703:                datasOut[0] = 1;
  6346  0057F2  0E01               	movlw	1
  6347  0057F4  6F60               	movwf	_datasOut& (0+255),b
  6348  0057F6                     
  6349                           ; BSR set to: 0
  6350                           ;src/blueWork.c: 705:                datasOut[1] = historyMsb[0];
  6351  0057F6  C0D4  F061         	movff	XBLE_state_manage@historyMsb,_datasOut+1
  6352  0057FA                     
  6353                           ; BSR set to: 0
  6354                           ;src/blueWork.c: 706:                datasOut[2] = historyLsb[0];
  6355  0057FA  C0DC  F062         	movff	XBLE_state_manage@historyLsb,_datasOut+2
  6356  0057FE                     
  6357                           ; BSR set to: 0
  6358                           ;src/blueWork.c: 707:                datasOut[3] = historyMsb[1];
  6359  0057FE  C0D5  F063         	movff	XBLE_state_manage@historyMsb+1,_datasOut+3
  6360  005802                     
  6361                           ; BSR set to: 0
  6362                           ;src/blueWork.c: 708:                datasOut[4] = historyLsb[1];
  6363  005802  C0DD  F064         	movff	XBLE_state_manage@historyLsb+1,_datasOut+4
  6364  005806                     
  6365                           ; BSR set to: 0
  6366                           ;src/blueWork.c: 709:                datasOut[5] = historyMsb[2];
  6367  005806  C0D6  F065         	movff	XBLE_state_manage@historyMsb+2,_datasOut+5
  6368  00580A                     
  6369                           ; BSR set to: 0
  6370                           ;src/blueWork.c: 710:                datasOut[6] = historyLsb[2];
  6371  00580A  C0DE  F066         	movff	XBLE_state_manage@historyLsb+2,_datasOut+6
  6372  00580E                     
  6373                           ; BSR set to: 0
  6374                           ;src/blueWork.c: 711:                datasOut[7] = historyMsb[3];
  6375  00580E  C0D7  F067         	movff	XBLE_state_manage@historyMsb+3,_datasOut+7
  6376  005812                     
  6377                           ; BSR set to: 0
  6378                           ;src/blueWork.c: 712:                datasOut[8] = historyLsb[3];
  6379  005812  C0DF  F068         	movff	XBLE_state_manage@historyLsb+3,_datasOut+8
  6380  005816                     
  6381                           ; BSR set to: 0
  6382                           ;src/blueWork.c: 713:                datasOut[9] = historyMsb[4];
  6383  005816  C0D8  F069         	movff	XBLE_state_manage@historyMsb+4,_datasOut+9
  6384  00581A                     
  6385                           ; BSR set to: 0
  6386                           ;src/blueWork.c: 714:                datasOut[10] = historyLsb[4];
  6387  00581A  C0E0  F06A         	movff	XBLE_state_manage@historyLsb+4,_datasOut+10
  6388  00581E                     
  6389                           ; BSR set to: 0
  6390                           ;src/blueWork.c: 715:                datasOut[11] = historyMsb[5];
  6391  00581E  C0D9  F06B         	movff	XBLE_state_manage@historyMsb+5,_datasOut+11
  6392  005822                     
  6393                           ; BSR set to: 0
  6394                           ;src/blueWork.c: 716:                datasOut[12] = historyLsb[5];
  6395  005822  C0E1  F06C         	movff	XBLE_state_manage@historyLsb+5,_datasOut+12
  6396  005826                     
  6397                           ; BSR set to: 0
  6398                           ;src/blueWork.c: 717:                datasOut[13] = historyMsb[6];
  6399  005826  C0DA  F06D         	movff	XBLE_state_manage@historyMsb+6,_datasOut+13
  6400  00582A                     
  6401                           ; BSR set to: 0
  6402                           ;src/blueWork.c: 718:                datasOut[14] = historyLsb[6];
  6403  00582A  C0E2  F06E         	movff	XBLE_state_manage@historyLsb+6,_datasOut+14
  6404  00582E                     
  6405                           ; BSR set to: 0
  6406                           ;src/blueWork.c: 719:                datasOut[15] = historyMsb[7];
  6407  00582E  C0DB  F06F         	movff	XBLE_state_manage@historyMsb+7,_datasOut+15
  6408  005832                     
  6409                           ; BSR set to: 0
  6410                           ;src/blueWork.c: 720:                datasOut[16] = historyLsb[7];
  6411  005832  C0E3  F070         	movff	XBLE_state_manage@historyLsb+7,_datasOut+16
  6412  005836                     
  6413                           ; BSR set to: 0
  6414                           ;src/blueWork.c: 722:                datasOut[17] = dataId;
  6415  005836  C0B2  F071         	movff	XBLE_state_manage@dataId,_datasOut+17
  6416                           
  6417                           ;src/blueWork.c: 724:                switch(dataId)
  6418  00583A  EF43  F02C         	goto	l2946
  6419  00583E                     l252:
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;src/blueWork.c: 728:                   {;src/blueWork.c: 729:                      data
      +                          sOut[18] = autoCalibrationMsb;
  6423  00583E  C0C4  F072         	movff	_autoCalibrationMsb,_datasOut+18
  6424                           
  6425                           ;src/blueWork.c: 730:                      datasOut[19] = autoCalibrationLsb;
  6426  005842  C0C3  F073         	movff	_autoCalibrationLsb,_datasOut+19
  6427                           
  6428                           ;src/blueWork.c: 731:                      break;
  6429  005846  EF65  F02C         	goto	l2948
  6430  00584A                     l254:
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;src/blueWork.c: 735:                   {;src/blueWork.c: 736:                      data
      +                          sOut[18] = batteryVoltage;
  6434  00584A  C0C2  F072         	movff	_batteryVoltage,_datasOut+18	;volatile
  6435  00584E                     
  6436                           ; BSR set to: 0
  6437                           ;src/blueWork.c: 737:                      datasOut[19] = 1;
  6438  00584E  0E01               	movlw	1
  6439  005850  6F73               	movwf	(_datasOut+19)& (0+255),b
  6440                           
  6441                           ;src/blueWork.c: 738:                      break;
  6442  005852  EF65  F02C         	goto	l2948
  6443  005856                     l2936:
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;src/blueWork.c: 742:                   {;src/blueWork.c: 745:                      data
      +                          sOut[18] = 0;
  6447  005856  0E00               	movlw	0
  6448  005858  6F72               	movwf	(_datasOut+18)& (0+255),b
  6449                           
  6450                           ;src/blueWork.c: 746:                      datasOut[19] = 0;
  6451  00585A  0E00               	movlw	0
  6452  00585C  6F73               	movwf	(_datasOut+19)& (0+255),b
  6453                           
  6454                           ;src/blueWork.c: 747:                      break;
  6455  00585E  EF65  F02C         	goto	l2948
  6456  005862                     l2942:
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;src/blueWork.c: 769:                   {;src/blueWork.c: 770:                      data
      +                          sOut[18] = calibrationPointsMSB[dataId];
  6460  005862  0E90               	movlw	low _calibrationPointsMSB
  6461  005864  25B2               	addwf	XBLE_state_manage@dataId& (0+255),w,b
  6462  005866  6ED9               	movwf	fsr2l,c
  6463  005868  0E00               	movlw	high _calibrationPointsMSB
  6464  00586A  21B3               	addwfc	(XBLE_state_manage@dataId+1)& (0+255),w,b
  6465  00586C  6EDA               	movwf	fsr2h,c
  6466  00586E  50DF               	movf	indf2,w,c
  6467  005870  6F72               	movwf	(_datasOut+18)& (0+255),b
  6468                           
  6469                           ;src/blueWork.c: 771:                      datasOut[19] = calibrationPointsLSB[dataId];
  6470  005872  0E98               	movlw	low _calibrationPointsLSB
  6471  005874  25B2               	addwf	XBLE_state_manage@dataId& (0+255),w,b
  6472  005876  6ED9               	movwf	fsr2l,c
  6473  005878  0E00               	movlw	high _calibrationPointsLSB
  6474  00587A  21B3               	addwfc	(XBLE_state_manage@dataId+1)& (0+255),w,b
  6475  00587C  6EDA               	movwf	fsr2h,c
  6476  00587E  50DF               	movf	indf2,w,c
  6477  005880  6F73               	movwf	(_datasOut+19)& (0+255),b
  6478                           
  6479                           ;src/blueWork.c: 772:                      break;
  6480  005882  EF65  F02C         	goto	l2948
  6481  005886                     l2946:
  6482                           
  6483                           ; BSR set to: 0
  6484  005886  C0B2  F048         	movff	XBLE_state_manage@dataId,??_XBLE_state_manage
  6485  00588A  C0B3  F049         	movff	XBLE_state_manage@dataId+1,??_XBLE_state_manage+1
  6486                           
  6487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6488                           ; Switch size 1, requested type "simple"
  6489                           ; Number of cases is 1, Range of values is 0 to 0
  6490                           ; switch strategies available:
  6491                           ; Name         Instructions Cycles
  6492                           ; simple_byte            4     3 (average)
  6493                           ;	Chosen strategy is simple_byte
  6494  00588E  5049               	movf	(??_XBLE_state_manage+1)^0,w,c
  6495  005890  0A00               	xorlw	0	; case 0
  6496  005892  B4D8               	btfsc	status,2,c
  6497  005894  EF4E  F02C         	goto	l3724
  6498  005898  EF31  F02C         	goto	l2942
  6499  00589C                     l3724:
  6500                           
  6501                           ; BSR set to: 0
  6502                           ; Switch size 1, requested type "simple"
  6503                           ; Number of cases is 5, Range of values is 8 to 12
  6504                           ; switch strategies available:
  6505                           ; Name         Instructions Cycles
  6506                           ; simple_byte           16     9 (average)
  6507                           ;	Chosen strategy is simple_byte
  6508  00589C  5048               	movf	??_XBLE_state_manage^0,w,c
  6509  00589E  0A08               	xorlw	8	; case 8
  6510  0058A0  B4D8               	btfsc	status,2,c
  6511  0058A2  EF1F  F02C         	goto	l252
  6512  0058A6  0A01               	xorlw	1	; case 9
  6513  0058A8  B4D8               	btfsc	status,2,c
  6514  0058AA  EF25  F02C         	goto	l254
  6515  0058AE  0A03               	xorlw	3	; case 10
  6516  0058B0  B4D8               	btfsc	status,2,c
  6517  0058B2  EF2B  F02C         	goto	l2936
  6518  0058B6  0A01               	xorlw	1	; case 11
  6519  0058B8  B4D8               	btfsc	status,2,c
  6520  0058BA  EF2B  F02C         	goto	l2936
  6521  0058BE  0A07               	xorlw	7	; case 12
  6522  0058C0  B4D8               	btfsc	status,2,c
  6523  0058C2  EF2B  F02C         	goto	l2936
  6524  0058C6  EF31  F02C         	goto	l2942
  6525  0058CA                     l2948:
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;src/blueWork.c: 777:                if (++dataId >= 13)
  6529  0058CA  4BB2               	infsnz	XBLE_state_manage@dataId& (0+255),f,b
  6530  0058CC  2BB3               	incf	(XBLE_state_manage@dataId+1)& (0+255),f,b
  6531  0058CE  51B3               	movf	(XBLE_state_manage@dataId+1)& (0+255),w,b
  6532  0058D0  E109               	bnz	u1710
  6533  0058D2  0E0D               	movlw	13
  6534  0058D4  5DB2               	subwf	XBLE_state_manage@dataId& (0+255),w,b
  6535  0058D6  A0D8               	btfss	status,0,c
  6536  0058D8  EF70  F02C         	goto	u1711
  6537  0058DC  EF72  F02C         	goto	u1710
  6538  0058E0                     u1711:
  6539  0058E0  EF76  F02C         	goto	l2952
  6540  0058E4                     u1710:
  6541  0058E4                     
  6542                           ; BSR set to: 0
  6543                           ;src/blueWork.c: 778:                   dataId = 0;
  6544  0058E4  0E00               	movlw	0
  6545  0058E6  6FB3               	movwf	(XBLE_state_manage@dataId+1)& (0+255),b
  6546  0058E8  0E00               	movlw	0
  6547  0058EA  6FB2               	movwf	XBLE_state_manage@dataId& (0+255),b
  6548  0058EC                     l2952:
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;src/blueWork.c: 780:                Xble_cmd_attributes_write();
  6552  0058EC  EC76  F02F         	call	_Xble_cmd_attributes_write	;wreg free
  6553  0058F0                     
  6554                           ;src/blueWork.c: 782:                bleReady = 0;
  6555  0058F0  0E00               	movlw	0
  6556  0058F2  0100               	movlb	0	; () banked
  6557  0058F4  6FC6               	movwf	_bleReady& (0+255),b	;volatile
  6558  0058F6                     l2956:
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;src/blueWork.c: 787:          if (blueTimer > 200)
  6562  0058F6  5058               	movf	(_blueTimer+1)^0,w,c	;volatile
  6563  0058F8  E109               	bnz	u1720
  6564  0058FA  0EC9               	movlw	201
  6565  0058FC  5C57               	subwf	_blueTimer^0,w,c	;volatile
  6566  0058FE  A0D8               	btfss	status,0,c
  6567  005900  EF84  F02C         	goto	u1721
  6568  005904  EF86  F02C         	goto	u1720
  6569  005908                     u1721:
  6570  005908  EFD2  F02C         	goto	l265
  6571  00590C                     u1720:
  6572  00590C  EF9F  F02B         	goto	l2846
  6573  005910                     l261:
  6574                           
  6575                           ;src/blueWork.c: 795:       {;src/blueWork.c: 796:          LATDbits.LATD2 = 0;
  6576  005910  9486               	bcf	134,2,c	;volatile
  6577  005912                     
  6578                           ;src/blueWork.c: 797:          bleReset(0);
  6579  005912  0E00               	movlw	0
  6580  005914  EC58  F031         	call	_bleReset
  6581  005918                     
  6582                           ;src/blueWork.c: 798:          blueState = 9;
  6583  005918  0E09               	movlw	9
  6584  00591A  6E5B               	movwf	_blueState^0,c	;volatile
  6585  00591C  EF8E  F02B         	goto	l2842
  6586  005920                     l2966:
  6587                           
  6588                           ;src/blueWork.c: 804:       {;src/blueWork.c: 806:          if (blueTimer > 1)
  6589  005920  5058               	movf	(_blueTimer+1)^0,w,c	;volatile
  6590  005922  E109               	bnz	u1730
  6591  005924  0E02               	movlw	2
  6592  005926  5C57               	subwf	_blueTimer^0,w,c	;volatile
  6593  005928  A0D8               	btfss	status,0,c
  6594  00592A  EF99  F02C         	goto	u1731
  6595  00592E  EF9B  F02C         	goto	u1730
  6596  005932                     u1731:
  6597  005932  EFD2  F02C         	goto	l265
  6598  005936                     u1730:
  6599  005936  EF60  F02B         	goto	l2818
  6600  00593A                     l2972:
  6601  00593A  505B               	movf	_blueState^0,w,c	;volatile
  6602  00593C  6E48               	movwf	??_XBLE_state_manage^0,c
  6603  00593E  6A49               	clrf	(??_XBLE_state_manage+1)^0,c
  6604                           
  6605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6606                           ; Switch size 1, requested type "simple"
  6607                           ; Number of cases is 1, Range of values is 0 to 0
  6608                           ; switch strategies available:
  6609                           ; Name         Instructions Cycles
  6610                           ; simple_byte            4     3 (average)
  6611                           ;	Chosen strategy is simple_byte
  6612  005940  5049               	movf	(??_XBLE_state_manage+1)^0,w,c
  6613  005942  0A00               	xorlw	0	; case 0
  6614  005944  B4D8               	btfsc	status,2,c
  6615  005946  EFA7  F02C         	goto	l3726
  6616  00594A  EFD2  F02C         	goto	l265
  6617  00594E                     l3726:
  6618                           
  6619                           ; Switch size 1, requested type "simple"
  6620                           ; Number of cases is 10, Range of values is 0 to 9
  6621                           ; switch strategies available:
  6622                           ; Name         Instructions Cycles
  6623                           ; simple_byte           31    16 (average)
  6624                           ;	Chosen strategy is simple_byte
  6625  00594E  5048               	movf	??_XBLE_state_manage^0,w,c
  6626  005950  0A00               	xorlw	0	; case 0
  6627  005952  B4D8               	btfsc	status,2,c
  6628  005954  EF55  F02B         	goto	l2816
  6629  005958  0A01               	xorlw	1	; case 1
  6630  00595A  B4D8               	btfsc	status,2,c
  6631  00595C  EF64  F02B         	goto	l2820
  6632  005960  0A03               	xorlw	3	; case 2
  6633  005962  B4D8               	btfsc	status,2,c
  6634  005964  EF73  F02B         	goto	l2830
  6635  005968  0A01               	xorlw	1	; case 3
  6636  00596A  B4D8               	btfsc	status,2,c
  6637  00596C  EF8A  F02B         	goto	l2838
  6638  005970  0A07               	xorlw	7	; case 4
  6639  005972  B4D8               	btfsc	status,2,c
  6640  005974  EF94  F02B         	goto	l2844
  6641  005978  0A01               	xorlw	1	; case 5
  6642  00597A  B4D8               	btfsc	status,2,c
  6643  00597C  EFA3  F02B         	goto	l2848
  6644  005980  0A03               	xorlw	3	; case 6
  6645  005982  B4D8               	btfsc	status,2,c
  6646  005984  EFB0  F02B         	goto	l2852
  6647  005988  0A01               	xorlw	1	; case 7
  6648  00598A  B4D8               	btfsc	status,2,c
  6649  00598C  EFBD  F02B         	goto	l2856
  6650  005990  0A0F               	xorlw	15	; case 8
  6651  005992  B4D8               	btfsc	status,2,c
  6652  005994  EF88  F02C         	goto	l261
  6653  005998  0A01               	xorlw	1	; case 9
  6654  00599A  B4D8               	btfsc	status,2,c
  6655  00599C  EF90  F02C         	goto	l2966
  6656  0059A0  EFD2  F02C         	goto	l265
  6657  0059A4                     l265:
  6658  0059A4  0012               	return		;funcret
  6659  0059A6                     __end_of_XBLE_state_manage:
  6660                           	callstack 0
  6661                           
  6662 ;; *************** function _readDataSensor *****************
  6663 ;; Defined at:
  6664 ;;		line 133 in file "src/blueWork.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;  data            1    wreg     unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  data            1    6[COMRAM] unsigned char 
  6669 ;;  lsb             1    0        unsigned char 
  6670 ;;  msb             1    0        unsigned char 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  1    wreg      void 
  6673 ;; Registers used:
  6674 ;;		wreg, status,2, status,0, cstack
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6684 ;;Total ram usage:        1 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; Hardware stack levels required when called:    4
  6687 ;; This function calls:
  6688 ;;		_delay
  6689 ;;		_readSoftSpiData8
  6690 ;;		_shootSoftSpiData8
  6691 ;;		_waitForDrdy
  6692 ;; This function is called by:
  6693 ;;		_XBLE_state_manage
  6694 ;;		_main
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text26
  6699  006176                     __ptext26:
  6700                           	callstack 0
  6701  006176                     _readDataSensor:
  6702                           	callstack 26
  6703                           
  6704                           ;incstack = 0
  6705                           ;readDataSensor@data stored from wreg
  6706  006176  6E47               	movwf	readDataSensor@data^0,c
  6707  006178                     
  6708                           ;src/blueWork.c: 133: void readDataSensor(unsigned char data);src/blueWork.c: 134: {;src
      +                          /blueWork.c: 135:    unsigned char msb, lsb;;src/blueWork.c: 138:    delay();
  6709  006178  EC47  F031         	call	_delay	;wreg free
  6710  00617C                     
  6711                           ;src/blueWork.c: 139:    LATAbits.LATA4 = 0;
  6712  00617C  9883               	bcf	131,4,c	;volatile
  6713                           
  6714                           ;src/blueWork.c: 140:    delay();
  6715  00617E  EC47  F031         	call	_delay	;wreg free
  6716  006182                     
  6717                           ;src/blueWork.c: 141:    shootSoftSpiData8(data);
  6718  006182  5047               	movf	readDataSensor@data^0,w,c
  6719  006184  EC19  F02F         	call	_shootSoftSpiData8
  6720  006188                     
  6721                           ;src/blueWork.c: 142:    waitForDrdy();
  6722  006188  ECB7  F031         	call	_waitForDrdy	;wreg free
  6723                           
  6724                           ;src/blueWork.c: 143:    sensorMsb = readSoftSpiData8();
  6725  00618C  ECA3  F02F         	call	_readSoftSpiData8	;wreg free
  6726  006190  6E5A               	movwf	_sensorMsb^0,c
  6727                           
  6728                           ;src/blueWork.c: 144:    sensorLsb = readSoftSpiData8();
  6729  006192  ECA3  F02F         	call	_readSoftSpiData8	;wreg free
  6730  006196  6E59               	movwf	_sensorLsb^0,c
  6731  006198                     
  6732                           ;src/blueWork.c: 145:    delay();
  6733  006198  EC47  F031         	call	_delay	;wreg free
  6734  00619C                     
  6735                           ;src/blueWork.c: 146:    LATAbits.LATA4 = 1;
  6736  00619C  8883               	bsf	131,4,c	;volatile
  6737  00619E                     
  6738                           ;src/blueWork.c: 147:    delay();
  6739  00619E  EC47  F031         	call	_delay	;wreg free
  6740  0061A2  0012               	return		;funcret
  6741  0061A4                     __end_of_readDataSensor:
  6742                           	callstack 0
  6743                           
  6744 ;; *************** function _waitForDrdy *****************
  6745 ;; Defined at:
  6746 ;;		line 101 in file "src/blueWork.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;		None
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;		None
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      void 
  6753 ;; Registers used:
  6754 ;;		None
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6764 ;;Total ram usage:        0 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; Hardware stack levels required when called:    2
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_readDataSensor
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text27
  6775  00636E                     __ptext27:
  6776                           	callstack 0
  6777  00636E                     _waitForDrdy:
  6778                           	callstack 27
  6779  00636E                     l89:
  6780                           
  6781                           ;src/blueWork.c: 103:    while (PORTAbits.RA5 == 1)
  6782  00636E  BA8D               	btfsc	141,5,c	;volatile
  6783  006370  EFBC  F031         	goto	u1171
  6784  006374  EFBE  F031         	goto	u1170
  6785  006378                     u1171:
  6786  006378  EFB7  F031         	goto	l89
  6787  00637C                     u1170:
  6788  00637C  0012               	return		;funcret
  6789  00637E                     __end_of_waitForDrdy:
  6790                           	callstack 0
  6791                           
  6792 ;; *************** function _shootSoftSpiData8 *****************
  6793 ;; Defined at:
  6794 ;;		line 76 in file "src/blueWork.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  data            1    wreg     unsigned char 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  data            1    3[COMRAM] unsigned char 
  6799 ;;  shift           1    5[COMRAM] unsigned char 
  6800 ;;  n               1    4[COMRAM] unsigned char 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      void 
  6803 ;; Registers used:
  6804 ;;		wreg, status,2, status,0, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6811 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6813 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6814 ;;Total ram usage:        3 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:    3
  6817 ;; This function calls:
  6818 ;;		_delay
  6819 ;; This function is called by:
  6820 ;;		_readDataSensor
  6821 ;;		_setupADS1120
  6822 ;;		_readAllADS1120configRegisters
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text28
  6827  005E32                     __ptext28:
  6828                           	callstack 0
  6829  005E32                     _shootSoftSpiData8:
  6830                           	callstack 26
  6831                           
  6832                           ;incstack = 0
  6833                           ;shootSoftSpiData8@data stored from wreg
  6834  005E32  6E44               	movwf	shootSoftSpiData8@data^0,c
  6835  005E34                     
  6836                           ;src/blueWork.c: 76: void shootSoftSpiData8(unsigned char data);src/blueWork.c: 77: {;sr
      +                          c/blueWork.c: 78:    unsigned char n;;src/blueWork.c: 79:    unsigned char shift;;src/bl
      +                          ueWork.c: 81:    shift = 0b10000000;
  6837  005E34  0E80               	movlw	128
  6838  005E36  6E46               	movwf	shootSoftSpiData8@shift^0,c
  6839                           
  6840                           ;src/blueWork.c: 82:    for (n = 0 ; n < 8 ; n++)
  6841  005E38  0E00               	movlw	0
  6842  005E3A  6E45               	movwf	shootSoftSpiData8@n^0,c
  6843  005E3C                     l2448:
  6844                           
  6845                           ;src/blueWork.c: 83:    {;src/blueWork.c: 84:       delay();
  6846  005E3C  EC47  F031         	call	_delay	;wreg free
  6847  005E40                     
  6848                           ;src/blueWork.c: 85:       if ((data & shift) == shift)
  6849  005E40  5044               	movf	shootSoftSpiData8@data^0,w,c
  6850  005E42  1446               	andwf	shootSoftSpiData8@shift^0,w,c
  6851  005E44  1846               	xorwf	shootSoftSpiData8@shift^0,w,c
  6852  005E46  A4D8               	btfss	status,2,c
  6853  005E48  EF28  F02F         	goto	u1151
  6854  005E4C  EF2A  F02F         	goto	u1150
  6855  005E50                     u1151:
  6856  005E50  EF2D  F02F         	goto	l84
  6857  005E54                     u1150:
  6858  005E54                     
  6859                           ;src/blueWork.c: 86:          LATAbits.LATA2 = 1;
  6860  005E54  8483               	bsf	131,2,c	;volatile
  6861  005E56  EF2E  F02F         	goto	l2454
  6862  005E5A                     l84:
  6863                           
  6864                           ;src/blueWork.c: 88:          LATAbits.LATA2 = 0;
  6865  005E5A  9483               	bcf	131,2,c	;volatile
  6866  005E5C                     l2454:
  6867                           
  6868                           ;src/blueWork.c: 89:      delay();
  6869  005E5C  EC47  F031         	call	_delay	;wreg free
  6870  005E60                     
  6871                           ;src/blueWork.c: 90:      LATAbits.LATA3 = 1;
  6872  005E60  8683               	bsf	131,3,c	;volatile
  6873  005E62                     
  6874                           ;src/blueWork.c: 91:      shift = (unsigned char)(shift >> 1);
  6875  005E62  90D8               	bcf	status,0,c
  6876  005E64  3046               	rrcf	shootSoftSpiData8@shift^0,w,c
  6877  005E66  6E46               	movwf	shootSoftSpiData8@shift^0,c
  6878  005E68                     
  6879                           ;src/blueWork.c: 92:      delay();
  6880  005E68  EC47  F031         	call	_delay	;wreg free
  6881  005E6C                     
  6882                           ;src/blueWork.c: 93:      LATAbits.LATA3 = 0;
  6883  005E6C  9683               	bcf	131,3,c	;volatile
  6884  005E6E                     
  6885                           ;src/blueWork.c: 94:      delay();
  6886  005E6E  EC47  F031         	call	_delay	;wreg free
  6887  005E72                     
  6888                           ;src/blueWork.c: 95:    }
  6889  005E72  2A45               	incf	shootSoftSpiData8@n^0,f,c
  6890  005E74  0E07               	movlw	7
  6891  005E76  6445               	cpfsgt	shootSoftSpiData8@n^0,c
  6892  005E78  EF40  F02F         	goto	u1161
  6893  005E7C  EF42  F02F         	goto	u1160
  6894  005E80                     u1161:
  6895  005E80  EF1E  F02F         	goto	l2448
  6896  005E84                     u1160:
  6897  005E84                     
  6898                           ;src/blueWork.c: 96:    delay();
  6899  005E84  EC47  F031         	call	_delay	;wreg free
  6900  005E88                     
  6901                           ;src/blueWork.c: 97:    LATAbits.LATA2 = 0;
  6902  005E88  9483               	bcf	131,2,c	;volatile
  6903                           
  6904                           ;src/blueWork.c: 98:    delay();
  6905  005E8A  EC47  F031         	call	_delay	;wreg free
  6906  005E8E  0012               	return		;funcret
  6907  005E90                     __end_of_shootSoftSpiData8:
  6908                           	callstack 0
  6909                           
  6910 ;; *************** function _readSoftSpiData8 *****************
  6911 ;; Defined at:
  6912 ;;		line 108 in file "src/blueWork.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  shift           1    5[COMRAM] unsigned char 
  6917 ;;  build           1    4[COMRAM] unsigned char 
  6918 ;;  n               1    3[COMRAM] unsigned char 
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      unsigned char 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2, status,0, cstack
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6931 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6932 ;;Total ram usage:        3 bytes
  6933 ;; Hardware stack levels used:    1
  6934 ;; Hardware stack levels required when called:    3
  6935 ;; This function calls:
  6936 ;;		_delay
  6937 ;; This function is called by:
  6938 ;;		_readDataSensor
  6939 ;;		_readAllADS1120configRegisters
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text29
  6944  005F46                     __ptext29:
  6945                           	callstack 0
  6946  005F46                     _readSoftSpiData8:
  6947                           	callstack 26
  6948  005F46                     
  6949                           ;src/blueWork.c: 110:    unsigned char n, build, shift;;src/blueWork.c: 112:    delay();
  6950  005F46  EC47  F031         	call	_delay	;wreg free
  6951  005F4A                     
  6952                           ;src/blueWork.c: 113:    LATAbits.LATA2 = 0;
  6953  005F4A  9483               	bcf	131,2,c	;volatile
  6954  005F4C                     
  6955                           ;src/blueWork.c: 114:    build = 0;
  6956  005F4C  0E00               	movlw	0
  6957  005F4E  6E45               	movwf	readSoftSpiData8@build^0,c
  6958  005F50                     
  6959                           ;src/blueWork.c: 115:    shift = 0b10000000;
  6960  005F50  0E80               	movlw	128
  6961  005F52  6E46               	movwf	readSoftSpiData8@shift^0,c
  6962  005F54                     
  6963                           ;src/blueWork.c: 116:    for (n = 0 ; n < 8 ; n++)
  6964  005F54  0E00               	movlw	0
  6965  005F56  6E44               	movwf	readSoftSpiData8@n^0,c
  6966  005F58                     l2490:
  6967                           
  6968                           ;src/blueWork.c: 117:    {;src/blueWork.c: 118:       delay();
  6969  005F58  EC47  F031         	call	_delay	;wreg free
  6970  005F5C                     
  6971                           ;src/blueWork.c: 119:       LATAbits.LATA3 = 1;
  6972  005F5C  8683               	bsf	131,3,c	;volatile
  6973                           
  6974                           ;src/blueWork.c: 120:       delay();
  6975  005F5E  EC47  F031         	call	_delay	;wreg free
  6976  005F62                     
  6977                           ;src/blueWork.c: 121:       if (PORTAbits.RA1 == 1)
  6978  005F62  A28D               	btfss	141,1,c	;volatile
  6979  005F64  EFB6  F02F         	goto	u1181
  6980  005F68  EFB8  F02F         	goto	u1180
  6981  005F6C                     u1181:
  6982  005F6C  EFBB  F02F         	goto	l97
  6983  005F70                     u1180:
  6984  005F70                     
  6985                           ;src/blueWork.c: 122:          build = (unsigned char)(build | shift);
  6986  005F70  5045               	movf	readSoftSpiData8@build^0,w,c
  6987  005F72  1046               	iorwf	readSoftSpiData8@shift^0,w,c
  6988  005F74  6E45               	movwf	readSoftSpiData8@build^0,c
  6989  005F76                     l97:
  6990                           
  6991                           ;src/blueWork.c: 123:       shift = (unsigned char)(shift >> 1);
  6992  005F76  90D8               	bcf	status,0,c
  6993  005F78  3046               	rrcf	readSoftSpiData8@shift^0,w,c
  6994  005F7A  6E46               	movwf	readSoftSpiData8@shift^0,c
  6995  005F7C                     
  6996                           ;src/blueWork.c: 124:       delay();
  6997  005F7C  EC47  F031         	call	_delay	;wreg free
  6998  005F80                     
  6999                           ;src/blueWork.c: 125:       LATAbits.LATA3 = 0;
  7000  005F80  9683               	bcf	131,3,c	;volatile
  7001  005F82                     
  7002                           ;src/blueWork.c: 126:       delay();
  7003  005F82  EC47  F031         	call	_delay	;wreg free
  7004  005F86                     
  7005                           ;src/blueWork.c: 127:    }
  7006  005F86  2A44               	incf	readSoftSpiData8@n^0,f,c
  7007  005F88  0E07               	movlw	7
  7008  005F8A  6444               	cpfsgt	readSoftSpiData8@n^0,c
  7009  005F8C  EFCA  F02F         	goto	u1191
  7010  005F90  EFCC  F02F         	goto	u1190
  7011  005F94                     u1191:
  7012  005F94  EFAC  F02F         	goto	l2490
  7013  005F98                     u1190:
  7014  005F98                     
  7015                           ;src/blueWork.c: 129:    return build;
  7016  005F98  5045               	movf	readSoftSpiData8@build^0,w,c
  7017  005F9A  0012               	return		;funcret
  7018  005F9C                     __end_of_readSoftSpiData8:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function _delay *****************
  7022 ;; Defined at:
  7023 ;;		line 56 in file "src/blueWork.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;		None
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		None
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7041 ;;Total ram usage:        0 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:    2
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_shootSoftSpiData8
  7048 ;;		_readSoftSpiData8
  7049 ;;		_readDataSensor
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           	psect	text30
  7054  00628E                     __ptext30:
  7055                           	callstack 0
  7056  00628E                     _delay:
  7057                           	callstack 26
  7058  00628E                     
  7059                           ;src/blueWork.c: 58:    __nop();
  7060  00628E  F000               	nop	
  7061                           
  7062                           ;src/blueWork.c: 59:    __nop();
  7063  006290  F000               	nop	
  7064                           
  7065                           ;src/blueWork.c: 60:    __nop();
  7066  006292  F000               	nop	
  7067                           
  7068                           ;src/blueWork.c: 61:    __nop();
  7069  006294  F000               	nop	
  7070                           
  7071                           ;src/blueWork.c: 62:    __nop();
  7072  006296  F000               	nop	
  7073                           
  7074                           ;src/blueWork.c: 63:    __nop();
  7075  006298  F000               	nop	
  7076                           
  7077                           ;src/blueWork.c: 64:    __nop();
  7078  00629A  F000               	nop	
  7079                           
  7080                           ;src/blueWork.c: 65:    __nop();
  7081  00629C  F000               	nop	
  7082                           
  7083                           ;src/blueWork.c: 66:    __nop();
  7084  00629E  F000               	nop	
  7085                           
  7086                           ;src/blueWork.c: 67:    __nop();
  7087  0062A0  F000               	nop	
  7088                           
  7089                           ;src/blueWork.c: 68:    __nop();
  7090  0062A2  F000               	nop	
  7091                           
  7092                           ;src/blueWork.c: 69:    __nop();
  7093  0062A4  F000               	nop	
  7094                           
  7095                           ;src/blueWork.c: 70:    __nop();
  7096  0062A6  F000               	nop	
  7097                           
  7098                           ;src/blueWork.c: 71:    __nop();
  7099  0062A8  F000               	nop	
  7100                           
  7101                           ;src/blueWork.c: 72:    __nop();
  7102  0062AA  F000               	nop	
  7103                           
  7104                           ;src/blueWork.c: 73:    __nop();
  7105  0062AC  F000               	nop	
  7106  0062AE  0012               	return		;funcret
  7107  0062B0                     __end_of_delay:
  7108                           	callstack 0
  7109                           
  7110 ;; *************** function _bleReset *****************
  7111 ;; Defined at:
  7112 ;;		line 273 in file "src/blueWork.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;  reset           1    wreg     unsigned char 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  reset           1    3[COMRAM] unsigned char 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  1    wreg      void 
  7119 ;; Registers used:
  7120 ;;		wreg, status,2, status,0
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7130 ;;Total ram usage:        1 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    2
  7133 ;; This function calls:
  7134 ;;		Nothing
  7135 ;; This function is called by:
  7136 ;;		_XBLE_state_manage
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text31
  7141  0062B0                     __ptext31:
  7142                           	callstack 0
  7143  0062B0                     _bleReset:
  7144                           	callstack 27
  7145                           
  7146                           ;incstack = 0
  7147                           ;bleReset@reset stored from wreg
  7148  0062B0  6E44               	movwf	bleReset@reset^0,c
  7149  0062B2                     
  7150                           ;src/blueWork.c: 273: void bleReset(unsigned char reset);src/blueWork.c: 274: {;src/blue
      +                          Work.c: 275:    if (reset == 1)
  7151  0062B2  0444               	decf	bleReset@reset^0,w,c
  7152  0062B4  A4D8               	btfss	status,2,c
  7153  0062B6  EF5F  F031         	goto	u1491
  7154  0062BA  EF61  F031         	goto	u1490
  7155  0062BE                     u1491:
  7156  0062BE  EF64  F031         	goto	l137
  7157  0062C2                     u1490:
  7158  0062C2                     
  7159                           ;src/blueWork.c: 276:       LATDbits.LATD2 = 1;
  7160  0062C2  8486               	bsf	134,2,c	;volatile
  7161  0062C4  EF65  F031         	goto	l139
  7162  0062C8                     l137:
  7163                           
  7164                           ;src/blueWork.c: 278:       LATDbits.LATD2 = 0;
  7165  0062C8  9486               	bcf	134,2,c	;volatile
  7166  0062CA                     l139:
  7167  0062CA  0012               	return		;funcret
  7168  0062CC                     __end_of_bleReset:
  7169                           	callstack 0
  7170                           
  7171 ;; *************** function _Xble_cmd_gap_set_mode *****************
  7172 ;; Defined at:
  7173 ;;		line 588 in file "src/blueWork.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;		None
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		wreg, status,2, cstack
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7191 ;;Total ram usage:        0 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:    4
  7194 ;; This function calls:
  7195 ;;		_shootUart1Data
  7196 ;; This function is called by:
  7197 ;;		_XBLE_state_manage
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text32
  7202  006222                     __ptext32:
  7203                           	callstack 0
  7204  006222                     _Xble_cmd_gap_set_mode:
  7205                           	callstack 25
  7206  006222                     
  7207                           ;src/blueWork.c: 590:    shootUart1Data(0);
  7208  006222  0E00               	movlw	0
  7209  006224  ECA0  F030         	call	_shootUart1Data
  7210                           
  7211                           ;src/blueWork.c: 591:    shootUart1Data(2);
  7212  006228  0E02               	movlw	2
  7213  00622A  ECA0  F030         	call	_shootUart1Data
  7214                           
  7215                           ;src/blueWork.c: 592:    shootUart1Data(6);
  7216  00622E  0E06               	movlw	6
  7217  006230  ECA0  F030         	call	_shootUart1Data
  7218                           
  7219                           ;src/blueWork.c: 593:    shootUart1Data(1);
  7220  006234  0E01               	movlw	1
  7221  006236  ECA0  F030         	call	_shootUart1Data
  7222                           
  7223                           ;src/blueWork.c: 594:    shootUart1Data(2);
  7224  00623A  0E02               	movlw	2
  7225  00623C  ECA0  F030         	call	_shootUart1Data
  7226                           
  7227                           ;src/blueWork.c: 595:    shootUart1Data(2);
  7228  006240  0E02               	movlw	2
  7229  006242  ECA0  F030         	call	_shootUart1Data
  7230  006246  0012               	return		;funcret
  7231  006248                     __end_of_Xble_cmd_gap_set_mode:
  7232                           	callstack 0
  7233                           
  7234 ;; *************** function _Xble_cmd_attributes_write *****************
  7235 ;; Defined at:
  7236 ;;		line 570 in file "src/blueWork.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;		None
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;  n               1    4[COMRAM] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      void 
  7243 ;; Registers used:
  7244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7254 ;;Total ram usage:        1 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:    4
  7257 ;; This function calls:
  7258 ;;		_shootUart1Data
  7259 ;; This function is called by:
  7260 ;;		_XBLE_state_manage
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text33
  7265  005EEC                     __ptext33:
  7266                           	callstack 0
  7267  005EEC                     _Xble_cmd_attributes_write:
  7268                           	callstack 25
  7269  005EEC                     
  7270                           ;src/blueWork.c: 572:    uint8 n;;src/blueWork.c: 574:    shootUart1Data(0);
  7271  005EEC  0E00               	movlw	0
  7272  005EEE  ECA0  F030         	call	_shootUart1Data
  7273                           
  7274                           ;src/blueWork.c: 575:    shootUart1Data(24);
  7275  005EF2  0E18               	movlw	24
  7276  005EF4  ECA0  F030         	call	_shootUart1Data
  7277                           
  7278                           ;src/blueWork.c: 576:    shootUart1Data(2);
  7279  005EF8  0E02               	movlw	2
  7280  005EFA  ECA0  F030         	call	_shootUart1Data
  7281                           
  7282                           ;src/blueWork.c: 577:    shootUart1Data(0);
  7283  005EFE  0E00               	movlw	0
  7284  005F00  ECA0  F030         	call	_shootUart1Data
  7285                           
  7286                           ;src/blueWork.c: 579:    shootUart1Data(8);
  7287  005F04  0E08               	movlw	8
  7288  005F06  ECA0  F030         	call	_shootUart1Data
  7289                           
  7290                           ;src/blueWork.c: 580:    shootUart1Data(0);
  7291  005F0A  0E00               	movlw	0
  7292  005F0C  ECA0  F030         	call	_shootUart1Data
  7293                           
  7294                           ;src/blueWork.c: 581:    shootUart1Data(0);
  7295  005F10  0E00               	movlw	0
  7296  005F12  ECA0  F030         	call	_shootUart1Data
  7297                           
  7298                           ;src/blueWork.c: 582:    shootUart1Data(20);
  7299  005F16  0E14               	movlw	20
  7300  005F18  ECA0  F030         	call	_shootUart1Data
  7301  005F1C                     
  7302                           ;src/blueWork.c: 584:    for (n = 0 ; n < 20 ; n++)
  7303  005F1C  0E00               	movlw	0
  7304  005F1E  6E45               	movwf	Xble_cmd_attributes_write@n^0,c
  7305  005F20                     l2756:
  7306                           
  7307                           ;src/blueWork.c: 585:       shootUart1Data(datasOut[n]);
  7308  005F20  0E60               	movlw	low _datasOut
  7309  005F22  2445               	addwf	Xble_cmd_attributes_write@n^0,w,c
  7310  005F24  6ED9               	movwf	fsr2l,c
  7311  005F26  6ADA               	clrf	fsr2h,c
  7312  005F28  0E00               	movlw	high _datasOut
  7313  005F2A  22DA               	addwfc	fsr2h,f,c
  7314  005F2C  50DF               	movf	indf2,w,c
  7315  005F2E  ECA0  F030         	call	_shootUart1Data
  7316  005F32  2A45               	incf	Xble_cmd_attributes_write@n^0,f,c
  7317  005F34  0E13               	movlw	19
  7318  005F36  6445               	cpfsgt	Xble_cmd_attributes_write@n^0,c
  7319  005F38  EFA0  F02F         	goto	u1601
  7320  005F3C  EFA2  F02F         	goto	u1600
  7321  005F40                     u1601:
  7322  005F40  EF90  F02F         	goto	l2756
  7323  005F44                     u1600:
  7324  005F44  0012               	return		;funcret
  7325  005F46                     __end_of_Xble_cmd_attributes_write:
  7326                           	callstack 0
  7327                           
  7328 ;; *************** function _shootUart1Data *****************
  7329 ;; Defined at:
  7330 ;;		line 299 in file "src/blueWork.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;  data            1    wreg     unsigned char 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  data            1    3[COMRAM] unsigned char 
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      void 
  7337 ;; Registers used:
  7338 ;;		wreg, status,2, cstack
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7348 ;;Total ram usage:        1 bytes
  7349 ;; Hardware stack levels used:    1
  7350 ;; Hardware stack levels required when called:    3
  7351 ;; This function calls:
  7352 ;;		_mcuCts
  7353 ;; This function is called by:
  7354 ;;		_Xble_cmd_attributes_write
  7355 ;;		_Xble_cmd_gap_set_mode
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text34
  7360  006140                     __ptext34:
  7361                           	callstack 0
  7362  006140                     _shootUart1Data:
  7363                           	callstack 25
  7364                           
  7365                           ;incstack = 0
  7366                           ;shootUart1Data@data stored from wreg
  7367  006140  6E44               	movwf	shootUart1Data@data^0,c
  7368  006142                     
  7369                           ;src/blueWork.c: 299: void shootUart1Data(unsigned char data);src/blueWork.c: 300: {;src
      +                          /blueWork.c: 302:    while(TXSTA1bits.TRMT == 0)
  7370  006142  EFA4  F030         	goto	l153
  7371  006146                     l154:
  7372  006146  0004               	clrwdt		;# 
  7373  006148                     l153:
  7374                           
  7375                           ;src/blueWork.c: 302:    while(TXSTA1bits.TRMT == 0)
  7376  006148  A29E               	btfss	158,1,c	;volatile
  7377  00614A  EFA9  F030         	goto	u1201
  7378  00614E  EFAB  F030         	goto	u1200
  7379  006152                     u1201:
  7380  006152  EFA3  F030         	goto	l154
  7381  006156                     u1200:
  7382  006156  EFAE  F030         	goto	l2514
  7383  00615A                     l157:
  7384  00615A  0004               	clrwdt		;# 
  7385  00615C                     l2514:
  7386                           
  7387                           ;src/blueWork.c: 306:    while(mcuCts() == 1)
  7388  00615C  EC98  F031         	call	_mcuCts	;wreg free
  7389  006160  06E8               	decf	wreg,f,c
  7390  006162  B4D8               	btfsc	status,2,c
  7391  006164  EFB6  F030         	goto	u1211
  7392  006168  EFB8  F030         	goto	u1210
  7393  00616C                     u1211:
  7394  00616C  EFAD  F030         	goto	l157
  7395  006170                     u1210:
  7396  006170                     
  7397                           ;src/blueWork.c: 311:    TXREG1 = data;
  7398  006170  C044  FF9A         	movff	shootUart1Data@data,3994	;volatile
  7399  006174  0012               	return		;funcret
  7400  006176                     __end_of_shootUart1Data:
  7401                           	callstack 0
  7402                           
  7403 ;; *************** function _mcuCts *****************
  7404 ;; Defined at:
  7405 ;;		line 291 in file "src/blueWork.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;		None
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      unsigned char 
  7412 ;; Registers used:
  7413 ;;		wreg
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7423 ;;Total ram usage:        0 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    2
  7426 ;; This function calls:
  7427 ;;		Nothing
  7428 ;; This function is called by:
  7429 ;;		_shootUart1Data
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text35
  7434  006330                     __ptext35:
  7435                           	callstack 0
  7436  006330                     _mcuCts:
  7437                           	callstack 25
  7438  006330                     
  7439                           ;src/blueWork.c: 293:    if ((PORTC & 0b00100000) == 0b00100000)
  7440  006330  AA8F               	btfss	143,5,c	;volatile
  7441  006332  EF9D  F031         	goto	u1141
  7442  006336  EF9F  F031         	goto	u1140
  7443  00633A                     u1141:
  7444  00633A  EFA2  F031         	goto	l2422
  7445  00633E                     u1140:
  7446  00633E                     
  7447                           ;src/blueWork.c: 294:       return 1;
  7448  00633E  0E01               	movlw	1
  7449  006340  EFA3  F031         	goto	l149
  7450  006344                     l2422:
  7451                           
  7452                           ;src/blueWork.c: 296:       return 0;
  7453  006344  0E00               	movlw	0
  7454  006346                     l149:
  7455  006346  0012               	return		;funcret
  7456  006348                     __end_of_mcuCts:
  7457                           	callstack 0
  7458                           
  7459 ;; *************** function _my_isr *****************
  7460 ;; Defined at:
  7461 ;;		line 1051 in file "src/main.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;		None
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;		None
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7479 ;;Total ram usage:        2 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    1
  7482 ;; This function calls:
  7483 ;;		_interrupt_normal_code
  7484 ;; This function is called by:
  7485 ;;		Interrupt level 2
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	intcode
  7490  000008                     __pintcode:
  7491                           	callstack 0
  7492  000008                     _my_isr:
  7493                           	callstack 24
  7494                           
  7495                           ;incstack = 0
  7496  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7497  00000A  CFD9 F042          	movff	fsr2l,??_my_isr
  7498  00000E  CFDA F043          	movff	fsr2h,??_my_isr+1
  7499  000012                     
  7500                           ;src/main.c: 1053:    interrupt_normal_code();
  7501  000012  EC81  F02D         	call	_interrupt_normal_code	;wreg free
  7502  000016  C043  FFDA         	movff	??_my_isr+1,fsr2h
  7503  00001A  C042  FFD9         	movff	??_my_isr,fsr2l
  7504  00001E  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7505  000020  0011               	retfie		f
  7506  000022                     __end_of_my_isr:
  7507                           	callstack 0
  7508                           
  7509 ;; *************** function _interrupt_normal_code *****************
  7510 ;; Defined at:
  7511 ;;		line 970 in file "src/main.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;  data            1    0        unsigned char 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7529 ;;Total ram usage:        1 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_my_isr
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text37
  7539  005B02                     __ptext37:
  7540                           	callstack 0
  7541  005B02                     _interrupt_normal_code:
  7542                           	callstack 24
  7543  005B02                     
  7544                           ;src/main.c: 972:    uint8 data;;src/main.c: 978:    if (RCSTA1bits.FERR == 1)
  7545  005B02  A49D               	btfss	157,2,c	;volatile
  7546  005B04  EF86  F02D         	goto	i2u183_41
  7547  005B08  EF88  F02D         	goto	i2u183_40
  7548  005B0C                     i2u183_41:
  7549  005B0C  EF8B  F02D         	goto	i2l611
  7550  005B10                     i2u183_40:
  7551  005B10  5099               	movf	153,w,c	;volatile
  7552                           
  7553                           ;src/main.c: 981:       return;
  7554  005B12  EF2A  F02E         	goto	i2l612
  7555  005B16                     i2l611:
  7556                           
  7557                           ;src/main.c: 987:    if (RCSTA1bits.OERR == 1)
  7558  005B16  A29D               	btfss	157,1,c	;volatile
  7559  005B18  EF90  F02D         	goto	i2u184_41
  7560  005B1C  EF92  F02D         	goto	i2u184_40
  7561  005B20                     i2u184_41:
  7562  005B20  EF96  F02D         	goto	i2l613
  7563  005B24                     i2u184_40:
  7564  005B24                     
  7565                           ;src/main.c: 988:    {;src/main.c: 989:       RCSTA1bits.CREN = 0;
  7566  005B24  989D               	bcf	157,4,c	;volatile
  7567                           
  7568                           ;src/main.c: 990:       RCSTA1bits.CREN = 1;
  7569  005B26  889D               	bsf	157,4,c	;volatile
  7570                           
  7571                           ;src/main.c: 991:       return;
  7572  005B28  EF2A  F02E         	goto	i2l612
  7573  005B2C                     i2l613:
  7574                           
  7575                           ;src/main.c: 994:    if (PIR3bits.RC1IF == 1)
  7576  005B2C  010E               	movlb	14	; () banked
  7577  005B2E  ABCD               	btfss	205,5,b	;volatile
  7578  005B30  EF9C  F02D         	goto	i2u185_41
  7579  005B34  EF9E  F02D         	goto	i2u185_40
  7580  005B38                     i2u185_41:
  7581  005B38  EFBA  F02D         	goto	i2l3176
  7582  005B3C                     i2u185_40:
  7583  005B3C                     
  7584                           ; BSR set to: 14
  7585                           ;src/main.c: 995:    {;src/main.c: 996:       bleRxBuffer[bleRxIntoBuffer] = RC1REG;
  7586  005B3C  0E00               	movlw	low _bleRxBuffer
  7587  005B3E  0100               	movlb	0	; () banked
  7588  005B40  25AE               	addwf	_bleRxIntoBuffer& (0+255),w,b	;volatile
  7589  005B42  6ED9               	movwf	fsr2l,c
  7590  005B44  0E02               	movlw	high _bleRxBuffer
  7591  005B46  21AF               	addwfc	(_bleRxIntoBuffer+1)& (0+255),w,b	;volatile
  7592  005B48  6EDA               	movwf	fsr2h,c
  7593  005B4A  CF99 FFDF          	movff	3993,indf2	;volatile
  7594  005B4E                     
  7595                           ; BSR set to: 0
  7596                           ;src/main.c: 997:       if (++bleRxIntoBuffer >= 256)
  7597  005B4E  4BAE               	infsnz	_bleRxIntoBuffer& (0+255),f,b	;volatile
  7598  005B50  2BAF               	incf	(_bleRxIntoBuffer+1)& (0+255),f,b	;volatile
  7599  005B52  0E00               	movlw	0
  7600  005B54  5DAE               	subwf	_bleRxIntoBuffer& (0+255),w,b	;volatile
  7601  005B56  0E01               	movlw	1
  7602  005B58  59AF               	subwfb	(_bleRxIntoBuffer+1)& (0+255),w,b	;volatile
  7603  005B5A  A0D8               	btfss	status,0,c
  7604  005B5C  EFB2  F02D         	goto	i2u186_41
  7605  005B60  EFB4  F02D         	goto	i2u186_40
  7606  005B64                     i2u186_41:
  7607  005B64  EFB8  F02D         	goto	i2l3174
  7608  005B68                     i2u186_40:
  7609  005B68                     
  7610                           ; BSR set to: 0
  7611                           ;src/main.c: 998:          bleRxIntoBuffer = 0;
  7612  005B68  0E00               	movlw	0
  7613  005B6A  6FAF               	movwf	(_bleRxIntoBuffer+1)& (0+255),b	;volatile
  7614  005B6C  0E00               	movlw	0
  7615  005B6E  6FAE               	movwf	_bleRxIntoBuffer& (0+255),b	;volatile
  7616  005B70                     i2l3174:
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;src/main.c: 999:       ++bleBufferDepthCount;
  7620  005B70  4BA6               	infsnz	_bleBufferDepthCount& (0+255),f,b	;volatile
  7621  005B72  2BA7               	incf	(_bleBufferDepthCount+1)& (0+255),f,b	;volatile
  7622  005B74                     i2l3176:
  7623                           
  7624                           ;src/main.c: 1002:    if (PIR0bits.TMR0IF == 1)
  7625  005B74  010E               	movlb	14	; () banked
  7626  005B76  ABCA               	btfss	202,5,b	;volatile
  7627  005B78  EFC0  F02D         	goto	i2u187_41
  7628  005B7C  EFC2  F02D         	goto	i2u187_40
  7629  005B80                     i2u187_41:
  7630  005B80  EF2A  F02E         	goto	i2l612
  7631  005B84                     i2u187_40:
  7632  005B84                     
  7633                           ; BSR set to: 14
  7634                           ;src/main.c: 1003:    {;src/main.c: 1007:       PIR0bits.TMR0IF = 0;
  7635  005B84  9BCA               	bcf	202,5,b	;volatile
  7636  005B86                     
  7637                           ; BSR set to: 14
  7638                           ;src/main.c: 1009:       if (++timer25mSec >= 25)
  7639  005B86  0100               	movlb	0	; () banked
  7640  005B88  2BBD               	incf	_timer25mSec& (0+255),f,b	;volatile
  7641  005B8A  0E18               	movlw	24
  7642  005B8C  65BD               	cpfsgt	_timer25mSec& (0+255),b	;volatile
  7643  005B8E  EFCB  F02D         	goto	i2u188_41
  7644  005B92  EFCD  F02D         	goto	i2u188_40
  7645  005B96                     i2u188_41:
  7646  005B96  EF01  F02E         	goto	i2l3196
  7647  005B9A                     i2u188_40:
  7648  005B9A                     
  7649                           ; BSR set to: 0
  7650                           ;src/main.c: 1010:       {;src/main.c: 1012:          timer25mSec = 0;
  7651  005B9A  0E00               	movlw	0
  7652  005B9C  6FBD               	movwf	_timer25mSec& (0+255),b	;volatile
  7653                           
  7654                           ;src/main.c: 1014:          flag25mSec = 1;
  7655  005B9E  0E01               	movlw	1
  7656  005BA0  6FBC               	movwf	_flag25mSec& (0+255),b	;volatile
  7657  005BA2                     
  7658                           ; BSR set to: 0
  7659                           ;src/main.c: 1016:          if (++blueTimer >= 10000)
  7660  005BA2  4A57               	infsnz	_blueTimer^0,f,c	;volatile
  7661  005BA4  2A58               	incf	(_blueTimer+1)^0,f,c	;volatile
  7662  005BA6  0E10               	movlw	16
  7663  005BA8  5C57               	subwf	_blueTimer^0,w,c	;volatile
  7664  005BAA  0E27               	movlw	39
  7665  005BAC  5858               	subwfb	(_blueTimer+1)^0,w,c	;volatile
  7666  005BAE  A0D8               	btfss	status,0,c
  7667  005BB0  EFDC  F02D         	goto	i2u189_41
  7668  005BB4  EFDE  F02D         	goto	i2u189_40
  7669  005BB8                     i2u189_41:
  7670  005BB8  EFE2  F02D         	goto	i2l3188
  7671  005BBC                     i2u189_40:
  7672  005BBC                     
  7673                           ; BSR set to: 0
  7674                           ;src/main.c: 1017:             blueTimer = 10000;
  7675  005BBC  0E27               	movlw	39
  7676  005BBE  6E58               	movwf	(_blueTimer+1)^0,c	;volatile
  7677  005BC0  0E10               	movlw	16
  7678  005BC2  6E57               	movwf	_blueTimer^0,c	;volatile
  7679  005BC4                     i2l3188:
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;src/main.c: 1019:          if (solidColourTimer != 0)
  7683  005BC4  51B6               	movf	_solidColourTimer& (0+255),w,b	;volatile
  7684  005BC6  11B7               	iorwf	(_solidColourTimer+1)& (0+255),w,b	;volatile
  7685  005BC8  B4D8               	btfsc	status,2,c
  7686  005BCA  EFE9  F02D         	goto	i2u190_41
  7687  005BCE  EFEB  F02D         	goto	i2u190_40
  7688  005BD2                     i2u190_41:
  7689  005BD2  EFEE  F02D         	goto	i2l3192
  7690  005BD6                     i2u190_40:
  7691  005BD6                     
  7692                           ; BSR set to: 0
  7693                           ;src/main.c: 1020:             --solidColourTimer;
  7694  005BD6  07B6               	decf	_solidColourTimer& (0+255),f,b	;volatile
  7695  005BD8  A0D8               	btfss	status,0,c
  7696  005BDA  07B7               	decf	(_solidColourTimer+1)& (0+255),f,b	;volatile
  7697  005BDC                     i2l3192:
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;src/main.c: 1022:          if (++periodTimer >= 5)
  7701  005BDC  4BB0               	infsnz	_periodTimer& (0+255),f,b	;volatile
  7702  005BDE  2BB1               	incf	(_periodTimer+1)& (0+255),f,b	;volatile
  7703  005BE0  51B1               	movf	(_periodTimer+1)& (0+255),w,b	;volatile
  7704  005BE2  E109               	bnz	i2u191_40
  7705  005BE4  0E05               	movlw	5
  7706  005BE6  5DB0               	subwf	_periodTimer& (0+255),w,b	;volatile
  7707  005BE8  A0D8               	btfss	status,0,c
  7708  005BEA  EFF9  F02D         	goto	i2u191_41
  7709  005BEE  EFFB  F02D         	goto	i2u191_40
  7710  005BF2                     i2u191_41:
  7711  005BF2  EF01  F02E         	goto	i2l3196
  7712  005BF6                     i2u191_40:
  7713  005BF6                     
  7714                           ; BSR set to: 0
  7715                           ;src/main.c: 1023:          {;src/main.c: 1024:             periodTimer = 0;
  7716  005BF6  0E00               	movlw	0
  7717  005BF8  6FB1               	movwf	(_periodTimer+1)& (0+255),b	;volatile
  7718  005BFA  0E00               	movlw	0
  7719  005BFC  6FB0               	movwf	_periodTimer& (0+255),b	;volatile
  7720                           
  7721                           ;src/main.c: 1025:             periodFlag = 1;
  7722  005BFE  0E01               	movlw	1
  7723  005C00  6FC5               	movwf	_periodFlag& (0+255),b	;volatile
  7724  005C02                     i2l3196:
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;src/main.c: 1030:       if (++ledCount >= 100)
  7728  005C02  2BBA               	incf	_ledCount& (0+255),f,b	;volatile
  7729  005C04  0E63               	movlw	99
  7730  005C06  65BA               	cpfsgt	_ledCount& (0+255),b	;volatile
  7731  005C08  EF08  F02E         	goto	i2u192_41
  7732  005C0C  EF0A  F02E         	goto	i2u192_40
  7733  005C10                     i2u192_41:
  7734  005C10  EF17  F02E         	goto	i2l3204
  7735  005C14                     i2u192_40:
  7736  005C14                     
  7737                           ; BSR set to: 0
  7738                           ;src/main.c: 1031:       {;src/main.c: 1032:          ledCount = 0;
  7739  005C14  0E00               	movlw	0
  7740  005C16  6FBA               	movwf	_ledCount& (0+255),b	;volatile
  7741  005C18                     
  7742                           ; BSR set to: 0
  7743                           ;src/main.c: 1033:          if (++ledDisplayCount >= 20)
  7744  005C18  2BB9               	incf	_ledDisplayCount& (0+255),f,b	;volatile
  7745  005C1A  0E13               	movlw	19
  7746  005C1C  65B9               	cpfsgt	_ledDisplayCount& (0+255),b	;volatile
  7747  005C1E  EF13  F02E         	goto	i2u193_41
  7748  005C22  EF15  F02E         	goto	i2u193_40
  7749  005C26                     i2u193_41:
  7750  005C26  EF17  F02E         	goto	i2l3204
  7751  005C2A                     i2u193_40:
  7752  005C2A                     
  7753                           ; BSR set to: 0
  7754                           ;src/main.c: 1034:             ledDisplayCount = 0;
  7755  005C2A  0E00               	movlw	0
  7756  005C2C  6FB9               	movwf	_ledDisplayCount& (0+255),b	;volatile
  7757  005C2E                     i2l3204:
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;src/main.c: 1037:       if (++secTimeCount >= 977)
  7761  005C2E  4BA4               	infsnz	_secTimeCount& (0+255),f,b
  7762  005C30  2BA5               	incf	(_secTimeCount+1)& (0+255),f,b
  7763  005C32  0ED1               	movlw	209
  7764  005C34  5DA4               	subwf	_secTimeCount& (0+255),w,b
  7765  005C36  0E03               	movlw	3
  7766  005C38  59A5               	subwfb	(_secTimeCount+1)& (0+255),w,b
  7767  005C3A  A0D8               	btfss	status,0,c
  7768  005C3C  EF22  F02E         	goto	i2u194_41
  7769  005C40  EF24  F02E         	goto	i2u194_40
  7770  005C44                     i2u194_41:
  7771  005C44  EF2A  F02E         	goto	i2l612
  7772  005C48                     i2u194_40:
  7773  005C48                     
  7774                           ; BSR set to: 0
  7775                           ;src/main.c: 1038:       {;src/main.c: 1039:          secTimeCount = 0;
  7776  005C48  0E00               	movlw	0
  7777  005C4A  6FA5               	movwf	(_secTimeCount+1)& (0+255),b
  7778  005C4C  0E00               	movlw	0
  7779  005C4E  6FA4               	movwf	_secTimeCount& (0+255),b
  7780                           
  7781                           ;src/main.c: 1040:          secTimeFlag = 1;
  7782  005C50  0E01               	movlw	1
  7783  005C52  6FB8               	movwf	_secTimeFlag& (0+255),b
  7784  005C54                     i2l612:
  7785  005C54  0012               	return		;funcret
  7786  005C56                     __end_of_interrupt_normal_code:
  7787                           	callstack 0
  7788                           
  7789                           	psect	rparam
  7790  0000                     
  7791                           	psect	temp
  7792  00005C                     btemp:
  7793                           	callstack 0
  7794  00005C                     	ds	1
  7795  0000                     int$flags	set	btemp
  7796  0000                     wtemp8	set	btemp+1
  7797  0000                     ttemp5	set	btemp+1
  7798  0000                     ttemp6	set	btemp+4
  7799  0000                     ttemp7	set	btemp+8
  7800                           
  7801                           	psect	idloc
  7802                           
  7803                           ;Config register IDLOC0 @ 0x200000
  7804                           ;	unspecified, using default values
  7805  200000                     	org	2097152
  7806  200000  FFFF               	dw	65535
  7807                           
  7808                           ;Config register IDLOC1 @ 0x200002
  7809                           ;	unspecified, using default values
  7810  200002                     	org	2097154
  7811  200002  FFFF               	dw	65535
  7812                           
  7813                           ;Config register IDLOC2 @ 0x200004
  7814                           ;	unspecified, using default values
  7815  200004                     	org	2097156
  7816  200004  FFFF               	dw	65535
  7817                           
  7818                           ;Config register IDLOC3 @ 0x200006
  7819                           ;	unspecified, using default values
  7820  200006                     	org	2097158
  7821  200006  FFFF               	dw	65535
  7822                           
  7823                           ;Config register IDLOC4 @ 0x200008
  7824                           ;	unspecified, using default values
  7825  200008                     	org	2097160
  7826  200008  FFFF               	dw	65535
  7827                           
  7828                           ;Config register IDLOC5 @ 0x20000A
  7829                           ;	unspecified, using default values
  7830  20000A                     	org	2097162
  7831  20000A  FFFF               	dw	65535
  7832                           
  7833                           ;Config register IDLOC6 @ 0x20000C
  7834                           ;	unspecified, using default values
  7835  20000C                     	org	2097164
  7836  20000C  FFFF               	dw	65535
  7837                           
  7838                           ;Config register IDLOC7 @ 0x20000E
  7839                           ;	unspecified, using default values
  7840  20000E                     	org	2097166
  7841  20000E  FFFF               	dw	65535
  7842                           
  7843                           	psect	config
  7844                           
  7845                           ;Config register CONFIG1L @ 0x300000
  7846                           ;	External Oscillator mode Selection bits
  7847                           ;	FEXTOSC = OFF, Oscillator not enabled
  7848                           ;	Power-up default value for COSC bits
  7849                           ;	RSTOSC = LFINTOSC, Low-Frequency Oscillator
  7850  300000                     	org	3145728
  7851  300000  DC                 	db	220
  7852                           
  7853                           ;Config register CONFIG1H @ 0x300001
  7854                           ;	Clock Out Enable bit
  7855                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7856                           ;	Clock Switch Enable bit
  7857                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7858                           ;	Fail-Safe Clock Monitor Enable bit
  7859                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7860  300001                     	org	3145729
  7861  300001  FF                 	db	255
  7862                           
  7863                           ;Config register CONFIG2L @ 0x300002
  7864                           ;	Master Clear Enable bit
  7865                           ;	MCLRE = INTMCLR, If LVP = 0, MCLR pin function is port defined function; If LVP =1, RE
      +                          3 pin fuction is MCLR
  7866                           ;	Power-up Timer Enable bit
  7867                           ;	PWRTE = ON, Power up timer enabled
  7868                           ;	Low-power BOR enable bit
  7869                           ;	LPBOREN = OFF, ULPBOR disabled
  7870                           ;	Brown-out Reset Enable bits
  7871                           ;	BOREN = OFF, Brown-out Reset disabled
  7872  300002                     	org	3145730
  7873  300002  3C                 	db	60
  7874                           
  7875                           ;Config register CONFIG2H @ 0x300003
  7876                           ;	Brown Out Reset Voltage selection bits
  7877                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  7878                           ;	ZCD Disable bit
  7879                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7880                           ;	PPSLOCK bit One-Way Set Enable bit
  7881                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  7882                           ;	Stack Full/Underflow Reset Enable bit
  7883                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  7884                           ;	Debugger Enable bit
  7885                           ;	DEBUG = OFF, Background debugger disabled
  7886                           ;	Extended Instruction Set Enable bit
  7887                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7888  300003                     	org	3145731
  7889  300003  EF                 	db	239
  7890                           
  7891                           ;Config register CONFIG3L @ 0x300004
  7892                           ;	WDT Period Select bits
  7893                           ;	WDTCPS = WDTCPS_11, Divider ratio 1:65536
  7894                           ;	WDT operating mode
  7895                           ;	WDTE = ON, WDT enabled regardless of sleep
  7896  300004                     	org	3145732
  7897  300004  EB                 	db	235
  7898                           
  7899                           ;Config register CONFIG3H @ 0x300005
  7900                           ;	WDT Window Select bits
  7901                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7902                           ;	WDT input clock selector
  7903                           ;	WDTCCS = LFINTOSC, WDT reference clock is the 31.0 kHz LFINTOSC
  7904  300005                     	org	3145733
  7905  300005  C7                 	db	199
  7906                           
  7907                           ;Config register CONFIG4L @ 0x300006
  7908                           ;	Write Protection Block 0
  7909                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7910                           ;	Write Protection Block 1
  7911                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7912                           ;	Write Protection Block 2
  7913                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7914                           ;	Write Protection Block 3
  7915                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7916  300006                     	org	3145734
  7917  300006  FF                 	db	255
  7918                           
  7919                           ;Config register CONFIG4H @ 0x300007
  7920                           ;	Configuration Register Write Protection bit
  7921                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  7922                           ;	Boot Block Write Protection bit
  7923                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7924                           ;	Data EEPROM Write Protection bit
  7925                           ;	WRTD = OFF, Data EEPROM not write-protected
  7926                           ;	Scanner Enable bit
  7927                           ;	SCANE = OFF, Scanner module is NOT available for use, SCANMD bit is ignored
  7928                           ;	Low Voltage Programming Enable bit
  7929                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7930  300007                     	org	3145735
  7931  300007  EF                 	db	239
  7932                           
  7933                           ;Config register CONFIG5L @ 0x300008
  7934                           ;	UserNVM Program Memory Code Protection bit
  7935                           ;	CP = OFF, UserNVM code protection disabled
  7936                           ;	DataNVM Memory Code Protection bit
  7937                           ;	CPD = OFF, DataNVM code protection disabled
  7938  300008                     	org	3145736
  7939  300008  FF                 	db	255
  7940                           
  7941                           ;Config register CONFIG5H @ 0x300009
  7942                           ;	unspecified, using default values
  7943  300009                     	org	3145737
  7944  300009  FF                 	db	255
  7945                           
  7946                           ;Config register CONFIG6L @ 0x30000A
  7947                           ;	Table Read Protection Block 0
  7948                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7949                           ;	Table Read Protection Block 1
  7950                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7951                           ;	Table Read Protection Block 2
  7952                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7953                           ;	Table Read Protection Block 3
  7954                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7955  30000A                     	org	3145738
  7956  30000A  FF                 	db	255
  7957                           
  7958                           ;Config register CONFIG6H @ 0x30000B
  7959                           ;	Boot Block Table Read Protection bit
  7960                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7961  30000B                     	org	3145739
  7962  30000B  FF                 	db	255
  7963                           tosu	equ	0xFFF
  7964                           tosh	equ	0xFFE
  7965                           tosl	equ	0xFFD
  7966                           stkptr	equ	0xFFC
  7967                           pclatu	equ	0xFFB
  7968                           pclath	equ	0xFFA
  7969                           pcl	equ	0xFF9
  7970                           tblptru	equ	0xFF8
  7971                           tblptrh	equ	0xFF7
  7972                           tblptrl	equ	0xFF6
  7973                           tablat	equ	0xFF5
  7974                           prodh	equ	0xFF4
  7975                           prodl	equ	0xFF3
  7976                           indf0	equ	0xFEF
  7977                           postinc0	equ	0xFEE
  7978                           postdec0	equ	0xFED
  7979                           preinc0	equ	0xFEC
  7980                           plusw0	equ	0xFEB
  7981                           fsr0h	equ	0xFEA
  7982                           fsr0l	equ	0xFE9
  7983                           wreg	equ	0xFE8
  7984                           indf1	equ	0xFE7
  7985                           postinc1	equ	0xFE6
  7986                           postdec1	equ	0xFE5
  7987                           preinc1	equ	0xFE4
  7988                           plusw1	equ	0xFE3
  7989                           fsr1h	equ	0xFE2
  7990                           fsr1l	equ	0xFE1
  7991                           bsr	equ	0xFE0
  7992                           indf2	equ	0xFDF
  7993                           postinc2	equ	0xFDE
  7994                           postdec2	equ	0xFDD
  7995                           preinc2	equ	0xFDC
  7996                           plusw2	equ	0xFDB
  7997                           fsr2h	equ	0xFDA
  7998                           fsr2l	equ	0xFD9
  7999                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    20
    Data        46
    BSS         882
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           31     20      27
    BANK0           160     12     145
    BANK1           256      0      20
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0     256
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_analyseBleRxIn
    _setupADS1120->_shootSoftSpiData8
    _readInCalibrationPoints->_ReadEEByte
    _readAllADS1120configRegisters->_readSoftSpiData8
    _readAllADS1120configRegisters->_shootSoftSpiData8
    _initialiseLeds->_ledColour
    _analyseBleRxIn->_XReceiveBTMessage
    _XReceiveBTMessage->_messageMatch
    _messageMatch->_calibrationStow
    _calibrationStow->_WriteEEByte
    _XBLE_state_manage->_readDataSensor
    _readDataSensor->_readSoftSpiData8
    _readDataSensor->_shootSoftSpiData8
    _Xble_cmd_gap_set_mode->_shootUart1Data
    _Xble_cmd_attributes_write->_shootUart1Data

Critical Paths under _my_isr in COMRAM

    _my_isr->_interrupt_normal_code

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _my_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _my_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _my_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _my_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _my_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _my_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _my_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _my_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _my_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13     8      5    3997
                                              0 BANK0     12     7      5
                  _XBLE_state_manage
                     _analyseBleRxIn
                   _ifDcPlugInserted
                      _initialiseAdc
               _initialiseBitBashSpi
              _initialiseBlueToothIo
                      _initialiseDac
          _initialiseIoBitsAndPieces
                     _initialiseLeds
         _initialiseVoltageReference
                          _ledColour
                         _mcuRtsHigh
                          _mcuRtsLow
      _readAllADS1120configRegisters
                     _readDataSensor
            _readInCalibrationPoints
                       _setupADS1120
                _switchToHighFreqOsc
                 _switchToLowFreqOsc
                        _timer0Setup
                         _uart1Setup
 ---------------------------------------------------------------------------------
 (1) _uart1Setup                                           1     1      0       1
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _timer0Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _switchToLowFreqOsc                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _switchToHighFreqOsc                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADS1120                                         2     2      0     182
                                              6 COMRAM     2     2      0
                  _shootSoftSpiData8
 ---------------------------------------------------------------------------------
 (1) _readInCalibrationPoints                              2     2      0     330
                                              7 COMRAM     2     2      0
                         _ReadEEByte
 ---------------------------------------------------------------------------------
 (2) _ReadEEByte                                           4     2      2     196
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _readAllADS1120configRegisters                        2     2      0     320
                                              6 COMRAM     2     2      0
                   _readSoftSpiData8
                  _shootSoftSpiData8
 ---------------------------------------------------------------------------------
 (1) _mcuRtsLow                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcuRtsHigh                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseVoltageReference                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseLeds                                       0     0      0      66
                          _ledColour
 ---------------------------------------------------------------------------------
 (1) _initialiseIoBitsAndPieces                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseDac                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseBlueToothIo                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseBitBashSpi                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ifDcPlugInserted                                     1     1      0      92
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _analyseBleRxIn                                       1     1      0    1942
                                             19 COMRAM     1     1      0
                  _XReceiveBTMessage
 ---------------------------------------------------------------------------------
 (2) _XReceiveBTMessage                                    3     3      0    1919
                                             16 COMRAM     3     3      0
                       _messageMatch
 ---------------------------------------------------------------------------------
 (3) _messageMatch                                         7     5      2    1765
                                              9 COMRAM     7     5      2
                    _calibrationStow
 ---------------------------------------------------------------------------------
 (4) _calibrationStow                                      1     1      0     546
                                              8 COMRAM     1     1      0
                        _WriteEEByte
                          _ledColour
 ---------------------------------------------------------------------------------
 (1) _ledColour                                            1     1      0      66
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _WriteEEByte                                          5     2      3     370
                                              3 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _XBLE_state_manage                                    3     3      0     430
                                              7 COMRAM     2     2      0
          _Xble_cmd_attributes_write
              _Xble_cmd_gap_set_mode
                           _bleReset
                     _readDataSensor
 ---------------------------------------------------------------------------------
 (1) _readDataSensor                                       3     3      0     296
                                              6 COMRAM     1     1      0
                              _delay
                   _readSoftSpiData8
                  _shootSoftSpiData8
                        _waitForDrdy
 ---------------------------------------------------------------------------------
 (2) _waitForDrdy                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _shootSoftSpiData8                                    3     3      0     136
                                              3 COMRAM     3     3      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _readSoftSpiData8                                     3     3      0     138
                                              3 COMRAM     3     3      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bleReset                                             1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Xble_cmd_gap_set_mode                                0     0      0      22
                     _shootUart1Data
 ---------------------------------------------------------------------------------
 (2) _Xble_cmd_attributes_write                            1     1      0      90
                                              4 COMRAM     1     1      0
                     _shootUart1Data
 ---------------------------------------------------------------------------------
 (3) _shootUart1Data                                       1     1      0      22
                                              3 COMRAM     1     1      0
                             _mcuCts
 ---------------------------------------------------------------------------------
 (4) _mcuCts                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _my_isr                                               2     2      0       1
                                              1 COMRAM     2     2      0
              _interrupt_normal_code
 ---------------------------------------------------------------------------------
 (7) _interrupt_normal_code                                1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _XBLE_state_manage
     _Xble_cmd_attributes_write
       _shootUart1Data
         _mcuCts
     _Xble_cmd_gap_set_mode
       _shootUart1Data
         _mcuCts
     _bleReset
     _readDataSensor
       _delay
       _readSoftSpiData8
         _delay
       _shootSoftSpiData8
         _delay
       _waitForDrdy
   _analyseBleRxIn
     _XReceiveBTMessage
       _messageMatch
         _calibrationStow
           _WriteEEByte
           _ledColour
   _ifDcPlugInserted
   _initialiseAdc
   _initialiseBitBashSpi
   _initialiseBlueToothIo
   _initialiseDac
   _initialiseIoBitsAndPieces
   _initialiseLeds
     _ledColour
   _initialiseVoltageReference
   _ledColour
   _mcuRtsHigh
   _mcuRtsLow
   _readAllADS1120configRegisters
     _readSoftSpiData8
       _delay
     _shootSoftSpiData8
       _delay
   _readDataSensor
     _delay
     _readSoftSpiData8
       _delay
     _shootSoftSpiData8
       _delay
     _waitForDrdy
   _readInCalibrationPoints
     _ReadEEByte
   _setupADS1120
     _shootSoftSpiData8
       _delay
   _switchToHighFreqOsc
   _switchToLowFreqOsc
   _timer0Setup
   _uart1Setup

 _my_isr (ROOT)
   _interrupt_normal_code

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E47      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      14       8        7.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C      91       5       90.6%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           1F      0       0       0        0.0%
COMRAM              1F     14      1B       1       87.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C0       6        0.0%
DATA                 0      0     3C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Nov 14 15:31:10 2023

                       WriteEEByte@data 0046                    __size_of_WriteEEByte 0048  
                 _Xble_cmd_gap_set_mode 6222             ??_Xble_cmd_attributes_write 0045  
                                    l84 5E5A                                      l92 637C  
                                    l86 5E8E                                      l79 62AE  
                                    l97 5F76                                      l89 636E  
                                    l98 5F9A                      WriteEEByte@address 0044  
    __size_of_initialiseIoBitsAndPieces 000E                                     l101 61A2  
                                   l111 5FEA                                     l120 60C6  
                                   l114 6098                                     l106 6038  
                                   l203 5B00                                     l123 6220  
                                   l116 60AE                                     l221 6246  
                                   l126 606E                                     l118 60C4  
                                   l142 6392                                     l134 5EEA  
                                   l128 607C                                     l153 6148  
                                   l137 62C8                                     l129 6080  
                                   l145 638E                                     l154 6146  
                                   l218 5F44                                     l162 5E30  
                                   l139 62CA                                     l252 583E  
                                   l149 6346                                     l157 615A  
                                   l261 5910                                     l158 6170  
                                   l254 584A                                     l166 56A4  
                                   l510 50FE                                     l159 6174  
                                   l520 5164                                     l512 5132  
                                   l504 50FA                                     l265 59A4  
                                   l601 5D66                                     l602 5D6A  
                                   l515 5146                                     l532 523E  
                                   l516 5146                                     l533 524A  
                                   l525 5174                                     l535 527C  
                                   l519 5164                                     l608 5DCE  
                                   l536 527C                                     l553 628C  
                                   l562 6104                                     l571 636C  
                                   l580 625C                                     l556 61F8  
                                   l492 5168                                     l565 6128  
                                   l574 61CE                                     l494 507A  
                                   l583 626A                                     l559 60EE  
                                   l495 5098                                     l592 62E4  
                                   l568 613E                                     l496 50BC  
                                   l577 6316                                     l497 50D6  
                                   l586 638A                                     l498 50D2  
                                   l499 50D2                                     l596 5D20  
                                   l589 632E                                     l598 5D50  
                                   l599 5D3C                                     _GIE 007F97  
    __end_of_initialiseVoltageReference 626C              _initialiseVoltageReference 6248  
                                   wreg 000FE8                              _TXSTA1bits 000F9E  
                      ?_calibrationStow 0041                                    l3000 62DA  
                                  l3010 5D06                                    l3002 62DC  
                                  l3020 5D22                                    l3012 5D0A  
                                  l3004 62DE                                    l3100 626E  
                                  l3030 5D3E                                    l3022 5D24  
                                  l3014 5D1C                                    l3006 62E0  
                                  l3102 627A                                    l3110 61D0  
                                  l2400 605C                                    l3032 5D40  
                                  l3024 5D38                                    l3008 62E2  
                                  l3104 6284                                    l3120 61F4  
                                  l3112 61EA                                    l2410 606C  
                                  l2402 6060                                    l3042 5D68  
                                  l3034 5D5E                                    l3050 60DC  
                                  l3130 611A                                    l3122 6106  
                                  l3106 6286                                    l3114 61EE  
                                  l2412 628E                                    l2500 5F80  
                                  l2404 6062                                    l3036 5D60  
                                  l3060 60E6                                    l3052 60DE  
                                  l3140 6124                                    l3132 611C  
                                  l3124 6114                                    l3108 628A  
                                  l3116 61F0                                    l2422 6344  
                                  l2414 6330                                    l2502 5F82  
                                  l2406 6064                                    l2430 5DE6  
                                  l3150 5D8A                                    l3070 6248  
                                  l3062 60E8                                    l3054 60E0  
                                  l3046 60C8                                    l3142 6126  
                                  l3134 611E                                    l3126 6116  
                                  l3118 61F2                                    l2416 633E  
                                  l2512 6142                                    l2504 5F86  
                                  l2408 6068                                    l2440 5E2C  
                                  l2432 5DFA                                    l2600 5558  
                                  l2520 537C                                    l3160 5DC8  
                                  l3152 5D9C                                    l3080 6314  
                                  l3072 6250                                    l3064 60EA  
                                  l3056 60E2                                    l3048 60DA  
                                  l3144 6138                                    l3136 6120  
                                  l3128 6118                                    l2514 615C  
                                  l2506 5F88                                    l2450 5E40  
                                  l2442 5E34                                    l2434 5E0A  
                                  l2426 5DD2                                    l2602 5562  
                                  l2610 5580                                    l2530 53BA  
                                  l2522 538E                                    l3154 5DB6  
                                  l3146 5D6C                                    l3090 61CC  
                                  l3082 61A4                                    l3074 6300  
                                  l3066 60EC                                    l3058 60E4  
                                  l3138 6122                                    l2508 5F98  
                                  l2460 5E68                                    l2452 5E54  
                                  l2436 5E1A                                    l2428 5DD8  
                                  l2620 5606                                    l2604 556C  
                                  l2612 55DC                                    l2540 5406  
                                  l2532 53CC                                    l2524 539E  
                                  l2516 536C                                    l3156 5DBE  
                                  l3148 5D86                                    l3084 61B6  
                                  l3092 6318                                    l3076 6306  
                                  l3068 60FE                                    l3500 50B2  
                                  l2470 5E84                                    l2462 5E6C  
                                  l2454 5E5C                                    l2390 60A8  
                                  l2438 5E22                                    l2630 5646  
                                  l2622 5618                                    l2606 5576  
                                  l2550 5446                                    l2542 5416  
                                  l2534 53DC                                    l2518 536C  
                                  l3158 5DC4                                    l3086 61BC  
                                  l3094 6326                                    l3078 630E  
                                  l3510 50F4                                    l3502 50B4  
                                  l2480 5F4C                                    l2472 5E88  
                                  l2464 5E6E                                    l2456 5E60  
                                  l2448 5E3C                                    l2392 60B0  
                                  l2384 6084                                    l2640 568C  
                                  l2632 5656                                    l2560 5482  
                                  l2616 55E2                                    l2552 5456  
                                  l2544 5428                                    l2528 53AA  
                                  l2720 5A66                                    l2712 5A24  
                                  l2704 5A08                                    l3088 61C6  
                                  l3096 632C                                    l3600 5276  
                                  l3520 5140                                    l3512 5110  
                                  l3504 50B6                                    l2490 5F58  
                                  l2482 5F50                                    l2466 5E72  
                                  l2458 5E62                                    l2474 636E  
                                  l2394 60BE                                    l2386 6092  
                                  l2642 569E                                    l2618 55F4  
                                  l2626 5622                                    l2570 54AC  
                                  l2562 5494                                    l2554 5466  
                                  l2538 53F4                                    l2730 5AAC  
                                  l2714 5A38                                    l2706 5A1C  
                                  l2810 6390                                    l3098 626C  
                                  l3610 52A4                                    l3602 5278  
                                  l3522 514A                                    l3514 511A  
                                  l3506 50BE                                    l2492 5F5C  
                                  l2484 5F54                                    l2476 5F46  
                                  l2468 5E74                                    l2660 6188  
                                  l2900 57F6                                    l2820 56C8  
                                  l2396 603A                                    l2388 609A  
                                  l2628 5634                                    l2636 5668  
                                  l2572 54C8                                    l2564 54A4  
                                  l2548 5434                                    l2732 5ABC  
                                  l2740 5AD2                                    l2716 5A42  
                                  l2812 638C                                    l2804 5E98  
                                  l3620 52D2                                    l3612 52A8  
                                  l3604 5280                                    l3540 51A6  
                                  l3532 5176                                    l3524 515E  
                                  l3516 5120                                    l3508 50E4  
                                  l2750 5F1C                                    l2494 5F62  
                                  l2478 5F4A                                    l2662 6198  
                                  l2654 6178                                    l2910 580A  
                                  l2902 57FA                                    l2830 56E6  
                                  l2822 56CE                                    l2814 56A6  
                                  l2398 6042                                    l2638 567A  
                                  l2590 551C                                    l2582 54DE  
                                  l2574 54CA                                    l2558 5470  
                                  l2742 5AE2                                    l2718 5A54  
                                  l2726 5A72                                    l2670 6202  
                                  l2806 5ED0                                    l3630 530E  
                                  l3622 52DA                                    l3614 52AE  
                                  l3606 5298                                    l3550 51B6  
                                  l3542 51AA                                    l3534 517C  
                                  l3526 516A                                    l3518 5130  
                                  l3470 502E                                    l2760 5F34  
                                  l2680 62C2                                    l2496 5F70  
                                  l2664 619C                                    l2656 617C  
                                  l2920 581E                                    l2912 580E  
                                  l2904 57FE                                    l2840 5718  
                                  l2832 56FC                                    l2824 56D0  
                                  l2816 56AA                                    l2592 5530  
                                  l2584 5514                                    l2576 54DA  
                                  l2744 5AFA                                    l2728 5A88  
                                  l2672 621C                                    l2808 5ED4  
                                  l3640 535C                                    l3632 5324  
                                  l3624 52F6                                    l3616 52C0  
                                  l3608 52A0                                    l3560 51CA  
                                  l3552 51BA                                    l3544 51AC  
                                  l3536 5192                                    l3480 5060  
                                  l3472 5032                                    l2762 6222  
                                  l2498 5F7C                                    l2666 619E  
                                  l2658 6182                                    l2930 5832  
                                  l2922 5822                                    l2914 5812  
                                  l2906 5802                                    l2842 571C  
                                  l2834 5708                                    l2826 56D6  
                                  l2818 56C0                                    l3722 5596  
                                  l2594 553A                                    l2690 59E2  
                                  l2682 59A8                                    l2674 621E  
                                  l3634 5336                                    l3626 52FA  
                                  l3618 52C4                                    l3570 5208  
                                  l3562 51CE                                    l3554 51BE  
                                  l3546 51AE                                    l3538 51A2  
                                  l3490 507C                                    l3482 506E  
                                  l3474 5036                                    l3466 5014  
                                  l2756 5F20                                    l2748 5EEC  
                                  l3724 589C                                    l2932 5836  
                                  l2924 5826                                    l2916 5816  
                                  l2908 5806                                    l2860 5790  
                                  l2852 5760                                    l2844 5728  
                                  l2836 570A                                    l2828 56DE  
                                  l2596 5544                                    l2588 551A  
                                  l2692 59E6                                    l2684 59BA  
                                  l2668 61FA                                    l2780 6036  
                                  l2764 5FEC                                    l3636 5348  
                                  l3628 52FC                                    l3580 5224  
                                  l3572 5218                                    l3564 51D2  
                                  l3556 51C2                                    l3548 51B2  
                                  l3492 5082                                    l3484 5070  
                                  l3476 504A                                    l3468 502A  
                                  l2758 5F32                                    l2678 62B2  
                                  l3726 594E                                    l2950 58E4  
                                  l2942 5862                                    l2934 584E  
                                  l2926 582A                                    l2918 581A  
                                  l2870 57A6                                    l2862 5796  
                                  l2846 573E                                    l2838 5714  
                                  l2598 554E                                    l2686 59CC  
                                  l2790 5FA8                                    l2782 5F9C  
                                  l2774 5FFE                                    l2766 5FF0  
                                  l3638 5352                                    l3590 5266  
                                  l3582 522A                                    l3574 521E  
                                  l3566 51E6                                    l3558 51C6  
                                  l3494 50A8                                    l3478 504C  
                                  l2960 5912                                    l2952 58EC  
                                  l2936 5856                                    l2928 582E  
                                  l2880 57BA                                    l2872 57AA  
                                  l2864 579A                                    l2856 577A  
                                  l2848 5746                                    l2696 59EE  
                                  l2688 59D0                                    l2792 5FAC  
                                  l2784 5FA0                                    l2776 6002  
                                  l2768 5FF6                                    l3592 5268  
                                  l3584 522E                                    l3568 51F6  
                                  l3496 50AE                                    l2962 5918  
                                  l2954 58F0                                    l2946 5886  
                                  l2890 57CE                                    l2882 57BE  
                                  l2874 57AE                                    l2866 579E  
                                  l2858 578C                                    l2698 5A00  
                                  l2794 5FC2                                    l2778 6018  
                                  l3594 526A                                    l3586 524C  
                                  l3498 50B0                                    l2948 58CA  
                                  l2892 57D2                                    l2884 57C2  
                                  l2876 57B2                                    l2868 57A2  
                                  l2956 58F6                                    l2972 593A  
                                  l2796 5FE8                                    l3596 5270  
                                  l3588 5260                                    l2966 5920  
                                  l2894 57D6                                    l2886 57C6  
                                  l2878 57B6                                    l2990 637E  
                                  l2798 5E90                                    l3598 5272  
                                  l2896 57DA                                    l2888 57CA  
                                  l2992 6384                                    l2898 57EA  
                                  l2994 62CC                                    l2986 635C  
                                  l2996 62CE                                    l2988 6366  
                                  l2998 62D4                        ??_initialiseLeds 0045  
         __size_of_initialiseBitBashSpi 0018                                    u1100 6092  
                                  u1101 608E                                    u1110 60A8  
                                  u1111 60A4                                    u1200 6156  
                                  u1120 60BE                                    u1201 6152  
                                  u1121 60BA                                    u1210 6170  
                                  u1130 607C                                    u1211 616C  
                                  u1131 6078                                    u1140 633E  
                                  u1300 5428                                    u1220 537C  
                                  u1141 633A                                    u1301 5424  
                                  u1221 5378                                    u1150 5E54  
                                  u1310 5446                                    u1230 538E  
                                  u1151 5E50                                    u1311 5442  
                                  u1231 538A                                    u1160 5E84  
                                  u1400 55F4                                    u1320 5456  
                                  u1240 539E                                    u2200 506E  
                                  u1161 5E80                                    u1401 55F0  
                                  u1321 5452                                    u1241 539A  
                                  u2201 506A                                    u1170 637C  
                                  u1410 5606                                    u1330 5466  
                                  u1250 53BA                                    u2210 5098  
                                  u1171 6378                                    u1411 5602  
                                  u1331 5462                                    u1251 53B6  
                                  u2211 5094                                    u1180 5F70  
                                  u1420 5618                                    u1340 5482  
                                  u1260 53CC                                    u1500 59BA  
                                  u2300 51A2                                    u2220 50D2  
                                  u1181 5F6C                                    u1421 5614  
                                  u1341 547E                                    u1261 53C8  
                                  u1501 59B6                                    u2301 519E  
                                  u2221 50CE                                    u1190 5F98  
                                  u1430 5634                                    u1350 5494  
                                  u1270 53DC                                    u1510 59CC  
                                  u2310 51E6                                    u2230 50E4  
                                  u1191 5F94                                    u1431 5630  
                                  u1351 5490                                    u1271 53D8  
                                  u1511 59C8                                    u2311 51E2  
                                  u2231 50E0                                    u1600 5F44  
                                  u1440 5646                                    u1360 54A4  
                                  u1280 5406                                    u1520 59E2  
                                  u2400 530E                                    u2320 51F6  
                                  u2240 50F4                                    u1601 5F40  
                                  u1441 5642                                    u1361 54A0  
                                  u1281 5402                                    u1521 59DE  
                                  u2401 530A                                    u2321 51F2  
                                  u2241 50F0                                    u1450 5656  
                                  u1370 54DA                                    u1290 5416  
                                  u1530 5A00                                    u1610 6018  
                                  u2410 5336                                    u2330 5208  
                                  u2250 5110                                    u1451 5652  
                                  u1371 54D6                                    u1291 5412  
                                  u1531 59FC                                    u1611 6014  
                                  u2411 5332                                    u2331 5204  
                                  u2251 510C                                    u1700 57EA  
                                  u1460 567A                                    u1380 5514  
                                  u1540 5A1C                                    u1620 5FC2  
                                  u2420 5348                                    u2340 5218  
                                  u2260 5130                                    u1701 57E6  
                                  u1461 5676                                    u1381 5510  
                                  u1541 5A18                                    u1621 5FBE  
                                  u2421 5344                                    u2341 5214  
                                  u2261 512C                                    u1710 58E4  
                                  u1470 568C                                    u1390 552C  
                                  u1550 5A38                                    u1630 5EEA  
                                  u2350 523E                                    u2270 5140  
                                  u2190 504A                                    u1711 58E0  
                                  u1471 5688                                    u1391 5528  
                                  u1551 5A34                                    u1631 5EE6  
                                  u2351 523A                                    u2271 513C  
                                  u2191 5046                                    u1720 590C  
                                  u1640 56C0                                    u1480 569E  
                                  u1560 5A54                                    u1800 6138  
                                  u2360 5260                                    u2280 515E  
                                  u1721 5908                                    u1641 56BC  
                                  u1481 569A                                    u1561 5A50  
                                  u1801 6134                                    u2361 525C  
                                  u2281 515A                                    u1490 62C2  
                                  u1730 5936                                    u1650 56FC  
                                  u1570 5A88                                    u1810 5D86  
                                  u2370 5298                                    u2290 5192  
                                  u1491 62BE                                    u1731 5932  
                                  u1651 56F8                                    u1571 5A84  
                                  u1811 5D82                                    u2371 5294  
                                  u2291 518E                                    u1660 573E  
                                  u1580 5AAC                                    u1820 5DB6  
                                  u1740 5D1C                                    u2380 52C0  
                                  u1661 573A                                    u1581 5AA8  
                                  u1821 5DB2                                    u1741 5D18  
                                  u2381 52BC                                    u1670 575C  
                                  u1590 5AFA                                    u1750 5D34  
                                  u2390 52D2                                    u1671 5758  
                                  u1591 5AF6                                    u1751 5D30  
                                  u2391 52CE                                    u1680 5776  
                                  u1760 5D50                                    u1681 5772  
                                  u1761 5D4C                                    u1690 578C  
                                  u1770 5D5E                                    u1691 5788  
                                  u1771 5D5A                                    u1780 60FE  
                                  u1781 60FA                                    u1790 626A  
                                  u1791 6266              XReceiveBTMessage@byteCount 0055  
                                  _WPUA 000F10                                    _WPUD 000F25  
                                  _main 5014                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 005C  
                     ifDcPlugInserted@n 0044                                    start 0022  
                          ___param_bank 000000              __size_of_XBLE_state_manage 0300  
                          _BAUDCON1bits 000F9F                                   _ADACQ 000F5C  
                                 ?_main 00E5                                   _ADCLK 000F57  
                                 _ADPCH 000F5F                                   _ADRES 000F63  
                                 i2l611 5B16       __end_of_initialiseIoBitsAndPieces 638C  
                                 i2l612 5C54                                   i2l613 5B2C  
                                 i2l628 0016                                   _PORTB 000F8E  
                                 _PORTC 000F8F                                   _PORTD 000F90  
                         messageMatch@n 004F                                   _delay 628E  
             _Xble_cmd_attributes_write 5EEC                                   main@d 00EF  
                                 main@n 00EE                                   main@x 00EC  
                                 tablat 000FF5                   _reservedFileRegisters 000001  
                 _initialiseBlueToothIo 62CC                                   ttemp5 005D  
                                 ttemp6 0060                                   ttemp7 0064  
                            _ReadEEByte 61FA                                   status 000FD8  
                                 wtemp8 005D                        ??_shootUart1Data 0044  
                       _ledDisplayCount 00B9                 __size_of_analyseBleRxIn 0064  
                ?_Xble_cmd_gap_set_mode 0041                         __initialization 5C56  
                          __end_of_main 536A        XReceiveBTMessage@receivedMessage 00C1  
                      _systemClockSpeed 00BB                       _shootSoftSpiData8 5E32  
              readInCalibrationPoints@n 0048          readAllADS1120configRegisters@d 0047  
                                ??_main 00EA                      analyseBleRxIn@data 0054  
                    ?_shootSoftSpiData8 0041                           __activetblptr 000003  
                         bleReset@reset 0044                                  ?_delay 0041  
             __size_of_readSoftSpiData8 0056                     ??_shootSoftSpiData8 0044  
           __size_of_switchToLowFreqOsc 003A                                  _ANSELA 000F11  
                                _ANSELB 000F19                                  _ANSELC 000F21  
                                _ANSELD 000F26                                  _RC1REG 000F99  
                                _RC6PPS 000EFD                                  i2l3200 5C18  
                                i2l3202 5C2A                                  i2l3204 5C2E  
                                i2l3206 5C48                                  i2l3170 5B4E  
                                i2l3162 5B02                                  i2l3180 5B86  
                                i2l3172 5B68                                  i2l3164 5B10  
                                i2l3190 5BD6                                  i2l3182 5B9A  
                                i2l3174 5B70                                  i2l3166 5B24  
                                i2l3192 5BDC                                  i2l3184 5BA2  
                                i2l3168 5B3C                                  i2l3176 5B74  
                    messageMatch@result 0050                                  i2l3194 5BF6  
                                i2l3186 5BBC                                  i2l3178 5B84  
                                i2l3188 5BC4                                  i2l3196 5C02  
                                i2l3198 5C14                                  i2l3384 0012  
                                _RCREG1 000F99                                  _OSCFRQ 000EDE  
                                _NVMDAT 000F80                                  _SPBRG1 000F9B  
                                _RX1PPS 000EB5                        __end_of_bleReset 62CC  
                                _TXREG1 000F9A                       ?_ifDcPlugInserted 0041  
                          ?_waitForDrdy 0041            __size_of_switchToHighFreqOsc 003E  
                    ??_ifDcPlugInserted 0044                            ?_timer0Setup 0041  
             __end_of_shootSoftSpiData8 5E90                                  _mcuCts 6330  
                                clear_0 5CB0                                  clear_1 5CC4  
                                clear_2 5CD8                                  clear_3 5CEA  
       ??_readAllADS1120configRegisters 0047                                  _my_isr 0008  
               __size_of_readDataSensor 002E                _calibrationSecurityCheck 4FFF  
           __p_codeRevisionNumber_const FFFE                            __pdataCOMRAM 005B  
                          _bleJustReset 00E4                      _calibrationColours 00CC  
                          __mediumconst 4FFE                                  tblptrh 000FF7  
                                tblptrl 000FF6                      shootSoftSpiData8@n 0045  
                                tblptru 000FF8                  __size_of_initialiseAdc 002C  
                __size_of_initialiseDac 0018                           ?_messageMatch 004A  
                ?_initialiseBlueToothIo 0041                              __accesstop 0060  
               __end_of__initialization 5CFC                       _XReceiveBTMessage 59A6  
                           ?_ReadEEByte 0044              __end_of_codeRevisionNumber 0000  
                         ___rparam_used 000001                      ?_XReceiveBTMessage 0041  
                        _batteryVoltage 00C2                ?_readInCalibrationPoints 0041  
                        __pcstackCOMRAM 0041                            __pidataBANK0 62E6  
                          __pidataBANK1 6348                          _ads1120Config0 00CB  
                        _ads1120Config1 00CA                          _ads1120Config2 00C9  
                        _ads1120Config3 00C8                   _interrupt_normal_code 5B02  
                         __end_of_delay 62B0                     ??_XReceiveBTMessage 0051  
           ?_initialiseVoltageReference 0041                      __size_of_ledColour 0046  
               XBLE_state_manage@dataId 00B2              __end_of_constReserveMemory 4040  
                        ??_messageMatch 004C                                 ??_delay 0044  
                            _flag25mSec 00BC               __end_of_XReceiveBTMessage 5B02  
                            __pbssBANK0 0060                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                    __size_of_mcuRtsLow 0004                           ??_WriteEEByte 0047  
    __size_of_Xble_cmd_attributes_write 005A                          _analyseBleRxIn 5D6C  
                    _autoCalibrationLsb 00C3                      _autoCalibrationMsb 00C4  
                          _T2CLKCONbits 000FBF                           _initialiseAdc 61A4  
                         _initialiseDac 6300              __size_of_shootSoftSpiData8 005E  
          __end_of_initialiseBitBashSpi 6330                                 ?_mcuCts 0041  
                   messageMatch@command 004B                                 ?_my_isr 0041  
                   __size_of_ReadEEByte 0028                               ?_bleReset 0041  
 __end_of_readAllADS1120configRegisters 5FEC  __size_of_readAllADS1120configRegisters 0050  
         _readAllADS1120configRegisters 5F9C                                 _NVMADRH 000F7F  
                               _NVMADRL 000F7E                                 _NVMCON2 000F82  
                      _readSoftSpiData8 5F46                         ledColour@colour 0044  
              __size_of_calibrationStow 0062                  __end_of_analyseBleRxIn 5DD0  
               ??_Xble_cmd_gap_set_mode 0045                               _ADREFbits 000F58  
                        ?_initialiseAdc 0041                          ?_initialiseDac 0041  
                     __end_of_ledColour 60C8               XReceiveBTMessage@BTHeader 00A0  
                               __Hparam 0000                         messageMatch@cls 004A  
                      _solidColourTimer 00B6                                 __Lparam 0000  
                            _mcuRtsHigh 6390                  ?_interrupt_normal_code 0041  
                  __size_of_waitForDrdy 0010                     __end_of_WriteEEByte 6082  
                       __size_of_mcuCts 0018                                 _dataSet 0100  
                         _bleReadyStore 00BE                                 _datasIn 0074  
                               __pcinit 5C56                    __size_of_timer0Setup 0022  
                               __ramtop 0F00                          _readDataSensor 6176  
                               __ptext0 5014                                 __ptext1 61D0  
                               __ptext2 626C                                 __ptext3 6106  
                               __ptext4 60C8                                 __ptext5 5FEC  
                               __ptext6 5E90                                 __ptext7 61FA  
                               __ptext8 5F9C                                 __ptext9 638C  
                       __size_of_my_isr 001A                       __end_of_mcuRtsLow 6390  
                         ?_setupADS1120 0041                               _T2CONbits 000FBD  
                            ??_bleReset 0044                     _switchToHighFreqOsc 60C8  
            ?_initialiseIoBitsAndPieces 0041                                 _payload 0300  
                   _bleBufferDepthCount 00A6              __size_of_XReceiveBTMessage 015C  
                  end_of_initialization 5CFC                              _periodFlag 00C5  
                            _uart1Setup 61D0                     _calibrationFlagsSet 0088  
                       ?_analyseBleRxIn 0041                XReceiveBTMessage@pLength 00B4  
                  ?_switchToHighFreqOsc 0041                 __size_of_initialiseLeds 0012  
                               postdec1 000FE5                    __end_of_messageMatch 56A6  
                               postinc0 000FEE                  __end_of_readDataSensor 61A4  
                        ??_setupADS1120 0047               __size_of_ifDcPlugInserted 0066  
                             _PORTAbits 000F8D                               _TRISAbits 000F88  
                             _TRISBbits 000F89              __end_of_switchToLowFreqOsc 6140  
               ??_initialiseBlueToothIo 0044                               _TRISCbits 000F8A  
                             _TRISDbits 000F8B                               _TRISEbits 000F8C  
                  _initialiseBitBashSpi 6318                      shootUart1Data@data 0044  
                          ??_ReadEEByte 0046                         ??_initialiseAdc 0044  
                       ??_initialiseDac 0044                   ??_switchToHighFreqOsc 0044  
                           _WriteEEByte 603A                             ?_mcuRtsHigh 0041  
                     ??_calibrationStow 0049                         ?_readDataSensor 0041  
                    _codeRevisionNumber FFFE                           __pidataCOMRAM 6394  
               __size_of_shootUart1Data 0036                          __end_of_mcuCts 6348  
                        __end_of_my_isr 0022                      __end_of_ReadEEByte 6222  
      __size_of_readInCalibrationPoints 005C                     start_initialization 5C56  
                     calibrationStow@id 0049                   ?_initialiseBitBashSpi 0041  
                           ?_uart1Setup 0041                       messageMatch@hilen 004E  
                    _constReserveMemory 4000                XBLE_state_manage@countId 00BF  
              __end_of_readSoftSpiData8 5F9C                             _bleRxBuffer 0200  
                           __pdataBANK0 00CC                             __pdataBANK1 0100  
                              ??_mcuCts 0044                             _bleTxBuffer 0400  
                              ??_my_isr 0042        __p_reservedFlashDataMemory_const 4040  
                           __pbssCOMRAM 0055                           __pcstackBANK0 00E5  
                     __size_of_bleReset 001C                     __size_of_mcuRtsHigh 0004  
               _reservedFlashDataMemory 4040                  XBLE_state_manage@value 00C0  
                  __end_of_setupADS1120 603A                 ??_interrupt_normal_code 0041  
                 __size_of_messageMatch 033C          __size_of_Xble_cmd_gap_set_mode 0026  
         __end_of_Xble_cmd_gap_set_mode 6248                          _initialiseLeds 635C  
                          _secTimeCount 00A4        __end_of_calibrationSecurityCheck 5013  
                             __pintcode 0008                           __pmediumconst 4FFE  
                             _ledColour 6082                               _blueTimer 0057  
                             _blueState 005B                                _DAC1CON1 000F34  
       _constReserveMemory_absconstaddr 004000                        _ifDcPlugInserted 5D06  
                   __size_of_uart1Setup 002A         _codeRevisionNumber_absconstaddr 00FFFE  
           ??_initialiseIoBitsAndPieces 0044                               _mcuRtsLow 638C  
                ??_initialiseBitBashSpi 0044                          __size_of_delay 0022  
               XReceiveBTMessage@BTdata 0053                        ??_analyseBleRxIn 0054  
                          _messageMatch 536A                                _LATAbits 000F83  
                              _LATBbits 000F84                                _LATCbits 000F85  
                              _LATDbits 000F86                                _LATEbits 000F87  
                __end_of_initialiseLeds 636E                                _PIE0bits 000EC2  
                         ??_waitForDrdy 0044                                _PIE3bits 000EC5  
                shootSoftSpiData8@shift 0046                                i2u190_40 5BD6  
                              i2u190_41 5BD2                                i2u191_40 5BF6  
                              i2u183_40 5B10                                i2u191_41 5BF2  
                              i2u183_41 5B0C                                _PIR0bits 000ECA  
                              i2u192_40 5C14                                i2u184_40 5B24  
                              i2u192_41 5C10                                i2u184_41 5B20  
                              i2u193_40 5C2A                                i2u185_40 5B3C  
                              i2u193_41 5C26                                i2u185_41 5B38  
                              i2u194_40 5C48                                i2u186_40 5B68  
                              i2u194_41 5C44                                i2u186_41 5B64  
                              i2u187_40 5B84                                i2u187_41 5B80  
                              i2u188_40 5B9A                                i2u188_41 5B96  
                              i2u189_40 5BBC                                i2u189_41 5BB8  
                              _PIR3bits 000ECD                                _PIR4bits 000ECE  
                      _bleRxOutOfBuffer 00AC                           ??_timer0Setup 0044  
                             _sensorLsb 0059                               _sensorMsb 005A  
                            ?_ledColour 0041              ?_Xble_cmd_attributes_write 0041  
                        _shootUart1Data 6140              Xble_cmd_attributes_write@n 0045  
                            _ADCON0bits 000F60                 _readInCalibrationPoints 5E90  
                            ?_mcuRtsLow 0041             XBLE_state_manage@historyLsb 00DC  
           XBLE_state_manage@historyMsb 00D4          __size_of_initialiseBlueToothIo 001A  
                     ReadEEByte@address 0044           __end_of_initialiseBlueToothIo 62E6  
                             copy_data0 5C6A                               copy_data1 5C8A  
                       _calibrationStow 5DD0                         ?_initialiseLeds 0041  
                    _switchToLowFreqOsc 6106                            ?_WriteEEByte 0044  
                      ??_readDataSensor 0047               _initialiseIoBitsAndPieces 637E  
                              __Hrparam 0000                            ??_mcuRtsHigh 0044  
                              __Lrparam 0000                       readSoftSpiData8@n 0044  
                __end_of_shootUart1Data 6176                     ?_switchToLowFreqOsc 0041  
                   __end_of_waitForDrdy 637E       __end_of_Xble_cmd_attributes_write 5F46  
                       _bleRxIntoBuffer 00AE                     __end_of_timer0Setup 628E  
                              _bleReady 00C6                                _bleReset 62B0  
                 readSoftSpiData8@build 0045            ??_initialiseVoltageReference 0044  
                         setupADS1120@d 0047                              _T0CON0bits 000FD5  
                            _T0CON1bits 000FD6                   readSoftSpiData8@shift 0046  
                              _datasOut 0060                             _secTimeFlag 00B8  
                              __ptext10 6390                                __ptext11 6248  
                              __ptext20 59A6                                __ptext12 635C  
                              __ptext21 536A                                __ptext13 637E  
                              __ptext30 628E                                __ptext22 5DD0  
                              __ptext14 6300                                __ptext31 62B0  
                              __ptext23 6082                                __ptext15 62CC  
                              __ptext32 6222                                __ptext24 603A  
                              __ptext16 6318                                __ptext33 5EEC  
                              __ptext25 56A6                                __ptext17 61A4  
                              __ptext34 6140                                __ptext26 6176  
                              __ptext18 5D06                                __ptext35 6330  
                              __ptext27 636E                                __ptext19 5D6C  
                              __ptext28 5E32                                __ptext37 5B02  
                              __ptext29 5F46                                _ledCount 00BA  
                  ??_switchToLowFreqOsc 0044                      __end_of_mcuRtsHigh 6394  
                 __size_of_setupADS1120 004E             __end_of_switchToHighFreqOsc 6106  
                           _OSCCON1bits 000ED8                             _OSCCON3bits 000EDA  
                          ??_uart1Setup 0044                           __size_of_main 0356  
                 __end_of_initialiseAdc 61D0                   __end_of_initialiseDac 6318  
                 shootSoftSpiData8@data 0044                        _bleTxOutOfBuffer 00A8  
       __end_of_reservedFlashDataMemory 4FFE                         ?_shootUart1Data 0041  
                              int$flags 005C                             ??_ledColour 0044  
                     ?_readSoftSpiData8 0041     __size_of_initialiseVoltageReference 0024  
                          _normalOrBoot 000000               ??_readInCalibrationPoints 0048  
                              main@argc 00E5                                main@argv 00E7  
                       _bleTxIntoBuffer 00AA                       _XBLE_state_manage 56A6  
                    ??_readSoftSpiData8 0044                      ?_XBLE_state_manage 0041  
                          _setupADS1120 5FEC                      __end_of_uart1Setup 61FA  
                           _periodTimer 00B0             __p_constReserveMemory_const 4000  
                            _INTCONbits 000FF2                             _NVMCON1bits 000F81  
               __end_of_calibrationStow 5E32                              _FVRCONbits 000F31  
                           ??_mcuRtsLow 0044                     ??_XBLE_state_manage 0048  
                              intlevel2 0000                            _DAC1CON0bits 000F33  
  _reservedFlashDataMemory_absconstaddr 004040                __end_of_ifDcPlugInserted 5D6C  
        ?_readAllADS1120configRegisters 0041                              _RCSTA1bits 000F9D  
                           _waitForDrdy 636E          __size_of_interrupt_normal_code 0154  
         __end_of_interrupt_normal_code 5C56                             _timer25mSec 00BD  
             __end_of_XBLE_state_manage 59A6                             _timer0Setup 626C  
                  _calibrationPointsLSB 0098                    _calibrationPointsMSB 0090  
       __end_of_readInCalibrationPoints 5EEC                             _solidColour 00C7  
                    readDataSensor@data 0047  
